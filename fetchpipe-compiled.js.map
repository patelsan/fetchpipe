{"version":3,"sources":["fetchpipe.js"],"names":[],"mappings":"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","file":"fetchpipe-compiled.js","sourcesContent":["(() => {\n    'use strict';\n\n    if (!self.fetch) {\n        throw new Error(\"Your environment doesn't support Fetch API, please use the polyfill.\");\n        return;\n    }\n\n    //Handlers\n    var successHandlers = [];\n    var errorHandlers = [];\n    var requestHandlers = [];\n\n    //FetchPipe function\n    self.fetchPipe = (input, init) => {\n        var p = new Promise((resolve, reject) => {\n            //Call request handlers\n            if (!init) {\n                init = {};\n            }\n\n            handleRequest(input, init);\n\n            //Make the actual call\n            fetch(input, init).then((r) => {\n                if (r.status >= 200 && r.status < 300) {\n                    //Call the chain of handlers before resolving it\n                    var updatedReply = handleSuccess(r);\n                    //Send the result of the success handler\n                    resolve(updatedReply);\n                } else {\n                    handleError(r, reject);\n                }\n\n            }).catch((e) => {\n                handleError(e, reject);\n            });\n        });\n\n        return p;\n    };\n\n    //Call the registered handlers\n    function handleRequest(request, options) {\n        if (requestHandlers.length == 0) {\n            return;\n        }\n\n        requestHandlers.forEach((handler) => {\n            handler(request, options);\n        });\n    }\n\n    function handleSuccess(r) {\n        if (successHandlers.length == 0) {\n            return r;\n        }\n\n        if (successHandlers.length > 0) {\n            var updatedReply = r;\n            successHandlers.forEach((handler) => {\n                updatedReply = handler(updatedReply); //Original could also be passed as sencon arg\n            });\n        }\n\n        return updatedReply;\n    }\n\n    function handleError(r, reject) {\n        if (errorHandlers.length == 0) {\n            reject(r);\n            return;\n        }\n\n        errorHandlers.forEach((handler) => {\n            handler(r);\n        });\n\n        reject(r);\n    }\n\n    //Register your handler/ interceptors: each handler should be registered only once, typically when your application is starting\n    self.fetchPipe.onSuccess = (handler) => {\n        successHandlers.push(handler);\n    };\n\n    self.fetchPipe.onError = (handler) => {\n        errorHandlers.push(handler);\n    };\n\n    self.fetchPipe.onRequest = (handler) => {\n        requestHandlers.push(handler);\n    };\n\n    self.fetchPipe.removeAllHandlers = ()=> {\n        successHandlers = [];\n        errorHandlers = [];\n        requestHandlers = [];\n    };\n\n})();\n\n//----------------> Consumer code starts here \n\n\nfetchPipe.onError((r) => {\n    console.log(\"FROM ERROR HANDLER: \", r);\n    return r;\n});\n\nfetchPipe.onRequest((request, options) => {\n    console.log(\"FROM REQUEST HANDLER: \", request);\n    if (!options.headers) {\n        options.headers = {};\n    }\n\n    options.headers[\"authtoken\"] = 'xxyyy';\n});\n\n//Success scenario\nfetchPipe(\"http://jsonplaceholder.typicode.com/posts/1\").then((r) => {\n    console.log(r);\n}).catch((e) => {\n    console.log(\"ERROR: \", e);\n});\n\n//Passheaders:\nfetchPipe(\"http://jsonplaceholder.typicode.com/posts/1\", {\n    headers: {\n        \"SomeOtherToken\": \"1234\"\n    }\n}).then((r) => {\n    console.log(r);\n}).catch((e) => {\n    console.log(\"ERROR: \", e);\n});"]}