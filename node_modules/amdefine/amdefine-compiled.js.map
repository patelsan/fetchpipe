{"version":3,"sources":["amdefine.js"],"names":[],"mappings":"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","file":"amdefine-compiled.js","sourcesContent":["/** vim: et:ts=4:sw=4:sts=4\n * @license amdefine 1.0.0 Copyright (c) 2011-2015, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/amdefine for details\n */\n\n/*jslint node: true */\n/*global module, process */\n'use strict';\n\n/**\n * Creates a define for node.\n * @param {Object} module the \"module\" object that is defined by Node for the\n * current module.\n * @param {Function} [requireFn]. Node's require function for the current module.\n * It only needs to be passed in Node versions before 0.5, when module.require\n * did not exist.\n * @returns {Function} a define function that is usable for the current node\n * module.\n */\nfunction amdefine(module, requireFn) {\n    'use strict';\n    var defineCache = {},\n        loaderCache = {},\n        alreadyCalled = false,\n        path = require('path'),\n        makeRequire, stringRequire;\n\n    /**\n     * Trims the . and .. from an array of path segments.\n     * It will keep a leading path segment if a .. will become\n     * the first path segment, to help with module name lookups,\n     * which act like paths, but can be remapped. But the end result,\n     * all paths that use this function should look normalized.\n     * NOTE: this method MODIFIES the input array.\n     * @param {Array} ary the array of path segments.\n     */\n    function trimDots(ary) {\n        var i, part;\n        for (i = 0; ary[i]; i+= 1) {\n            part = ary[i];\n            if (part === '.') {\n                ary.splice(i, 1);\n                i -= 1;\n            } else if (part === '..') {\n                if (i === 1 && (ary[2] === '..' || ary[0] === '..')) {\n                    //End of the line. Keep at least one non-dot\n                    //path segment at the front so it can be mapped\n                    //correctly to disk. Otherwise, there is likely\n                    //no path mapping for a path starting with '..'.\n                    //This can still fail, but catches the most reasonable\n                    //uses of ..\n                    break;\n                } else if (i > 0) {\n                    ary.splice(i - 1, 2);\n                    i -= 2;\n                }\n            }\n        }\n    }\n\n    function normalize(name, baseName) {\n        var baseParts;\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === '.') {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                baseParts = baseName.split('/');\n                baseParts = baseParts.slice(0, baseParts.length - 1);\n                baseParts = baseParts.concat(name.split('/'));\n                trimDots(baseParts);\n                name = baseParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    /**\n     * Create the normalize() function passed to a loader plugin's\n     * normalize method.\n     */\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(id) {\n        function load(value) {\n            loaderCache[id] = value;\n        }\n\n        load.fromText = function (id, text) {\n            //This one is difficult because the text can/probably uses\n            //define, and any relative paths and requires should be relative\n            //to that id was it would be found on disk. But this would require\n            //bootstrapping a module/require fairly deeply from node core.\n            //Not sure how best to go about that yet.\n            throw new Error('amdefine does not implement load.fromText');\n        };\n\n        return load;\n    }\n\n    makeRequire = function (systemRequire, exports, module, relId) {\n        function amdRequire(deps, callback) {\n            if (typeof deps === 'string') {\n                //Synchronous, single module require('')\n                return stringRequire(systemRequire, exports, module, deps, relId);\n            } else {\n                //Array of dependencies with a callback.\n\n                //Convert the dependencies to modules.\n                deps = deps.map(function (depName) {\n                    return stringRequire(systemRequire, exports, module, depName, relId);\n                });\n\n                //Wait for next tick to call back the require call.\n                if (callback) {\n                    process.nextTick(function () {\n                        callback.apply(null, deps);\n                    });\n                }\n            }\n        }\n\n        amdRequire.toUrl = function (filePath) {\n            if (filePath.indexOf('.') === 0) {\n                return normalize(filePath, path.dirname(module.filename));\n            } else {\n                return filePath;\n            }\n        };\n\n        return amdRequire;\n    };\n\n    //Favor explicit value, passed in if the module wants to support Node 0.4.\n    requireFn = requireFn || function req() {\n        return module.require.apply(module, arguments);\n    };\n\n    function runFactory(id, deps, factory) {\n        var r, e, m, result;\n\n        if (id) {\n            e = loaderCache[id] = {};\n            m = {\n                id: id,\n                uri: __filename,\n                exports: e\n            };\n            r = makeRequire(requireFn, e, m, id);\n        } else {\n            //Only support one define call per file\n            if (alreadyCalled) {\n                throw new Error('amdefine with no module ID cannot be called more than once per file.');\n            }\n            alreadyCalled = true;\n\n            //Use the real variables from node\n            //Use module.exports for exports, since\n            //the exports in here is amdefine exports.\n            e = module.exports;\n            m = module;\n            r = makeRequire(requireFn, e, m, module.id);\n        }\n\n        //If there are dependencies, they are strings, so need\n        //to convert them to dependency values.\n        if (deps) {\n            deps = deps.map(function (depName) {\n                return r(depName);\n            });\n        }\n\n        //Call the factory with the right dependencies.\n        if (typeof factory === 'function') {\n            result = factory.apply(m.exports, deps);\n        } else {\n            result = factory;\n        }\n\n        if (result !== undefined) {\n            m.exports = result;\n            if (id) {\n                loaderCache[id] = m.exports;\n            }\n        }\n    }\n\n    stringRequire = function (systemRequire, exports, module, id, relId) {\n        //Split the ID by a ! so that\n        var index = id.indexOf('!'),\n            originalId = id,\n            prefix, plugin;\n\n        if (index === -1) {\n            id = normalize(id, relId);\n\n            //Straight module lookup. If it is one of the special dependencies,\n            //deal with it, otherwise, delegate to node.\n            if (id === 'require') {\n                return makeRequire(systemRequire, exports, module, relId);\n            } else if (id === 'exports') {\n                return exports;\n            } else if (id === 'module') {\n                return module;\n            } else if (loaderCache.hasOwnProperty(id)) {\n                return loaderCache[id];\n            } else if (defineCache[id]) {\n                runFactory.apply(null, defineCache[id]);\n                return loaderCache[id];\n            } else {\n                if(systemRequire) {\n                    return systemRequire(originalId);\n                } else {\n                    throw new Error('No module with ID: ' + id);\n                }\n            }\n        } else {\n            //There is a plugin in play.\n            prefix = id.substring(0, index);\n            id = id.substring(index + 1, id.length);\n\n            plugin = stringRequire(systemRequire, exports, module, prefix, relId);\n\n            if (plugin.normalize) {\n                id = plugin.normalize(id, makeNormalize(relId));\n            } else {\n                //Normalize the ID normally.\n                id = normalize(id, relId);\n            }\n\n            if (loaderCache[id]) {\n                return loaderCache[id];\n            } else {\n                plugin.load(id, makeRequire(systemRequire, exports, module, relId), makeLoad(id), {});\n\n                return loaderCache[id];\n            }\n        }\n    };\n\n    //Create a define function specific to the module asking for amdefine.\n    function define(id, deps, factory) {\n        if (Array.isArray(id)) {\n            factory = deps;\n            deps = id;\n            id = undefined;\n        } else if (typeof id !== 'string') {\n            factory = id;\n            id = deps = undefined;\n        }\n\n        if (deps && !Array.isArray(deps)) {\n            factory = deps;\n            deps = undefined;\n        }\n\n        if (!deps) {\n            deps = ['require', 'exports', 'module'];\n        }\n\n        //Set up properties for this module. If an ID, then use\n        //internal cache. If no ID, then use the external variables\n        //for this node module.\n        if (id) {\n            //Put the module in deep freeze until there is a\n            //require call for it.\n            defineCache[id] = [id, deps, factory];\n        } else {\n            runFactory(id, deps, factory);\n        }\n    }\n\n    //define.require, which has access to all the values in the\n    //cache. Useful for AMD modules that all have IDs in the file,\n    //but need to finally export a value to node based on one of those\n    //IDs.\n    define.require = function (id) {\n        if (loaderCache[id]) {\n            return loaderCache[id];\n        }\n\n        if (defineCache[id]) {\n            runFactory.apply(null, defineCache[id]);\n            return loaderCache[id];\n        }\n    };\n\n    define.amd = {};\n\n    return define;\n}\n\nmodule.exports = amdefine;\n"]}