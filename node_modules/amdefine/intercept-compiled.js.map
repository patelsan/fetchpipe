{"version":3,"sources":["intercept.js"],"names":[],"mappings":";;;AACA,IAAI,QAAQ;IACR,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC;IAC1B,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC;IAClB,aAAa,GAAG,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC;IACzC,cAAc,GAAG,cAAc,CAAC;;AAEpC,QAAQ,GAAI,8EAA8E,CAAC;;;AAG3F,SAAS,QAAQ,CAAC,OAAO,EAAE;;;;AAIvB,QAAI,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,MAAM,EAAE;AAClC,eAAO,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KAC9B;AACD,WAAO,OAAO,CAAC;CAClB;;;AAGD,SAAS,SAAS,CAAC,MAAM,EAAE,QAAQ,EAAE;AACjC,QAAI,OAAO,GAAG,QAAQ,CAAC,EAAE,CAAC,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;;AAE1D,QAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE;AACjC,eAAO,GAAG,QAAQ,GAAG,OAAO,CAAC;KAChC;;AAED,UAAM,CAAC,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;CACtC;;AAED,SAAS,CAAC,GAAG,GAAG,oBAAoB,CAAC;;AAErC,IAAI,CAAC,aAAa,CAAC,GAAG,IAAI,aAAa,CAAC,GAAG,KAAK,SAAS,CAAC,GAAG,EAAE;AAC3D,UAAM,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC;CACzC","file":"intercept-compiled.js","sourcesContent":["/*jshint node: true */\nvar inserted,\n    Module = require('module'),\n    fs = require('fs'),\n    existingExtFn = Module._extensions['.js'],\n    amdefineRegExp = /amdefine\\.js/;\n\ninserted  = \"if (typeof define !== 'function') {var define = require('amdefine')(module)}\";\n\n//From the node/lib/module.js source:\nfunction stripBOM(content) {\n    // Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n    // because the buffer-to-string conversion in `fs.readFileSync()`\n    // translates it to FEFF, the UTF-16 BOM.\n    if (content.charCodeAt(0) === 0xFEFF) {\n        content = content.slice(1);\n    }\n    return content;\n}\n\n//Also adapted from the node/lib/module.js source:\nfunction intercept(module, filename) {\n    var content = stripBOM(fs.readFileSync(filename, 'utf8'));\n\n    if (!amdefineRegExp.test(module.id)) {\n        content = inserted + content;\n    }\n\n    module._compile(content, filename);\n}\n\nintercept._id = 'amdefine/intercept';\n\nif (!existingExtFn._id || existingExtFn._id !== intercept._id) {\n    Module._extensions['.js'] = intercept;\n}\n"]}