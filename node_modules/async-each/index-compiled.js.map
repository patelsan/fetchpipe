{"version":3,"sources":["index.js"],"names":[],"mappings":";;;AACA,CAAC,UAAS,OAAO,EAAE;AACjB,cAAY,CAAC;AACb,MAAI,IAAI,GAAG,SAAP,IAAI,CAAY,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE;AACzC,QAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,MAAM,IAAI,SAAS,CAAC,wCAAwC,CAAC,CAAC;AACzF,QAAI,OAAO,IAAI,KAAK,UAAU,EAAE,MAAM,IAAI,SAAS,CAAC,4CAA4C,CAAC,CAAC;AAClG,QAAI,OAAO,QAAQ,KAAK,UAAU,EAAE,QAAQ,GAAG,QAAQ,CAAC,SAAS,CAAC;;AAElE,QAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE,OAAO,QAAQ,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;;AAE1D,QAAI,WAAW,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AAC1C,QAAI,KAAK,GAAG,CAAC,CAAC;AACd,QAAI,QAAQ,GAAG,KAAK,CAAC;;AAErB,SAAK,CAAC,OAAO,CAAC,UAAS,IAAI,EAAE,KAAK,EAAE;AAClC,UAAI,CAAC,IAAI,EAAE,UAAS,KAAK,EAAE,eAAe,EAAE;AAC1C,YAAI,QAAQ,EAAE,OAAO;AACrB,YAAI,KAAK,EAAE;AACT,kBAAQ,GAAG,IAAI,CAAC;AAChB,iBAAO,QAAQ,CAAC,KAAK,CAAC,CAAC;SACxB;AACD,mBAAW,CAAC,KAAK,CAAC,GAAG,eAAe,CAAC;AACrC,aAAK,IAAI,CAAC,CAAC;AACX,YAAI,KAAK,KAAK,KAAK,CAAC,MAAM,EAAE,OAAO,QAAQ,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;OACrE,CAAC,CAAC;KACJ,CAAC,CAAC;GACJ,CAAC;;AAEF,MAAI,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,GAAG,EAAE;AAC/C,UAAM,CAAC,EAAE,EAAE,YAAW;AACpB,aAAO,IAAI,CAAC;KACb,CAAC,CAAC;GACJ,MAAM,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,OAAO,EAAE;AAC1D,YAAM,CAAC,OAAO,GAAG,IAAI,CAAC;KACvB,MAAM;AACL,eAAO,CAAC,SAAS,GAAG,IAAI,CAAC;OAC1B;CACF,CAAA,WAAO,CAAC","file":"index-compiled.js","sourcesContent":["// async-each MIT license (by Paul Miller from http://paulmillr.com).\n(function(globals) {\n  'use strict';\n  var each = function(items, next, callback) {\n    if (!Array.isArray(items)) throw new TypeError('each() expects array as first argument');\n    if (typeof next !== 'function') throw new TypeError('each() expects function as second argument');\n    if (typeof callback !== 'function') callback = Function.prototype; // no-op\n\n    if (items.length === 0) return callback(undefined, items);\n\n    var transformed = new Array(items.length);\n    var count = 0;\n    var returned = false;\n\n    items.forEach(function(item, index) {\n      next(item, function(error, transformedItem) {\n        if (returned) return;\n        if (error) {\n          returned = true;\n          return callback(error);\n        }\n        transformed[index] = transformedItem;\n        count += 1;\n        if (count === items.length) return callback(undefined, transformed);\n      });\n    });\n  };\n\n  if (typeof define !== 'undefined' && define.amd) {\n    define([], function() {\n      return each;\n    }); // RequireJS\n  } else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = each; // CommonJS\n  } else {\n    globals.asyncEach = each; // <script>\n  }\n})(this);\n"]}