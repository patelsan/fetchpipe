{"version":3,"sources":["browser.js"],"names":[],"mappings":"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","file":"browser-compiled.js","sourcesContent":["/* eslint no-new-func: 0 */\n\n\"use strict\";\n\nrequire(\"./node\");\nvar transform = module.exports = require(\"../transformation\");\n\n/**\n * Add `options` and `version` to `babel` global.\n */\n\ntransform.options = require(\"../transformation/file/options\");\ntransform.version = require(\"../../package\").version;\n\n/**\n * Add `transform` api to `babel` global.\n */\n\ntransform.transform = transform;\n\n/**\n * Tranform and execute script, adding in inline sourcemaps.\n */\n\ntransform.run = function (code) {\n  var opts = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n  opts.sourceMaps = \"inline\";\n  return new Function(transform(code, opts).code)();\n};\n\n/**\n * Load scripts via xhr, and `transform` when complete (optional).\n */\n\ntransform.load = function (url, callback, opts, hold) {\n  if (opts === undefined) opts = {};\n\n  opts.filename = opts.filename || url;\n\n  var xhr = global.ActiveXObject ? new global.ActiveXObject(\"Microsoft.XMLHTTP\") : new global.XMLHttpRequest();\n  xhr.open(\"GET\", url, true);\n  if (\"overrideMimeType\" in xhr) xhr.overrideMimeType(\"text/plain\");\n\n  /**\n   * When successfully loaded, transform (optional), and call `callback`.\n   */\n\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState !== 4) return;\n\n    var status = xhr.status;\n    if (status === 0 || status === 200) {\n      var param = [xhr.responseText, opts];\n      if (!hold) transform.run.apply(transform, param);\n      if (callback) callback(param);\n    } else {\n      throw new Error(\"Could not load \" + url);\n    }\n  };\n\n  xhr.send(null);\n};\n\n/**\n * Load and transform all scripts of `types`.\n *\n * @example\n * <script type=\"module\"></script>\n */\n\nvar runScripts = function runScripts() {\n  var scripts = [];\n  var types = [\"text/ecmascript-6\", \"text/6to5\", \"text/babel\", \"module\"];\n  var index = 0;\n\n  /**\n   * Transform and execute script. Ensures correct load order.\n   */\n\n  var exec = function exec() {\n    var param = scripts[index];\n    if (param instanceof Array) {\n      transform.run.apply(transform, param);\n      index++;\n      exec();\n    }\n  };\n\n  /**\n   * Load, transform, and execute all scripts.\n   */\n\n  var run = function run(script, i) {\n    var opts = {};\n\n    if (script.src) {\n      transform.load(script.src, function (param) {\n        scripts[i] = param;\n        exec();\n      }, opts, true);\n    } else {\n      opts.filename = \"embedded\";\n      scripts[i] = [script.innerHTML, opts];\n    }\n  };\n\n  // Collect scripts with Babel `types`.\n\n  var _scripts = global.document.getElementsByTagName(\"script\");\n\n  for (var i = 0; i < _scripts.length; ++i) {\n    var _script = _scripts[i];\n    if (types.indexOf(_script.type) >= 0) scripts.push(_script);\n  }\n\n  for (i in scripts) {\n    run(scripts[i], i);\n  }\n\n  exec();\n};\n\n/**\n * Register load event to transform and execute scripts.\n */\n\nif (global.addEventListener) {\n  global.addEventListener(\"DOMContentLoaded\", runScripts, false);\n} else if (global.attachEvent) {\n  global.attachEvent(\"onload\", runScripts);\n}"]}