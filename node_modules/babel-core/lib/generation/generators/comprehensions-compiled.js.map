{"version":3,"sources":["comprehensions.js"],"names":[],"mappings":";;;;AAIA,YAAY,CAAC;;AAEb,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC;AAC1B,OAAO,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;AAChD,OAAO,CAAC,uBAAuB,GAAG,uBAAuB,CAAC;;AAE1D,SAAS,kBAAkB,CAAC,IAAI,EAAE,KAAK,EAAE;AACvC,MAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AACpB,MAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACf,OAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACvB,MAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAClB,OAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACxB,MAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CAChB;;;;;;AAMD,SAAS,uBAAuB,CAAC,IAAI,EAAE,KAAK,EAAE;AAC5C,MAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;;AAEtC,OAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC;AAC5C,MAAI,CAAC,KAAK,EAAE,CAAC;;AAEb,MAAI,IAAI,CAAC,MAAM,EAAE;AACf,QAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACnB,QAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACf,SAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACzB,QAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACf,QAAI,CAAC,KAAK,EAAE,CAAC;GACd;;AAED,OAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AAEvB,MAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;CACvC","file":"comprehensions-compiled.js","sourcesContent":["/**\n * Prints ComprehensionBlock, prints left and right.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\nexports.ComprehensionBlock = ComprehensionBlock;\nexports.ComprehensionExpression = ComprehensionExpression;\n\nfunction ComprehensionBlock(node, print) {\n  this.keyword(\"for\");\n  this.push(\"(\");\n  print.plain(node.left);\n  this.push(\" of \");\n  print.plain(node.right);\n  this.push(\")\");\n}\n\n/**\n * Prints ComprehensionExpression, prints blocks, filter, and body. Handles generators.\n */\n\nfunction ComprehensionExpression(node, print) {\n  this.push(node.generator ? \"(\" : \"[\");\n\n  print.join(node.blocks, { separator: \" \" });\n  this.space();\n\n  if (node.filter) {\n    this.keyword(\"if\");\n    this.push(\"(\");\n    print.plain(node.filter);\n    this.push(\")\");\n    this.space();\n  }\n\n  print.plain(node.body);\n\n  this.push(node.generator ? \")\" : \"]\");\n}"]}