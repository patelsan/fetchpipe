{"version":3,"sources":["expressions.js"],"names":[],"mappings":"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","file":"expressions-compiled.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.UnaryExpression = UnaryExpression;\nexports.DoExpression = DoExpression;\nexports.ParenthesizedExpression = ParenthesizedExpression;\nexports.UpdateExpression = UpdateExpression;\nexports.ConditionalExpression = ConditionalExpression;\nexports.NewExpression = NewExpression;\nexports.SequenceExpression = SequenceExpression;\nexports.ThisExpression = ThisExpression;\nexports.Super = Super;\nexports.Decorator = Decorator;\nexports.CallExpression = CallExpression;\nexports.EmptyStatement = EmptyStatement;\nexports.ExpressionStatement = ExpressionStatement;\nexports.AssignmentPattern = AssignmentPattern;\nexports.AssignmentExpression = AssignmentExpression;\nexports.BindExpression = BindExpression;\nexports.MemberExpression = MemberExpression;\nexports.MetaProperty = MetaProperty;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _isInteger = require(\"is-integer\");\n\nvar _isInteger2 = _interopRequireDefault(_isInteger);\n\nvar _lodashLangIsNumber = require(\"lodash/lang/isNumber\");\n\nvar _lodashLangIsNumber2 = _interopRequireDefault(_lodashLangIsNumber);\n\nvar _types = require(\"../../types\");\n\nvar t = _interopRequireWildcard(_types);\n\n/**\n * RegExp for testing scientific notation in literals.\n */\n\nvar SCIENTIFIC_NOTATION = /e/i;\n\n/**\n * Prints UnaryExpression, prints operator and argument.\n */\n\nfunction UnaryExpression(node, print) {\n  var needsSpace = /[a-z]$/.test(node.operator);\n  var arg = node.argument;\n\n  if (t.isUpdateExpression(arg) || t.isUnaryExpression(arg)) {\n    needsSpace = true;\n  }\n\n  if (t.isUnaryExpression(arg) && arg.operator === \"!\") {\n    needsSpace = false;\n  }\n\n  this.push(node.operator);\n  if (needsSpace) this.push(\" \");\n  print.plain(node.argument);\n}\n\n/**\n * Prints DoExpression, prints body.\n */\n\nfunction DoExpression(node, print) {\n  this.push(\"do\");\n  this.space();\n  print.plain(node.body);\n}\n\n/**\n * Prints ParenthesizedExpression, prints expression.\n */\n\nfunction ParenthesizedExpression(node, print) {\n  this.push(\"(\");\n  print.plain(node.expression);\n  this.push(\")\");\n}\n\n/**\n * Prints UpdateExpression, prints operator and argument.\n */\n\nfunction UpdateExpression(node, print) {\n  if (node.prefix) {\n    this.push(node.operator);\n    print.plain(node.argument);\n  } else {\n    print.plain(node.argument);\n    this.push(node.operator);\n  }\n}\n\n/**\n * Prints ConditionalExpression, prints test, consequent, and alternate.\n */\n\nfunction ConditionalExpression(node, print) {\n  print.plain(node.test);\n  this.space();\n  this.push(\"?\");\n  this.space();\n  print.plain(node.consequent);\n  this.space();\n  this.push(\":\");\n  this.space();\n  print.plain(node.alternate);\n}\n\n/**\n * Prints NewExpression, prints callee and arguments.\n */\n\nfunction NewExpression(node, print) {\n  this.push(\"new \");\n  print.plain(node.callee);\n  this.push(\"(\");\n  print.list(node.arguments);\n  this.push(\")\");\n}\n\n/**\n * Prints SequenceExpression.expressions.\n */\n\nfunction SequenceExpression(node, print) {\n  print.list(node.expressions);\n}\n\n/**\n * Prints ThisExpression.\n */\n\nfunction ThisExpression() {\n  this.push(\"this\");\n}\n\n/**\n * Prints Super.\n */\n\nfunction Super() {\n  this.push(\"super\");\n}\n\n/**\n * Prints Decorator, prints expression.\n */\n\nfunction Decorator(node, print) {\n  this.push(\"@\");\n  print.plain(node.expression);\n  this.newline();\n}\n\n/**\n * Prints CallExpression, prints callee and arguments.\n */\n\nfunction CallExpression(node, print) {\n  print.plain(node.callee);\n\n  this.push(\"(\");\n\n  var isPrettyCall = node._prettyCall && !this.format.retainLines && !this.format.compact;\n\n  var separator;\n  if (isPrettyCall) {\n    separator = \",\\n\";\n    this.newline();\n    this.indent();\n  }\n\n  print.list(node.arguments, { separator: separator });\n\n  if (isPrettyCall) {\n    this.newline();\n    this.dedent();\n  }\n\n  this.push(\")\");\n}\n\n/**\n * Builds yield or await expression printer.\n * Prints delegate, all, and argument.\n */\n\nvar buildYieldAwait = function buildYieldAwait(keyword) {\n  return function (node, print) {\n    this.push(keyword);\n\n    if (node.delegate || node.all) {\n      this.push(\"*\");\n    }\n\n    if (node.argument) {\n      this.push(\" \");\n      var terminatorState = this.startTerminatorless();\n      print.plain(node.argument);\n      this.endTerminatorless(terminatorState);\n    }\n  };\n};\n\n/**\n * Create YieldExpression and AwaitExpression printers.\n */\n\nvar YieldExpression = buildYieldAwait(\"yield\");\nexports.YieldExpression = YieldExpression;\nvar AwaitExpression = buildYieldAwait(\"await\");\n\nexports.AwaitExpression = AwaitExpression;\n/**\n * Prints EmptyStatement.\n */\n\nfunction EmptyStatement() {\n  this.semicolon();\n}\n\n/**\n * Prints ExpressionStatement, prints expression.\n */\n\nfunction ExpressionStatement(node, print) {\n  print.plain(node.expression);\n  this.semicolon();\n}\n\n/**\n * Prints AssignmentPattern, prints left and right.\n */\n\nfunction AssignmentPattern(node, print) {\n  print.plain(node.left);\n  this.push(\" = \");\n  print.plain(node.right);\n}\n\n/**\n * Prints AssignmentExpression, prints left, operator, and right.\n */\n\nfunction AssignmentExpression(node, print) {\n  // todo: add cases where the spaces can be dropped when in compact mode\n  print.plain(node.left);\n\n  var spaces = node.operator === \"in\" || node.operator === \"instanceof\";\n  spaces = true; // todo: https://github.com/babel/babel/issues/1835\n  this.space(spaces);\n\n  this.push(node.operator);\n\n  if (!spaces) {\n    // space is mandatory to avoid outputting <!--\n    // http://javascript.spec.whatwg.org/#comment-syntax\n    spaces = node.operator === \"<\" && t.isUnaryExpression(node.right, { prefix: true, operator: \"!\" }) && t.isUnaryExpression(node.right.argument, { prefix: true, operator: \"--\" });\n  }\n\n  this.space(spaces);\n\n  print.plain(node.right);\n}\n\n/**\n * Prints BindExpression, prints object and callee.\n */\n\nfunction BindExpression(node, print) {\n  print.plain(node.object);\n  this.push(\"::\");\n  print.plain(node.callee);\n}\n\n/**\n * Alias ClassDeclaration printer as ClassExpression,\n * and AssignmentExpression printer as LogicalExpression.\n */\n\nexports.BinaryExpression = AssignmentExpression;\nexports.LogicalExpression = AssignmentExpression;\n\n/**\n * Print MemberExpression, prints object, property, and value. Handles computed.\n */\n\nfunction MemberExpression(node, print) {\n  var obj = node.object;\n  print.plain(obj);\n\n  if (!node.computed && t.isMemberExpression(node.property)) {\n    throw new TypeError(\"Got a MemberExpression for MemberExpression property\");\n  }\n\n  var computed = node.computed;\n  if (t.isLiteral(node.property) && _lodashLangIsNumber2[\"default\"](node.property.value)) {\n    computed = true;\n  }\n\n  if (computed) {\n    this.push(\"[\");\n    print.plain(node.property);\n    this.push(\"]\");\n  } else {\n    if (t.isLiteral(node.object)) {\n      var val = this._Literal(node.object);\n      if (_isInteger2[\"default\"](+val) && !SCIENTIFIC_NOTATION.test(val) && !this.endsWith(\".\")) {\n        this.push(\".\");\n      }\n    }\n\n    this.push(\".\");\n    print.plain(node.property);\n  }\n}\n\n/**\n * Print MetaProperty, prints meta and property.\n */\n\nfunction MetaProperty(node, print) {\n  print.plain(node.meta);\n  this.push(\".\");\n  print.plain(node.property);\n}"]}