{"version":3,"sources":["jsx.js"],"names":[],"mappings":"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","file":"jsx-compiled.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.JSXAttribute = JSXAttribute;\nexports.JSXIdentifier = JSXIdentifier;\nexports.JSXNamespacedName = JSXNamespacedName;\nexports.JSXMemberExpression = JSXMemberExpression;\nexports.JSXSpreadAttribute = JSXSpreadAttribute;\nexports.JSXExpressionContainer = JSXExpressionContainer;\nexports.JSXElement = JSXElement;\nexports.JSXOpeningElement = JSXOpeningElement;\nexports.JSXClosingElement = JSXClosingElement;\nexports.JSXEmptyExpression = JSXEmptyExpression;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _types = require(\"../../types\");\n\nvar t = _interopRequireWildcard(_types);\n\n/**\n * Prints JSXAttribute, prints name and value.\n */\n\nfunction JSXAttribute(node, print) {\n  print.plain(node.name);\n  if (node.value) {\n    this.push(\"=\");\n    print.plain(node.value);\n  }\n}\n\n/**\n * Prints JSXIdentifier, prints name.\n */\n\nfunction JSXIdentifier(node) {\n  this.push(node.name);\n}\n\n/**\n * Prints JSXNamespacedName, prints namespace and name.\n */\n\nfunction JSXNamespacedName(node, print) {\n  print.plain(node.namespace);\n  this.push(\":\");\n  print.plain(node.name);\n}\n\n/**\n * Prints JSXMemberExpression, prints object and property.\n */\n\nfunction JSXMemberExpression(node, print) {\n  print.plain(node.object);\n  this.push(\".\");\n  print.plain(node.property);\n}\n\n/**\n * Prints JSXSpreadAttribute, prints argument.\n */\n\nfunction JSXSpreadAttribute(node, print) {\n  this.push(\"{...\");\n  print.plain(node.argument);\n  this.push(\"}\");\n}\n\n/**\n * Prints JSXExpressionContainer, prints expression.\n */\n\nfunction JSXExpressionContainer(node, print) {\n  this.push(\"{\");\n  print.plain(node.expression);\n  this.push(\"}\");\n}\n\n/**\n * Prints JSXElement, prints openingElement, children, and closingElement.\n */\n\nfunction JSXElement(node, print) {\n  var open = node.openingElement;\n  print.plain(open);\n  if (open.selfClosing) return;\n\n  this.indent();\n  var _arr = node.children;\n  for (var _i = 0; _i < _arr.length; _i++) {\n    var child = _arr[_i];\n    if (t.isLiteral(child)) {\n      this.push(child.value, true);\n    } else {\n      print.plain(child);\n    }\n  }\n  this.dedent();\n\n  print.plain(node.closingElement);\n}\n\n/**\n * Prints JSXOpeningElement, prints name and attributes, handles selfClosing.\n */\n\nfunction JSXOpeningElement(node, print) {\n  this.push(\"<\");\n  print.plain(node.name);\n  if (node.attributes.length > 0) {\n    this.push(\" \");\n    print.join(node.attributes, { separator: \" \" });\n  }\n  this.push(node.selfClosing ? \" />\" : \">\");\n}\n\n/**\n * Prints JSXClosingElement, prints name.\n */\n\nfunction JSXClosingElement(node, print) {\n  this.push(\"</\");\n  print.plain(node.name);\n  this.push(\">\");\n}\n\n/**\n * Prints JSXEmptyExpression.\n */\n\nfunction JSXEmptyExpression() {}"]}