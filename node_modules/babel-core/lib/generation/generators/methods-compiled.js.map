{"version":3,"sources":["methods.js"],"names":[],"mappings":"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","file":"methods-compiled.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports._params = _params;\nexports._method = _method;\nexports.FunctionExpression = FunctionExpression;\nexports.ArrowFunctionExpression = ArrowFunctionExpression;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _types = require(\"../../types\");\n\nvar t = _interopRequireWildcard(_types);\n\n/**\n * Prints nodes with params, prints typeParameters, params, and returnType, handles optional params.\n */\n\nfunction _params(node, print) {\n  // istanbul ignore next\n\n  var _this = this;\n\n  print.plain(node.typeParameters);\n  this.push(\"(\");\n  print.list(node.params, {\n    iterator: function iterator(node) {\n      if (node.optional) _this.push(\"?\");\n      print.plain(node.typeAnnotation);\n    }\n  });\n  this.push(\")\");\n\n  if (node.returnType) {\n    print.plain(node.returnType);\n  }\n}\n\n/**\n * Prints method-like nodes, prints key, value, and body, handles async, generator, computed, and get or set.\n */\n\nfunction _method(node, print) {\n  var value = node.value;\n  var kind = node.kind;\n  var key = node.key;\n\n  if (kind === \"method\" || kind === \"init\") {\n    if (value.generator) {\n      this.push(\"*\");\n    }\n  }\n\n  if (kind === \"get\" || kind === \"set\") {\n    this.push(kind + \" \");\n  }\n\n  if (value.async) this.push(\"async \");\n\n  if (node.computed) {\n    this.push(\"[\");\n    print.plain(key);\n    this.push(\"]\");\n  } else {\n    print.plain(key);\n  }\n\n  this._params(value, print);\n  this.space();\n  print.plain(value.body);\n}\n\n/**\n * Prints FunctionExpression, prints id and body, handles async and generator.\n */\n\nfunction FunctionExpression(node, print) {\n  if (node.async) this.push(\"async \");\n  this.push(\"function\");\n  if (node.generator) this.push(\"*\");\n\n  if (node.id) {\n    this.push(\" \");\n    print.plain(node.id);\n  } else {\n    this.space();\n  }\n\n  this._params(node, print);\n  this.space();\n  print.plain(node.body);\n}\n\n/**\n * Alias FunctionExpression printer as FunctionDeclaration.\n */\n\nexports.FunctionDeclaration = FunctionExpression;\n\n/**\n * Prints ArrowFunctionExpression, prints params and body, handles async.\n * Leaves out parentheses when single param.\n */\n\nfunction ArrowFunctionExpression(node, print) {\n  if (node.async) this.push(\"async \");\n\n  if (node.params.length === 1 && t.isIdentifier(node.params[0])) {\n    print.plain(node.params[0]);\n  } else {\n    this._params(node, print);\n  }\n\n  this.push(\" => \");\n\n  var bodyNeedsParens = t.isObjectExpression(node.body);\n\n  if (bodyNeedsParens) {\n    this.push(\"(\");\n  }\n\n  print.plain(node.body);\n\n  if (bodyNeedsParens) {\n    this.push(\")\");\n  }\n}"]}