{"version":3,"sources":["types.js"],"names":[],"mappings":"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","file":"types-compiled.js","sourcesContent":["/* eslint quotes: 0 */\n\n\"use strict\";\n\nexports.__esModule = true;\nexports.Identifier = Identifier;\nexports.RestElement = RestElement;\nexports.ObjectExpression = ObjectExpression;\nexports.Property = Property;\nexports.ArrayExpression = ArrayExpression;\nexports.Literal = Literal;\nexports._Literal = _Literal;\nexports._stringLiteral = _stringLiteral;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _types = require(\"../../types\");\n\nvar t = _interopRequireWildcard(_types);\n\n/**\n * Prints Identifier, prints name.\n */\n\nfunction Identifier(node) {\n  this.push(node.name);\n}\n\n/**\n * Prints RestElement, prints argument.\n */\n\nfunction RestElement(node, print) {\n  this.push(\"...\");\n  print.plain(node.argument);\n}\n\n/**\n * Alias RestElement printer as SpreadElement,\n * and RestElement printer as SpreadProperty.\n */\n\nexports.SpreadElement = RestElement;\nexports.SpreadProperty = RestElement;\n\n/**\n * Prints ObjectExpression, prints properties.\n */\n\nfunction ObjectExpression(node, print) {\n  var props = node.properties;\n\n  this.push(\"{\");\n  print.printInnerComments();\n\n  if (props.length) {\n    this.space();\n    print.list(props, { indent: true });\n    this.space();\n  }\n\n  this.push(\"}\");\n}\n\n/**\n * Alias ObjectExpression printer as ObjectPattern.\n */\n\nexports.ObjectPattern = ObjectExpression;\n\n/**\n * Prints Property, prints decorators, key, and value, handles kind, computed, and shorthand.\n */\n\nfunction Property(node, print) {\n  print.list(node.decorators, { separator: \"\" });\n\n  if (node.method || node.kind === \"get\" || node.kind === \"set\") {\n    this._method(node, print);\n  } else {\n    if (node.computed) {\n      this.push(\"[\");\n      print.plain(node.key);\n      this.push(\"]\");\n    } else {\n      // print `({ foo: foo = 5 } = {})` as `({ foo = 5 } = {});`\n      if (t.isAssignmentPattern(node.value) && t.isIdentifier(node.key) && node.key.name === node.value.left.name) {\n        print.plain(node.value);\n        return;\n      }\n\n      print.plain(node.key);\n\n      // shorthand!\n      if (node.shorthand && (t.isIdentifier(node.key) && t.isIdentifier(node.value) && node.key.name === node.value.name)) {\n        return;\n      }\n    }\n\n    this.push(\":\");\n    this.space();\n    print.plain(node.value);\n  }\n}\n\n/**\n * Prints ArrayExpression, prints elements.\n */\n\nfunction ArrayExpression(node, print) {\n  var elems = node.elements;\n  var len = elems.length;\n\n  this.push(\"[\");\n  print.printInnerComments();\n\n  for (var i = 0; i < elems.length; i++) {\n    var elem = elems[i];\n    if (elem) {\n      if (i > 0) this.space();\n      print.plain(elem);\n      if (i < len - 1) this.push(\",\");\n    } else {\n      // If the array expression ends with a hole, that hole\n      // will be ignored by the interpreter, but if it ends with\n      // two (or more) holes, we need to write out two (or more)\n      // commas so that the resulting code is interpreted with\n      // both (all) of the holes.\n      this.push(\",\");\n    }\n  }\n\n  this.push(\"]\");\n}\n\n/**\n * Alias ArrayExpression printer as ArrayPattern.\n */\n\nexports.ArrayPattern = ArrayExpression;\n\n/**\n * Prints Literal, prints value, regex, raw, handles val type.\n */\n\nfunction Literal(node) {\n  this.push(\"\"); // hack: catch up indentation\n  this._push(this._Literal(node));\n}\n\nfunction _Literal(node) {\n  var val = node.value;\n\n  if (node.regex) {\n    return \"/\" + node.regex.pattern + \"/\" + node.regex.flags;\n  }\n\n  // just use the raw property if our current value is equivalent to the one we got\n  // when we populated raw\n  if (node.raw != null && node.rawValue != null && val === node.rawValue) {\n    return node.raw;\n  }\n\n  switch (typeof val) {\n    case \"string\":\n      return this._stringLiteral(val);\n\n    case \"number\":\n      return val + \"\";\n\n    case \"boolean\":\n      return val ? \"true\" : \"false\";\n\n    default:\n      if (val === null) {\n        return \"null\";\n      } else {\n        throw new Error(\"Invalid Literal type\");\n      }\n  }\n}\n\n/**\n * Prints string literals, handles format.\n */\n\nfunction _stringLiteral(val) {\n  val = JSON.stringify(val);\n\n  // escape illegal js but valid json unicode characters\n  val = val.replace(/[\\u000A\\u000D\\u2028\\u2029]/g, function (c) {\n    return \"\\\\u\" + (\"0000\" + c.charCodeAt(0).toString(16)).slice(-4);\n  });\n\n  if (this.format.quotes === \"single\") {\n    // remove double quotes\n    val = val.slice(1, -1);\n\n    // unescape double quotes\n    val = val.replace(/\\\\\"/g, '\"');\n\n    // escape single quotes\n    val = val.replace(/'/g, \"\\\\'\");\n\n    // add single quotes\n    val = \"'\" + val + \"'\";\n  }\n\n  return val;\n}"]}