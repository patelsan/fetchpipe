{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["\"use strict\";\n\n// istanbul ignore next\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// istanbul ignore next\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _detectIndent = require(\"detect-indent\");\n\nvar _detectIndent2 = _interopRequireDefault(_detectIndent);\n\nvar _whitespace = require(\"./whitespace\");\n\nvar _whitespace2 = _interopRequireDefault(_whitespace);\n\nvar _nodePrinter = require(\"./node/printer\");\n\nvar _nodePrinter2 = _interopRequireDefault(_nodePrinter);\n\nvar _repeating = require(\"repeating\");\n\nvar _repeating2 = _interopRequireDefault(_repeating);\n\nvar _sourceMap = require(\"./source-map\");\n\nvar _sourceMap2 = _interopRequireDefault(_sourceMap);\n\nvar _position = require(\"./position\");\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _messages = require(\"../messages\");\n\nvar messages = _interopRequireWildcard(_messages);\n\nvar _buffer = require(\"./buffer\");\n\nvar _buffer2 = _interopRequireDefault(_buffer);\n\nvar _lodashObjectExtend = require(\"lodash/object/extend\");\n\nvar _lodashObjectExtend2 = _interopRequireDefault(_lodashObjectExtend);\n\nvar _lodashCollectionEach = require(\"lodash/collection/each\");\n\nvar _lodashCollectionEach2 = _interopRequireDefault(_lodashCollectionEach);\n\nvar _node2 = require(\"./node\");\n\nvar _node3 = _interopRequireDefault(_node2);\n\nvar _types = require(\"../types\");\n\nvar t = _interopRequireWildcard(_types);\n\n/**\n * Babel's code generator, turns an ast into code, maintaining sourcemaps,\n * user preferences, and valid output.\n */\n\nvar CodeGenerator = (function () {\n  function CodeGenerator(ast, opts, code) {\n    _classCallCheck(this, CodeGenerator);\n\n    opts = opts || {};\n\n    this.comments = ast.comments || [];\n    this.tokens = ast.tokens || [];\n    this.format = CodeGenerator.normalizeOptions(code, opts, this.tokens);\n    this.opts = opts;\n    this.ast = ast;\n\n    this.whitespace = new _whitespace2[\"default\"](this.tokens);\n    this.position = new _position2[\"default\"]();\n    this.map = new _sourceMap2[\"default\"](this.position, opts, code);\n    this.buffer = new _buffer2[\"default\"](this.position, this.format);\n  }\n\n  /**\n   * [Please add a description.]\n   */\n\n  /**\n   * Normalize generator options, setting defaults.\n   *\n   * - Detects code indentation.\n   * - If `opts.compact = \"auto\"` and the code is over 100KB, `compact` will be set to `true`.\n   */\n\n  CodeGenerator.normalizeOptions = function normalizeOptions(code, opts, tokens) {\n    var style = \"  \";\n    if (code) {\n      var indent = _detectIndent2[\"default\"](code).indent;\n      if (indent && indent !== \" \") style = indent;\n    }\n\n    var format = {\n      shouldPrintComment: opts.shouldPrintComment,\n      retainLines: opts.retainLines,\n      comments: opts.comments == null || opts.comments,\n      compact: opts.compact,\n      quotes: CodeGenerator.findCommonStringDelimiter(code, tokens),\n      indent: {\n        adjustMultilineComment: true,\n        style: style,\n        base: 0\n      }\n    };\n\n    if (format.compact === \"auto\") {\n      format.compact = code.length > 100000; // 100KB\n\n      if (format.compact) {\n        console.error(\"[BABEL] \" + messages.get(\"codeGeneratorDeopt\", opts.filename, \"100KB\"));\n      }\n    }\n\n    if (format.compact) {\n      format.indent.adjustMultilineComment = false;\n    }\n\n    return format;\n  };\n\n  /**\n   * Determine if input code uses more single or double quotes.\n   */\n\n  CodeGenerator.findCommonStringDelimiter = function findCommonStringDelimiter(code, tokens) {\n    var occurences = {\n      single: 0,\n      double: 0\n    };\n\n    var checked = 0;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n      if (token.type.label !== \"string\") continue;\n\n      var raw = code.slice(token.start, token.end);\n      if (raw[0] === \"'\") {\n        occurences.single++;\n      } else {\n        occurences.double++;\n      }\n\n      checked++;\n      if (checked >= 3) break;\n    }\n    if (occurences.single > occurences.double) {\n      return \"single\";\n    } else {\n      return \"double\";\n    }\n  };\n\n  /**\n   * All node generators.\n   */\n\n  /**\n   * Generate code and sourcemap from ast.\n   *\n   * Appends comments that weren't attached to any node to the end of the generated output.\n   */\n\n  CodeGenerator.prototype.generate = function generate() {\n    var ast = this.ast;\n\n    this.print(ast);\n\n    if (ast.comments) {\n      var comments = [];\n      var _arr = ast.comments;\n      for (var _i = 0; _i < _arr.length; _i++) {\n        var comment = _arr[_i];\n        if (!comment._displayed) comments.push(comment);\n      }\n      this._printComments(comments);\n    }\n\n    return {\n      map: this.map.get(),\n      code: this.buffer.get()\n    };\n  };\n\n  /**\n   * Build NodePrinter.\n   */\n\n  CodeGenerator.prototype.buildPrint = function buildPrint(parent) {\n    return new _nodePrinter2[\"default\"](this, parent);\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  CodeGenerator.prototype.catchUp = function catchUp(node) {\n    // catch up to this nodes newline if we're behind\n    if (node.loc && this.format.retainLines && this.buffer.buf) {\n      while (this.position.line < node.loc.start.line) {\n        this._push(\"\\n\");\n      }\n    }\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  CodeGenerator.prototype._printNewline = function _printNewline(leading, node, parent, opts) {\n    if (!opts.statement && !_node3[\"default\"].isUserWhitespacable(node, parent)) {\n      return;\n    }\n\n    var lines = 0;\n\n    if (node.start != null && !node._ignoreUserWhitespace) {\n      // user node\n      if (leading) {\n        lines = this.whitespace.getNewlinesBefore(node);\n      } else {\n        lines = this.whitespace.getNewlinesAfter(node);\n      }\n    } else {\n      // generated node\n      if (!leading) lines++; // always include at least a single line after\n      if (opts.addNewlines) lines += opts.addNewlines(leading, node) || 0;\n\n      var needs = _node3[\"default\"].needsWhitespaceAfter;\n      if (leading) needs = _node3[\"default\"].needsWhitespaceBefore;\n      if (needs(node, parent)) lines++;\n\n      // generated nodes can't add starting file whitespace\n      if (!this.buffer.buf) lines = 0;\n    }\n\n    this.newline(lines);\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  CodeGenerator.prototype.print = function print(node, parent) {\n    var opts = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\n    if (!node) return;\n\n    if (parent && parent._compact) {\n      node._compact = true;\n    }\n\n    var oldConcise = this.format.concise;\n    if (node._compact) {\n      this.format.concise = true;\n    }\n\n    if (!this[node.type]) {\n      throw new ReferenceError(\"unknown node of type \" + JSON.stringify(node.type) + \" with constructor \" + JSON.stringify(node && node.constructor.name));\n    }\n\n    var needsParens = _node3[\"default\"].needsParens(node, parent);\n    if (needsParens) this.push(\"(\");\n\n    this.printLeadingComments(node, parent);\n\n    this.catchUp(node);\n\n    this._printNewline(true, node, parent, opts);\n\n    if (opts.before) opts.before();\n    this.map.mark(node, \"start\");\n\n    this[node.type](node, this.buildPrint(node), parent);\n\n    if (needsParens) this.push(\")\");\n\n    this.map.mark(node, \"end\");\n    if (opts.after) opts.after();\n\n    this.format.concise = oldConcise;\n\n    this._printNewline(false, node, parent, opts);\n\n    this.printTrailingComments(node, parent);\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  CodeGenerator.prototype.printJoin = function printJoin(print, nodes) {\n    // istanbul ignore next\n\n    var _this = this;\n\n    var opts = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\n    if (!nodes || !nodes.length) return;\n\n    var len = nodes.length;\n\n    if (opts.indent) this.indent();\n\n    var printOpts = {\n      statement: opts.statement,\n      addNewlines: opts.addNewlines,\n      after: function after() {\n        if (opts.iterator) {\n          opts.iterator(node, i);\n        }\n\n        if (opts.separator && i < len - 1) {\n          _this.push(opts.separator);\n        }\n      }\n    };\n\n    for (var i = 0; i < nodes.length; i++) {\n      var node = nodes[i];\n      print.plain(node, printOpts);\n    }\n\n    if (opts.indent) this.dedent();\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  CodeGenerator.prototype.printAndIndentOnComments = function printAndIndentOnComments(print, node) {\n    var indent = !!node.leadingComments;\n    if (indent) this.indent();\n    print.plain(node);\n    if (indent) this.dedent();\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  CodeGenerator.prototype.printBlock = function printBlock(print, node) {\n    if (t.isEmptyStatement(node)) {\n      this.semicolon();\n    } else {\n      this.push(\" \");\n      print.plain(node);\n    }\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  CodeGenerator.prototype.generateComment = function generateComment(comment) {\n    var val = comment.value;\n    if (comment.type === \"CommentLine\") {\n      val = \"//\" + val;\n    } else {\n      val = \"/*\" + val + \"*/\";\n    }\n    return val;\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  CodeGenerator.prototype.printTrailingComments = function printTrailingComments(node, parent) {\n    this._printComments(this.getComments(\"trailingComments\", node, parent));\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  CodeGenerator.prototype.printLeadingComments = function printLeadingComments(node, parent) {\n    this._printComments(this.getComments(\"leadingComments\", node, parent));\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  CodeGenerator.prototype.getComments = function getComments(key, node, parent) {\n    if (t.isExpressionStatement(parent)) {\n      return [];\n    }\n\n    var comments = [];\n    var nodes = [node];\n\n    if (t.isExpressionStatement(node)) {\n      nodes.push(node.argument);\n    }\n\n    var _arr2 = nodes;\n    for (var _i2 = 0; _i2 < _arr2.length; _i2++) {\n      var _node = _arr2[_i2];\n      comments = comments.concat(this._getComments(key, _node));\n    }\n\n    return comments;\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  CodeGenerator.prototype._getComments = function _getComments(key, node) {\n    return node && node[key] || [];\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  CodeGenerator.prototype.shouldPrintComment = function shouldPrintComment(comment) {\n    if (this.format.shouldPrintComment) {\n      return this.format.shouldPrintComment(comment.value);\n    } else {\n      if (comment.value.indexOf(\"@license\") >= 0 || comment.value.indexOf(\"@preserve\") >= 0) {\n        return true;\n      } else {\n        return this.format.comments;\n      }\n    }\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  CodeGenerator.prototype._printComments = function _printComments(comments) {\n    if (!comments || !comments.length) return;\n\n    var _arr3 = comments;\n    for (var _i3 = 0; _i3 < _arr3.length; _i3++) {\n      var comment = _arr3[_i3];\n      if (!this.shouldPrintComment(comment)) continue;\n      if (comment._displayed) continue;\n      comment._displayed = true;\n\n      this.catchUp(comment);\n\n      // whitespace before\n      this.newline(this.whitespace.getNewlinesBefore(comment));\n\n      var column = this.position.column;\n      var val = this.generateComment(comment);\n\n      if (column && !this.isLast([\"\\n\", \" \", \"[\", \"{\"])) {\n        this._push(\" \");\n        column++;\n      }\n\n      //\n      if (comment.type === \"CommentBlock\" && this.format.indent.adjustMultilineComment) {\n        var offset = comment.loc && comment.loc.start.column;\n        if (offset) {\n          var newlineRegex = new RegExp(\"\\\\n\\\\s{1,\" + offset + \"}\", \"g\");\n          val = val.replace(newlineRegex, \"\\n\");\n        }\n\n        var indent = Math.max(this.indentSize(), column);\n        val = val.replace(/\\n/g, \"\\n\" + _repeating2[\"default\"](\" \", indent));\n      }\n\n      if (column === 0) {\n        val = this.getIndent() + val;\n      }\n\n      // force a newline for line comments when retainLines is set in case the next printed node\n      // doesn't catch up\n      if ((this.format.compact || this.format.retainLines) && comment.type === \"CommentLine\") {\n        val += \"\\n\";\n      }\n\n      //\n      this._push(val);\n\n      // whitespace after\n      this.newline(this.whitespace.getNewlinesAfter(comment));\n    }\n  };\n\n  _createClass(CodeGenerator, null, [{\n    key: \"generators\",\n    value: {\n      templateLiterals: require(\"./generators/template-literals\"),\n      comprehensions: require(\"./generators/comprehensions\"),\n      expressions: require(\"./generators/expressions\"),\n      statements: require(\"./generators/statements\"),\n      classes: require(\"./generators/classes\"),\n      methods: require(\"./generators/methods\"),\n      modules: require(\"./generators/modules\"),\n      types: require(\"./generators/types\"),\n      flow: require(\"./generators/flow\"),\n      base: require(\"./generators/base\"),\n      jsx: require(\"./generators/jsx\")\n    },\n    enumerable: true\n  }]);\n\n  return CodeGenerator;\n})();\n\n_lodashCollectionEach2[\"default\"](_buffer2[\"default\"].prototype, function (fn, key) {\n  CodeGenerator.prototype[key] = function () {\n    return fn.apply(this.buffer, arguments);\n  };\n});\n\n/**\n * [Please add a description.]\n */\n\n_lodashCollectionEach2[\"default\"](CodeGenerator.generators, function (generator) {\n  _lodashObjectExtend2[\"default\"](CodeGenerator.prototype, generator);\n});\n\n/**\n * [Please add a description.]\n */\n\nmodule.exports = function (ast, opts, code) {\n  var gen = new CodeGenerator(ast, opts, code);\n  return gen.generate();\n};\n\nmodule.exports.CodeGenerator = CodeGenerator;"]}