{"version":3,"sources":["parentheses.js"],"names":[],"mappings":"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","file":"parentheses-compiled.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.NullableTypeAnnotation = NullableTypeAnnotation;\nexports.UpdateExpression = UpdateExpression;\nexports.ObjectExpression = ObjectExpression;\nexports.Binary = Binary;\nexports.BinaryExpression = BinaryExpression;\nexports.SequenceExpression = SequenceExpression;\nexports.YieldExpression = YieldExpression;\nexports.ClassExpression = ClassExpression;\nexports.UnaryLike = UnaryLike;\nexports.FunctionExpression = FunctionExpression;\nexports.ConditionalExpression = ConditionalExpression;\nexports.AssignmentExpression = AssignmentExpression;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _lodashCollectionEach = require(\"lodash/collection/each\");\n\nvar _lodashCollectionEach2 = _interopRequireDefault(_lodashCollectionEach);\n\nvar _types = require(\"../../types\");\n\nvar t = _interopRequireWildcard(_types);\n\n/**\n * Create a mapping of operators to precendence.\n *\n * @example\n * { \"==\": 6, \"+\": 9 }\n */\nvar PRECEDENCE = {};\n\n_lodashCollectionEach2[\"default\"]([[\"||\"], [\"&&\"], [\"|\"], [\"^\"], [\"&\"], [\"==\", \"===\", \"!=\", \"!==\"], [\"<\", \">\", \"<=\", \">=\", \"in\", \"instanceof\"], [\">>\", \"<<\", \">>>\"], [\"+\", \"-\"], [\"*\", \"/\", \"%\"], [\"**\"]], function (tier, i) {\n  _lodashCollectionEach2[\"default\"](tier, function (op) {\n    PRECEDENCE[op] = i;\n  });\n});\n\n/**\n * Test if NullableTypeAnnotation needs parentheses.\n */\n\nfunction NullableTypeAnnotation(node, parent) {\n  return t.isArrayTypeAnnotation(parent);\n}\n\n/**\n * Alias NullableTypeAnnotation test as FunctionTypeAnnotation.\n */\n\nexports.FunctionTypeAnnotation = NullableTypeAnnotation;\n\n/**\n * Test if UpdateExpression needs parentheses.\n */\n\nfunction UpdateExpression(node, parent) {\n  if (t.isMemberExpression(parent) && parent.object === node) {\n    // (foo++).test()\n    return true;\n  }\n}\n\n/**\n * Test if ObjectExpression needs parentheses.\n */\n\nfunction ObjectExpression(node, parent) {\n  if (t.isExpressionStatement(parent)) {\n    // ({ foo: \"bar\" });\n    return true;\n  }\n\n  if (t.isMemberExpression(parent) && parent.object === node) {\n    // ({ foo: \"bar\" }).foo\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Test if Binary needs parentheses.\n */\n\nfunction Binary(node, parent) {\n  if ((t.isCallExpression(parent) || t.isNewExpression(parent)) && parent.callee === node) {\n    return true;\n  }\n\n  if (t.isUnaryLike(parent)) {\n    return true;\n  }\n\n  if (t.isMemberExpression(parent) && parent.object === node) {\n    return true;\n  }\n\n  if (t.isBinary(parent)) {\n    var parentOp = parent.operator;\n    var parentPos = PRECEDENCE[parentOp];\n\n    var nodeOp = node.operator;\n    var nodePos = PRECEDENCE[nodeOp];\n\n    if (parentPos > nodePos) {\n      return true;\n    }\n\n    if (parentPos === nodePos && parent.right === node) {\n      return true;\n    }\n  }\n}\n\n/**\n * Test if BinaryExpression needs parentheses.\n */\n\nfunction BinaryExpression(node, parent) {\n  if (node.operator === \"in\") {\n    // var i = (1 in []);\n    if (t.isVariableDeclarator(parent)) {\n      return true;\n    }\n\n    // for ((1 in []);;);\n    if (t.isFor(parent)) {\n      return true;\n    }\n  }\n}\n\n/**\n * Test if SequenceExpression needs parentheses.\n */\n\nfunction SequenceExpression(node, parent) {\n  if (t.isForStatement(parent)) {\n    // Although parentheses wouldn't hurt around sequence\n    // expressions in the head of for loops, traditional style\n    // dictates that e.g. i++, j++ should not be wrapped with\n    // parentheses.\n    return false;\n  }\n\n  if (t.isExpressionStatement(parent) && parent.expression === node) {\n    return false;\n  }\n\n  // Otherwise err on the side of overparenthesization, adding\n  // explicit exceptions above if this proves overzealous.\n  return true;\n}\n\n/**\n * Test if YieldExpression needs parentheses.\n */\n\nfunction YieldExpression(node, parent) {\n  return t.isBinary(parent) || t.isUnaryLike(parent) || t.isCallExpression(parent) || t.isMemberExpression(parent) || t.isNewExpression(parent) || t.isConditionalExpression(parent) || t.isYieldExpression(parent);\n}\n\n/**\n * Test if ClassExpression needs parentheses.\n */\n\nfunction ClassExpression(node, parent) {\n  return t.isExpressionStatement(parent);\n}\n\n/**\n * Test if UnaryLike needs parentheses.\n */\n\nfunction UnaryLike(node, parent) {\n  return t.isMemberExpression(parent) && parent.object === node;\n}\n\n/**\n * Test if FunctionExpression needs parentheses.\n */\n\nfunction FunctionExpression(node, parent) {\n  // function () {};\n  if (t.isExpressionStatement(parent)) {\n    return true;\n  }\n\n  // (function test() {}).name;\n  if (t.isMemberExpression(parent) && parent.object === node) {\n    return true;\n  }\n\n  // (function () {})();\n  if (t.isCallExpression(parent) && parent.callee === node) {\n    return true;\n  }\n}\n\n/**\n * Test if ConditionalExpression needs parentheses.\n */\n\nfunction ConditionalExpression(node, parent) {\n  if (t.isUnaryLike(parent)) {\n    return true;\n  }\n\n  if (t.isBinary(parent)) {\n    return true;\n  }\n\n  if (t.isCallExpression(parent) || t.isNewExpression(parent)) {\n    if (parent.callee === node) {\n      return true;\n    }\n  }\n\n  if (t.isConditionalExpression(parent) && parent.test === node) {\n    return true;\n  }\n\n  if (t.isMemberExpression(parent) && parent.object === node) {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Test if AssignmentExpression needs parentheses.\n */\n\nfunction AssignmentExpression(node) {\n  if (t.isObjectPattern(node.left)) {\n    return true;\n  } else {\n    return ConditionalExpression.apply(undefined, arguments);\n  }\n}"]}