{"version":3,"sources":["printer.js"],"names":[],"mappings":"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","file":"printer-compiled.js","sourcesContent":["/**\n * Printer for nodes, needs a `generator` and a `parent`.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar NodePrinter = (function () {\n  function NodePrinter(generator, parent) {\n    _classCallCheck(this, NodePrinter);\n\n    this.generator = generator;\n    this.parent = parent;\n  }\n\n  /**\n   * Description\n   */\n\n  NodePrinter.prototype.printInnerComments = function printInnerComments() {\n    if (!this.parent.innerComments) return;\n    var gen = this.generator;\n    gen.indent();\n    gen._printComments(this.parent.innerComments);\n    gen.dedent();\n  };\n\n  /**\n   * Print a plain node.\n   */\n\n  NodePrinter.prototype.plain = function plain(node, opts) {\n    return this.generator.print(node, this.parent, opts);\n  };\n\n  /**\n   * Print a sequence of nodes as statements.\n   */\n\n  NodePrinter.prototype.sequence = function sequence(nodes) {\n    var opts = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    opts.statement = true;\n    return this.generator.printJoin(this, nodes, opts);\n  };\n\n  /**\n   * Print a sequence of nodes as expressions.\n   */\n\n  NodePrinter.prototype.join = function join(nodes, opts) {\n    return this.generator.printJoin(this, nodes, opts);\n  };\n\n  /**\n   * Print a list of nodes, with a customizable separator (defaults to \",\").\n   */\n\n  NodePrinter.prototype.list = function list(items) {\n    var opts = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    if (opts.separator == null) {\n      opts.separator = \",\";\n      if (!this.generator.format.compact) opts.separator += \" \";\n    }\n\n    return this.join(items, opts);\n  };\n\n  /**\n   * Print a block-like node.\n   */\n\n  NodePrinter.prototype.block = function block(node) {\n    return this.generator.printBlock(this, node);\n  };\n\n  /**\n   * Print node and indent comments.\n   */\n\n  NodePrinter.prototype.indentOnComments = function indentOnComments(node) {\n    return this.generator.printAndIndentOnComments(this, node);\n  };\n\n  return NodePrinter;\n})();\n\nexports[\"default\"] = NodePrinter;\nmodule.exports = exports[\"default\"];"]}