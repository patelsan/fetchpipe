{"version":3,"sources":["whitespace.js"],"names":[],"mappings":"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","file":"whitespace-compiled.js","sourcesContent":["\"use strict\";\n\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _lodashLangIsBoolean = require(\"lodash/lang/isBoolean\");\n\nvar _lodashLangIsBoolean2 = _interopRequireDefault(_lodashLangIsBoolean);\n\nvar _lodashCollectionEach = require(\"lodash/collection/each\");\n\nvar _lodashCollectionEach2 = _interopRequireDefault(_lodashCollectionEach);\n\nvar _lodashCollectionMap = require(\"lodash/collection/map\");\n\nvar _lodashCollectionMap2 = _interopRequireDefault(_lodashCollectionMap);\n\nvar _types = require(\"../../types\");\n\nvar t = _interopRequireWildcard(_types);\n\n/**\n * Crawl a node to test if it contains a CallExpression, a Function, or a Helper.\n *\n * @example\n * crawl(node)\n * // { hasCall: false, hasFunction: true, hasHelper: false }\n */\n\nfunction crawl(node) {\n  var state = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n  if (t.isMemberExpression(node)) {\n    crawl(node.object, state);\n    if (node.computed) crawl(node.property, state);\n  } else if (t.isBinary(node) || t.isAssignmentExpression(node)) {\n    crawl(node.left, state);\n    crawl(node.right, state);\n  } else if (t.isCallExpression(node)) {\n    state.hasCall = true;\n    crawl(node.callee, state);\n  } else if (t.isFunction(node)) {\n    state.hasFunction = true;\n  } else if (t.isIdentifier(node)) {\n    state.hasHelper = state.hasHelper || isHelper(node.callee);\n  }\n\n  return state;\n}\n\n/**\n * Test if a node is or has a helper.\n */\n\nfunction isHelper(node) {\n  if (t.isMemberExpression(node)) {\n    return isHelper(node.object) || isHelper(node.property);\n  } else if (t.isIdentifier(node)) {\n    return node.name === \"require\" || node.name[0] === \"_\";\n  } else if (t.isCallExpression(node)) {\n    return isHelper(node.callee);\n  } else if (t.isBinary(node) || t.isAssignmentExpression(node)) {\n    return t.isIdentifier(node.left) && isHelper(node.left) || isHelper(node.right);\n  } else {\n    return false;\n  }\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction isType(node) {\n  return t.isLiteral(node) || t.isObjectExpression(node) || t.isArrayExpression(node) || t.isIdentifier(node) || t.isMemberExpression(node);\n}\n\n/**\n * Tests for node types that need whitespace.\n */\n\nexports.nodes = {\n\n  /**\n   * Test if AssignmentExpression needs whitespace.\n   */\n\n  AssignmentExpression: function AssignmentExpression(node) {\n    var state = crawl(node.right);\n    if (state.hasCall && state.hasHelper || state.hasFunction) {\n      return {\n        before: state.hasFunction,\n        after: true\n      };\n    }\n  },\n\n  /**\n   * Test if SwitchCase needs whitespace.\n   */\n\n  SwitchCase: function SwitchCase(node, parent) {\n    return {\n      before: node.consequent.length || parent.cases[0] === node\n    };\n  },\n\n  /**\n   * Test if LogicalExpression needs whitespace.\n   */\n\n  LogicalExpression: function LogicalExpression(node) {\n    if (t.isFunction(node.left) || t.isFunction(node.right)) {\n      return {\n        after: true\n      };\n    }\n  },\n\n  /**\n   * Test if Literal needs whitespace.\n   */\n\n  Literal: function Literal(node) {\n    if (node.value === \"use strict\") {\n      return {\n        after: true\n      };\n    }\n  },\n\n  /**\n   * Test if CallExpression needs whitespace.\n   */\n\n  CallExpression: function CallExpression(node) {\n    if (t.isFunction(node.callee) || isHelper(node)) {\n      return {\n        before: true,\n        after: true\n      };\n    }\n  },\n\n  /**\n   * Test if VariableDeclaration needs whitespace.\n   */\n\n  VariableDeclaration: function VariableDeclaration(node) {\n    for (var i = 0; i < node.declarations.length; i++) {\n      var declar = node.declarations[i];\n\n      var enabled = isHelper(declar.id) && !isType(declar.init);\n      if (!enabled) {\n        var state = crawl(declar.init);\n        enabled = isHelper(declar.init) && state.hasCall || state.hasFunction;\n      }\n\n      if (enabled) {\n        return {\n          before: true,\n          after: true\n        };\n      }\n    }\n  },\n\n  /**\n   * Test if IfStatement needs whitespace.\n   */\n\n  IfStatement: function IfStatement(node) {\n    if (t.isBlockStatement(node.consequent)) {\n      return {\n        before: true,\n        after: true\n      };\n    }\n  }\n};\n\n/**\n * Test if Property or SpreadProperty needs whitespace.\n */\n\nexports.nodes.Property = exports.nodes.SpreadProperty = function (node, parent) {\n  if (parent.properties[0] === node) {\n    return {\n      before: true\n    };\n  }\n};\n\n/**\n * Returns lists from node types that need whitespace.\n */\n\nexports.list = {\n\n  /**\n   * Return VariableDeclaration declarations init properties.\n   */\n\n  VariableDeclaration: function VariableDeclaration(node) {\n    return _lodashCollectionMap2[\"default\"](node.declarations, \"init\");\n  },\n\n  /**\n   * Return VariableDeclaration elements.\n   */\n\n  ArrayExpression: function ArrayExpression(node) {\n    return node.elements;\n  },\n\n  /**\n   * Return VariableDeclaration properties.\n   */\n\n  ObjectExpression: function ObjectExpression(node) {\n    return node.properties;\n  }\n};\n\n/**\n * Add whitespace tests for nodes and their aliases.\n */\n\n_lodashCollectionEach2[\"default\"]({\n  Function: true,\n  Class: true,\n  Loop: true,\n  LabeledStatement: true,\n  SwitchStatement: true,\n  TryStatement: true\n}, function (amounts, type) {\n  if (_lodashLangIsBoolean2[\"default\"](amounts)) {\n    amounts = { after: amounts, before: amounts };\n  }\n\n  _lodashCollectionEach2[\"default\"]([type].concat(t.FLIPPED_ALIAS_KEYS[type] || []), function (type) {\n    exports.nodes[type] = function () {\n      return amounts;\n    };\n  });\n});"]}