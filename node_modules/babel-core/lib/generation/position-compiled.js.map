{"version":3,"sources":["position.js"],"names":[],"mappings":";;;;AAIA,YAAY,CAAC;;AAEb,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC;;;AAG1B,SAAS,eAAe,CAAC,QAAQ,EAAE,WAAW,EAAE;AAAE,MAAI,EAAE,QAAQ,YAAY,WAAW,CAAA,AAAC,EAAE;AAAE,UAAM,IAAI,SAAS,CAAC,mCAAmC,CAAC,CAAC;GAAE;CAAE;;AAEzJ,IAAI,QAAQ,GAAG,CAAC,YAAY;AAC1B,WAAS,QAAQ,GAAG;AAClB,mBAAe,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;;AAEhC,QAAI,CAAC,IAAI,GAAG,CAAC,CAAC;AACd,QAAI,CAAC,MAAM,GAAG,CAAC,CAAC;GACjB;;;;;;AAMD,UAAQ,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAC,GAAG,EAAE;AAC3C,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACnC,UAAI,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;AACnB,YAAI,CAAC,IAAI,EAAE,CAAC;AACZ,YAAI,CAAC,MAAM,GAAG,CAAC,CAAC;OACjB,MAAM;AACL,YAAI,CAAC,MAAM,EAAE,CAAC;OACf;KACF;GACF,CAAC;;;;;;AAMF,UAAQ,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,OAAO,CAAC,GAAG,EAAE;AACjD,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACnC,UAAI,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;AACnB,YAAI,CAAC,IAAI,EAAE,CAAC;OACb,MAAM;AACL,YAAI,CAAC,MAAM,EAAE,CAAC;OACf;KACF;GACF,CAAC;;AAEF,SAAO,QAAQ,CAAC;CACjB,CAAA,EAAG,CAAC;;AAEL,OAAO,CAAC,SAAS,CAAC,GAAG,QAAQ,CAAC;AAC9B,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC","file":"position-compiled.js","sourcesContent":["/**\n * Track current position in code generation.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Position = (function () {\n  function Position() {\n    _classCallCheck(this, Position);\n\n    this.line = 1;\n    this.column = 0;\n  }\n\n  /**\n   * Push a string to the current position, mantaining the current line and column.\n   */\n\n  Position.prototype.push = function push(str) {\n    for (var i = 0; i < str.length; i++) {\n      if (str[i] === \"\\n\") {\n        this.line++;\n        this.column = 0;\n      } else {\n        this.column++;\n      }\n    }\n  };\n\n  /**\n   * Unshift a string from the current position, mantaining the current line and column.\n   */\n\n  Position.prototype.unshift = function unshift(str) {\n    for (var i = 0; i < str.length; i++) {\n      if (str[i] === \"\\n\") {\n        this.line--;\n      } else {\n        this.column--;\n      }\n    }\n  };\n\n  return Position;\n})();\n\nexports[\"default\"] = Position;\nmodule.exports = exports[\"default\"];"]}