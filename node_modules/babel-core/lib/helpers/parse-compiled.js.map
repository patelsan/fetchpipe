{"version":3,"sources":["parse.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC;;;AAG1B,SAAS,uBAAuB,CAAC,GAAG,EAAE;AAAE,MAAI,GAAG,IAAI,GAAG,CAAC,UAAU,EAAE;AAAE,WAAO,GAAG,CAAC;GAAE,MAAM;AAAE,QAAI,MAAM,GAAG,EAAE,CAAC,AAAC,IAAI,GAAG,IAAI,IAAI,EAAE;AAAE,WAAK,IAAI,GAAG,IAAI,GAAG,EAAE;AAAE,YAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;OAAE;KAAE,AAAC,MAAM,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC,AAAC,OAAO,MAAM,CAAC;GAAE;CAAE;;AAEhR,IAAI,QAAQ,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;;AAElC,IAAI,OAAO,GAAG,uBAAuB,CAAC,QAAQ,CAAC,CAAC;;;;;;AAMhD,OAAO,CAAC,SAAS,CAAC,GAAG,UAAU,IAAI,EAAE;AACnC,MAAI,IAAI,GAAG,SAAS,CAAC,MAAM,IAAI,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS,GAAG,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;;AAEnF,MAAI,SAAS,GAAG;AACd,+BAA2B,EAAE,IAAI,CAAC,YAAY;AAC9C,8BAA0B,EAAE,IAAI,CAAC,YAAY;AAC7C,iBAAa,EAAE,IAAI;AACnB,eAAW,EAAE,CAAC;AACd,cAAU,EAAE,IAAI,CAAC,UAAU;AAC3B,cAAU,EAAE,IAAI,CAAC,UAAU;AAC3B,aAAS,EAAE,IAAI;AACf,YAAQ,EAAE,IAAI,CAAC,QAAQ,IAAI,EAAE;AAC7B,WAAO,EAAE,IAAI,CAAC,OAAO,IAAI,EAAE;GAC5B,CAAC;;AAEF,MAAI,IAAI,CAAC,WAAW,EAAE;AACpB,aAAS,CAAC,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC;AAC7B,aAAS,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;GAC/B;;AAED,SAAO,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;CACvC,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC","file":"parse-compiled.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _babylon = require(\"babylon\");\n\nvar babylon = _interopRequireWildcard(_babylon);\n\n/**\n * Parse `code` with normalized options, collecting tokens and comments.\n */\n\nexports[\"default\"] = function (code) {\n  var opts = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n  var parseOpts = {\n    allowImportExportEverywhere: opts.looseModules,\n    allowReturnOutsideFunction: opts.looseModules,\n    allowHashBang: true,\n    ecmaVersion: 6,\n    strictMode: opts.strictMode,\n    sourceType: opts.sourceType,\n    locations: true,\n    features: opts.features || {},\n    plugins: opts.plugins || {}\n  };\n\n  if (opts.nonStandard) {\n    parseOpts.plugins.jsx = true;\n    parseOpts.plugins.flow = true;\n  }\n\n  return babylon.parse(code, parseOpts);\n};\n\nmodule.exports = exports[\"default\"];"]}