{"version":3,"sources":["parsers.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC;AAC1B,OAAO,CAAC,eAAe,GAAG,eAAe,CAAC;AAC1C,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;AACxB,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC;AAC1B,OAAO,CAAC,aAAa,GAAG,aAAa,CAAC;AACtC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;;;AAGpB,SAAS,uBAAuB,CAAC,GAAG,EAAE;AAAE,MAAI,GAAG,IAAI,GAAG,CAAC,UAAU,EAAE;AAAE,WAAO,GAAG,CAAC;GAAE,MAAM;AAAE,QAAI,MAAM,GAAG,EAAE,CAAC,AAAC,IAAI,GAAG,IAAI,IAAI,EAAE;AAAE,WAAK,IAAI,GAAG,IAAI,GAAG,EAAE;AAAE,YAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;OAAE;KAAE,AAAC,MAAM,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC,AAAC,OAAO,MAAM,CAAC;GAAE;CAAE;;;;AAIhR,SAAS,sBAAsB,CAAC,GAAG,EAAE;AAAE,SAAO,GAAG,IAAI,GAAG,CAAC,UAAU,GAAG,GAAG,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC;CAAE;;AAEjG,IAAI,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;;AAE9B,IAAI,OAAO,GAAG,sBAAsB,CAAC,MAAM,CAAC,CAAC;;AAE7C,IAAI,KAAK,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;;AAErC,IAAI,IAAI,GAAG,uBAAuB,CAAC,KAAK,CAAC,CAAC;;;;;;AAM1C,SAAS,eAAe,CAAC,GAAG,EAAE;AAC5B,SAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;CAC3B;;;;;;AAMD,eAAe,CAAC,QAAQ,GAAG,UAAU,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE;AACvD,MAAI,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AACrD,OAAG,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;GAC1C;;AAED,SAAO,QAAQ,CAAC,uBAAuB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CACnD,CAAC;;;;;;AAMF,SAAS,MAAM,CAAC,GAAG,EAAE;AACnB,SAAO,CAAC,GAAG,CAAC;CACb;;;;;;AAMD,IAAI,QAAQ,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;;AAElC,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;;;;;AAK5B,SAAS,OAAO,CAAC,GAAG,EAAE;AACpB,SAAO,CAAC,CAAC,GAAG,CAAC;CACd;;;;;;AAMD,SAAS,aAAa,CAAC,GAAG,EAAE;AAC1B,SAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;CAC7B;;;;;;AAMD,SAAS,IAAI,CAAC,GAAG,EAAE;AACjB,SAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CACvB","file":"parsers-compiled.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.transformerList = transformerList;\nexports.number = number;\nexports.boolean = boolean;\nexports.booleanString = booleanString;\nexports.list = list;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _slash = require(\"slash\");\n\nvar _slash2 = _interopRequireDefault(_slash);\n\nvar _util = require(\"../../../util\");\n\nvar util = _interopRequireWildcard(_util);\n\n/**\n * Get a transformer list from a value.\n */\n\nfunction transformerList(val) {\n  return util.arrayify(val);\n}\n\n/**\n * Validate transformer list. Maps \"all\" to all transformer names.\n */\n\ntransformerList.validate = function (key, val, pipeline) {\n  if (val.indexOf(\"all\") >= 0 || val.indexOf(true) >= 0) {\n    val = Object.keys(pipeline.transformers);\n  }\n\n  return pipeline._ensureTransformerNames(key, val);\n};\n\n/**\n * Cast a value to a number.\n */\n\nfunction number(val) {\n  return +val;\n}\n\n/**\n * Cast a value to a boolean.\n */\n\nvar filename = _slash2[\"default\"];\n\nexports.filename = filename;\n/**\n * [Please add a description.]\n */\n\nfunction boolean(val) {\n  return !!val;\n}\n\n/**\n * Cast a boolean-like string to a boolean.\n */\n\nfunction booleanString(val) {\n  return util.booleanify(val);\n}\n\n/**\n * Cast a value to an array, splitting strings by \",\".\n */\n\nfunction list(val) {\n  return util.list(val);\n}"]}