{"version":3,"sources":["build-comprehension.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC;AAC1B,OAAO,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC;;;AAG3B,SAAS,uBAAuB,CAAC,GAAG,EAAE;AAAE,MAAI,GAAG,IAAI,GAAG,CAAC,UAAU,EAAE;AAAE,WAAO,GAAG,CAAC;GAAE,MAAM;AAAE,QAAI,MAAM,GAAG,EAAE,CAAC,AAAC,IAAI,GAAG,IAAI,IAAI,EAAE;AAAE,WAAK,IAAI,GAAG,IAAI,GAAG,EAAE;AAAE,YAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;OAAE;KAAE,AAAC,MAAM,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC,AAAC,OAAO,MAAM,CAAC;GAAE;CAAE;;AAEhR,IAAI,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;;AAEpC,IAAI,CAAC,GAAG,uBAAuB,CAAC,MAAM,CAAC,CAAC;;;;;;AAMxC,SAAS,KAAK,CAAC,IAAI,EAAE,SAAS,EAAE;AAC9B,MAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;AAC/B,MAAI,CAAC,IAAI,EAAE,OAAO;;AAElB,MAAI,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AACnC,MAAI,CAAC,KAAK,EAAE;;AAEV,SAAK,GAAG,SAAS,EAAE,CAAC;;;AAGpB,QAAI,IAAI,CAAC,MAAM,EAAE;AACf,WAAK,GAAG,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KAC/D;GACF;;AAED,SAAO,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,mBAAmB,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;CACjI;;AAED,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC","file":"build-comprehension-compiled.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = build;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _types = require(\"../../types\");\n\nvar t = _interopRequireWildcard(_types);\n\n/**\n * [Please add a description.]\n */\n\nfunction build(node, buildBody) {\n  var self = node.blocks.shift();\n  if (!self) return;\n\n  var child = build(node, buildBody);\n  if (!child) {\n    // last item\n    child = buildBody();\n\n    // add a filter as this is our final stop\n    if (node.filter) {\n      child = t.ifStatement(node.filter, t.blockStatement([child]));\n    }\n  }\n\n  return t.forOfStatement(t.variableDeclaration(\"let\", [t.variableDeclarator(self.left)]), self.right, t.blockStatement([child]));\n}\n\nmodule.exports = exports[\"default\"];"]}