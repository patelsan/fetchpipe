{"version":3,"sources":["remap-async-to-generator.js"],"names":[],"mappings":"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","file":"remap-async-to-generator-compiled.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _types = require(\"../../types\");\n\nvar t = _interopRequireWildcard(_types);\n\n/**\n * [Please add a description.]\n */\n\nvar awaitVisitor = {\n\n  /**\n   * [Please add a description.]\n   */\n\n  Function: function Function() {\n    this.skip();\n  },\n\n  /**\n   * [Please add a description.]\n   */\n\n  AwaitExpression: function AwaitExpression(node) {\n    node.type = \"YieldExpression\";\n\n    if (node.all) {\n      // await* foo; -> yield Promise.all(foo);\n      node.all = false;\n      node.argument = t.callExpression(t.memberExpression(t.identifier(\"Promise\"), t.identifier(\"all\")), [node.argument]);\n    }\n  }\n};\n\n/**\n * [Please add a description.]\n */\n\nvar referenceVisitor = {\n\n  /**\n   * [Please add a description.]\n   */\n\n  ReferencedIdentifier: function ReferencedIdentifier(node, parent, scope, state) {\n    var name = state.id.name;\n    if (node.name === name && scope.bindingIdentifierEquals(name, state.id)) {\n      return state.ref = state.ref || scope.generateUidIdentifier(name);\n    }\n  }\n};\n\n/**\n * [Please add a description.]\n */\n\nexports[\"default\"] = function (path, callId) {\n  var node = path.node;\n\n  node.async = false;\n  node.generator = true;\n\n  path.traverse(awaitVisitor, state);\n\n  var call = t.callExpression(callId, [node]);\n\n  var id = node.id;\n  node.id = null;\n\n  if (t.isFunctionDeclaration(node)) {\n    var declar = t.variableDeclaration(\"let\", [t.variableDeclarator(id, call)]);\n    declar._blockHoist = true;\n    return declar;\n  } else {\n    if (id) {\n      var state = { id: id };\n      path.traverse(referenceVisitor, state);\n\n      if (state.ref) {\n        path.scope.parent.push({ id: state.ref });\n        return t.assignmentExpression(\"=\", state.ref, call);\n      }\n    }\n\n    return call;\n  }\n};\n\nmodule.exports = exports[\"default\"];"]}