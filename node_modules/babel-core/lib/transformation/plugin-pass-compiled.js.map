{"version":3,"sources":["plugin-pass.js"],"names":[],"mappings":";;;;;;;AAOA,YAAY,CAAC;;AAEb,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC;;;AAG1B,SAAS,sBAAsB,CAAC,GAAG,EAAE;AAAE,SAAO,GAAG,IAAI,GAAG,CAAC,UAAU,GAAG,GAAG,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC;CAAE;;;;AAIjG,SAAS,eAAe,CAAC,QAAQ,EAAE,WAAW,EAAE;AAAE,MAAI,EAAE,QAAQ,YAAY,WAAW,CAAA,AAAC,EAAE;AAAE,UAAM,IAAI,SAAS,CAAC,mCAAmC,CAAC,CAAC;GAAE;CAAE;;AAEzJ,IAAI,UAAU,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;;AAEzC,IAAI,WAAW,GAAG,sBAAsB,CAAC,UAAU,CAAC,CAAC;;AAErD,IAAI,UAAU,GAAG,CAAC,YAAY;AAC5B,WAAS,UAAU,CAAC,IAAI,EAAE,MAAM,EAAE;AAChC,mBAAe,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;;AAElC,QAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,QAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;;AAEtB,QAAI,IAAI,CAAC,YAAY,EAAE,IAAI,MAAM,CAAC,QAAQ,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;AAClF,UAAI,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,GAAG,GAAG,qEAAqE,GAAG,sFAAsF,GAAG,+CAA+C,CAAC,CAAC;KACjQ;GACF;;;;;;AAMD,YAAU,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,YAAY,GAAG;AAC1D,WAAO,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;GACpH,CAAC;;;;;;AAMF,YAAU,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,SAAS,GAAG;AACpD,QAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACrB,QAAI,CAAC,GAAG,CAAC,KAAK,CAAC,oBAAoB,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;AAChD,eAAW,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AACxE,QAAI,CAAC,GAAG,CAAC,KAAK,CAAC,qBAAqB,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;GAClD,CAAC;;AAEF,SAAO,UAAU,CAAC;CACnB,CAAA,EAAG,CAAC;;AAEL,OAAO,CAAC,SAAS,CAAC,GAAG,UAAU,CAAC;AAChC,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC","file":"plugin-pass-compiled.js","sourcesContent":["\n\n/**\n * This class is responsible for traversing over the provided `File`s\n * AST and running it's parent transformers handlers over it.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// istanbul ignore next\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _traversal = require(\"../traversal\");\n\nvar _traversal2 = _interopRequireDefault(_traversal);\n\nvar PluginPass = (function () {\n  function PluginPass(file, plugin) {\n    _classCallCheck(this, PluginPass);\n\n    this.plugin = plugin;\n    this.file = file;\n    this.key = plugin.key;\n\n    if (this.canTransform() && plugin.metadata.experimental && !file.opts.experimental) {\n      file.log.warn(\"THE TRANSFORMER \" + this.key + \" HAS BEEN MARKED AS EXPERIMENTAL AND IS WIP. USE AT YOUR OWN RISK. \" + \"THIS WILL HIGHLY LIKELY BREAK YOUR CODE SO USE WITH **EXTREME** CAUTION. ENABLE THE \" + \"`experimental` OPTION TO IGNORE THIS WARNING.\");\n    }\n  }\n\n  /**\n  * [Please add a description.]\n  */\n\n  PluginPass.prototype.canTransform = function canTransform() {\n    return this.file.transformerDependencies[this.key] || this.file.pipeline.canTransform(this.plugin, this.file.opts);\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  PluginPass.prototype.transform = function transform() {\n    var file = this.file;\n    file.log.debug(\"Start transformer \" + this.key);\n    _traversal2[\"default\"](file.ast, this.plugin.visitor, file.scope, file);\n    file.log.debug(\"Finish transformer \" + this.key);\n  };\n\n  return PluginPass;\n})();\n\nexports[\"default\"] = PluginPass;\nmodule.exports = exports[\"default\"];"]}