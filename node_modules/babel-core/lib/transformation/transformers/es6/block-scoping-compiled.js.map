{"version":3,"sources":["block-scoping.js"],"names":[],"mappings":"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","file":"block-scoping-compiled.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// istanbul ignore next\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _traversal = require(\"../../../traversal\");\n\nvar _traversal2 = _interopRequireDefault(_traversal);\n\nvar _helpersObject = require(\"../../../helpers/object\");\n\nvar _helpersObject2 = _interopRequireDefault(_helpersObject);\n\nvar _util = require(\"../../../util\");\n\nvar util = _interopRequireWildcard(_util);\n\nvar _types = require(\"../../../types\");\n\nvar t = _interopRequireWildcard(_types);\n\nvar _lodashObjectValues = require(\"lodash/object/values\");\n\nvar _lodashObjectValues2 = _interopRequireDefault(_lodashObjectValues);\n\nvar _lodashObjectExtend = require(\"lodash/object/extend\");\n\nvar _lodashObjectExtend2 = _interopRequireDefault(_lodashObjectExtend);\n\n/**\n * [Please add a description.]\n */\n\nfunction isLet(node, parent) {\n  if (!t.isVariableDeclaration(node)) return false;\n  if (node._let) return true;\n  if (node.kind !== \"let\") return false;\n\n  // https://github.com/babel/babel/issues/255\n  if (isLetInitable(node, parent)) {\n    for (var i = 0; i < node.declarations.length; i++) {\n      var declar = node.declarations[i];\n      declar.init = declar.init || t.identifier(\"undefined\");\n    }\n  }\n\n  node._let = true;\n  node.kind = \"var\";\n  return true;\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction isLetInitable(node, parent) {\n  return !t.isFor(parent) || !t.isFor(parent, { left: node });\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction isVar(node, parent) {\n  return t.isVariableDeclaration(node, { kind: \"var\" }) && !isLet(node, parent);\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction standardizeLets(declars) {\n  var _arr = declars;\n\n  for (var _i = 0; _i < _arr.length; _i++) {\n    var declar = _arr[_i];\n    delete declar._let;\n  }\n}\n\nvar metadata = {\n  group: \"builtin-advanced\"\n};\n\nexports.metadata = metadata;\n/**\n * [Please add a description.]\n */\n\nvar visitor = {\n\n  /**\n   * [Please add a description.]\n   */\n\n  VariableDeclaration: function VariableDeclaration(node, parent, scope, file) {\n    if (!isLet(node, parent)) return;\n\n    if (isLetInitable(node) && file.transformers[\"es6.spec.blockScoping\"].canTransform()) {\n      var nodes = [node];\n\n      for (var i = 0; i < node.declarations.length; i++) {\n        var decl = node.declarations[i];\n        if (decl.init) {\n          var assign = t.assignmentExpression(\"=\", decl.id, decl.init);\n          assign._ignoreBlockScopingTDZ = true;\n          nodes.push(t.expressionStatement(assign));\n        }\n        decl.init = file.addHelper(\"temporal-undefined\");\n      }\n\n      node._blockHoist = 2;\n\n      return nodes;\n    }\n  },\n\n  /**\n   * [Please add a description.]\n   */\n\n  Loop: function Loop(node, parent, scope, file) {\n    var init = node.left || node.init;\n    if (isLet(init, node)) {\n      t.ensureBlock(node);\n      node.body._letDeclarators = [init];\n    }\n\n    var blockScoping = new BlockScoping(this, this.get(\"body\"), parent, scope, file);\n    return blockScoping.run();\n  },\n\n  /**\n   * [Please add a description.]\n   */\n\n  \"BlockStatement|Program\": function BlockStatementProgram(block, parent, scope, file) {\n    if (!t.isLoop(parent)) {\n      var blockScoping = new BlockScoping(null, this, parent, scope, file);\n      blockScoping.run();\n    }\n  }\n};\n\nexports.visitor = visitor;\n/**\n * [Please add a description.]\n */\n\nfunction replace(node, parent, scope, remaps) {\n  var remap = remaps[node.name];\n  if (!remap) return;\n\n  var ownBinding = scope.getBindingIdentifier(node.name);\n  if (ownBinding === remap.binding) {\n    node.name = remap.uid;\n  } else {\n    // scope already has it's own binding that doesn't\n    // match the one we have a stored replacement for\n    if (this) this.skip();\n  }\n}\n\n/**\n * [Please add a description.]\n */\n\nvar replaceVisitor = {\n  ReferencedIdentifier: replace,\n\n  /**\n   * [Please add a description.]\n   */\n\n  AssignmentExpression: function AssignmentExpression(node, parent, scope, remaps) {\n    var ids = this.getBindingIdentifiers();\n    for (var name in ids) {\n      replace(ids[name], node, scope, remaps);\n    }\n  }\n};\n\n/**\n * [Please add a description.]\n */\n\nfunction traverseReplace(node, parent, scope, remaps) {\n  if (t.isIdentifier(node)) {\n    replace(node, parent, scope, remaps);\n  }\n\n  if (t.isAssignmentExpression(node)) {\n    var ids = t.getBindingIdentifiers(node);\n    for (var name in ids) {\n      replace(ids[name], parent, scope, remaps);\n    }\n  }\n\n  scope.traverse(node, replaceVisitor, remaps);\n}\n\n/**\n * [Please add a description.]\n */\n\nvar letReferenceBlockVisitor = {\n\n  /**\n   * [Please add a description.]\n   */\n\n  Function: function Function(node, parent, scope, state) {\n    this.traverse(letReferenceFunctionVisitor, state);\n    return this.skip();\n  }\n};\n\n/**\n * [Please add a description.]\n */\n\nvar letReferenceFunctionVisitor = {\n\n  /**\n   * [Please add a description.]\n   */\n\n  ReferencedIdentifier: function ReferencedIdentifier(node, parent, scope, state) {\n    var ref = state.letReferences[node.name];\n\n    // not a part of our scope\n    if (!ref) return;\n\n    // this scope has a variable with the same name so it couldn't belong\n    // to our let scope\n    var localBinding = scope.getBindingIdentifier(node.name);\n    if (localBinding && localBinding !== ref) return;\n\n    state.closurify = true;\n  }\n};\n\n/**\n * [Please add a description.]\n */\n\nvar hoistVarDeclarationsVisitor = {\n  enter: function enter(node, parent, scope, self) {\n    if (this.isForStatement()) {\n      if (isVar(node.init, node)) {\n        var nodes = self.pushDeclar(node.init);\n        if (nodes.length === 1) {\n          node.init = nodes[0];\n        } else {\n          node.init = t.sequenceExpression(nodes);\n        }\n      }\n    } else if (this.isFor()) {\n      if (isVar(node.left, node)) {\n        self.pushDeclar(node.left);\n        node.left = node.left.declarations[0].id;\n      }\n    } else if (isVar(node, parent)) {\n      return self.pushDeclar(node).map(t.expressionStatement);\n    } else if (this.isFunction()) {\n      return this.skip();\n    }\n  }\n};\n\n/**\n * [Please add a description.]\n */\n\nvar loopLabelVisitor = {\n  LabeledStatement: function LabeledStatement(node, parent, scope, state) {\n    state.innerLabels.push(node.label.name);\n  }\n};\n\n/**\n * [Please add a description.]\n */\n\nvar continuationVisitor = {\n  enter: function enter(node, parent, scope, state) {\n    if (this.isAssignmentExpression() || this.isUpdateExpression()) {\n      var bindings = this.getBindingIdentifiers();\n      for (var name in bindings) {\n        if (state.outsideReferences[name] !== scope.getBindingIdentifier(name)) continue;\n        state.reassignments[name] = true;\n      }\n    }\n  }\n};\n\n/**\n * [Please add a description.]\n */\n\nvar loopNodeTo = function loopNodeTo(node) {\n  if (t.isBreakStatement(node)) {\n    return \"break\";\n  } else if (t.isContinueStatement(node)) {\n    return \"continue\";\n  }\n};\n\n/**\n * [Please add a description.]\n */\n\nvar loopVisitor = {\n\n  /**\n   * [Please add a description.]\n   */\n\n  Loop: function Loop(node, parent, scope, state) {\n    var oldIgnoreLabeless = state.ignoreLabeless;\n    state.ignoreLabeless = true;\n    this.traverse(loopVisitor, state);\n    state.ignoreLabeless = oldIgnoreLabeless;\n    this.skip();\n  },\n\n  /**\n   * [Please add a description.]\n   */\n\n  Function: function Function() {\n    this.skip();\n  },\n\n  /**\n   * [Please add a description.]\n   */\n\n  SwitchCase: function SwitchCase(node, parent, scope, state) {\n    var oldInSwitchCase = state.inSwitchCase;\n    state.inSwitchCase = true;\n    this.traverse(loopVisitor, state);\n    state.inSwitchCase = oldInSwitchCase;\n    this.skip();\n  },\n\n  /**\n   * [Please add a description.]\n   */\n\n  enter: function enter(node, parent, scope, state) {\n    var replace;\n    var loopText = loopNodeTo(node);\n\n    if (loopText) {\n      if (node.label) {\n        // we shouldn't be transforming this because it exists somewhere inside\n        if (state.innerLabels.indexOf(node.label.name) >= 0) {\n          return;\n        }\n\n        loopText = loopText + \"|\" + node.label.name;\n      } else {\n        // we shouldn't be transforming these statements because\n        // they don't refer to the actual loop we're scopifying\n        if (state.ignoreLabeless) return;\n\n        //\n        if (state.inSwitchCase) return;\n\n        // break statements mean something different in this context\n        if (t.isBreakStatement(node) && t.isSwitchCase(parent)) return;\n      }\n\n      state.hasBreakContinue = true;\n      state.map[loopText] = node;\n      replace = t.literal(loopText);\n    }\n\n    if (this.isReturnStatement()) {\n      state.hasReturn = true;\n      replace = t.objectExpression([t.property(\"init\", t.identifier(\"v\"), node.argument || t.identifier(\"undefined\"))]);\n    }\n\n    if (replace) {\n      replace = t.returnStatement(replace);\n      this.skip();\n      return t.inherits(replace, node);\n    }\n  }\n};\n\n/**\n * [Please add a description.]\n */\n\nvar BlockScoping = (function () {\n  function BlockScoping(loopPath, blockPath, parent, scope, file) {\n    _classCallCheck(this, BlockScoping);\n\n    this.parent = parent;\n    this.scope = scope;\n    this.file = file;\n\n    this.blockPath = blockPath;\n    this.block = blockPath.node;\n\n    this.outsideLetReferences = _helpersObject2[\"default\"]();\n    this.hasLetReferences = false;\n    this.letReferences = this.block._letReferences = _helpersObject2[\"default\"]();\n    this.body = [];\n\n    if (loopPath) {\n      this.loopParent = loopPath.parent;\n      this.loopLabel = t.isLabeledStatement(this.loopParent) && this.loopParent.label;\n      this.loopPath = loopPath;\n      this.loop = loopPath.node;\n    }\n  }\n\n  /**\n   * Start the ball rolling.\n   */\n\n  BlockScoping.prototype.run = function run() {\n    var block = this.block;\n    if (block._letDone) return;\n    block._letDone = true;\n\n    var needsClosure = this.getLetReferences();\n\n    // this is a block within a `Function/Program` so we can safely leave it be\n    if (t.isFunction(this.parent) || t.isProgram(this.block)) return;\n\n    // we can skip everything\n    if (!this.hasLetReferences) return;\n\n    if (needsClosure) {\n      this.wrapClosure();\n    } else {\n      this.remap();\n    }\n\n    if (this.loopLabel && !t.isLabeledStatement(this.loopParent)) {\n      return t.labeledStatement(this.loopLabel, this.loop);\n    }\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  BlockScoping.prototype.remap = function remap() {\n    var hasRemaps = false;\n    var letRefs = this.letReferences;\n    var scope = this.scope;\n\n    // alright, so since we aren't wrapping this block in a closure\n    // we have to check if any of our let variables collide with\n    // those in upper scopes and then if they do, generate a uid\n    // for them and replace all references with it\n    var remaps = _helpersObject2[\"default\"]();\n\n    for (var key in letRefs) {\n      // just an Identifier node we collected in `getLetReferences`\n      // this is the defining identifier of a declaration\n      var ref = letRefs[key];\n\n      // todo: could skip this if the colliding binding is in another function\n      if (scope.parentHasBinding(key) || scope.hasGlobal(key)) {\n        var uid = scope.generateUidIdentifier(ref.name).name;\n        ref.name = uid;\n\n        hasRemaps = true;\n        remaps[key] = remaps[uid] = {\n          binding: ref,\n          uid: uid\n        };\n      }\n    }\n\n    if (!hasRemaps) return;\n\n    //\n\n    var loop = this.loop;\n    if (loop) {\n      traverseReplace(loop.right, loop, scope, remaps);\n      traverseReplace(loop.test, loop, scope, remaps);\n      traverseReplace(loop.update, loop, scope, remaps);\n    }\n\n    this.blockPath.traverse(replaceVisitor, remaps);\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  BlockScoping.prototype.wrapClosure = function wrapClosure() {\n    var block = this.block;\n\n    var outsideRefs = this.outsideLetReferences;\n\n    // remap loop heads with colliding variables\n    if (this.loop) {\n      for (var name in outsideRefs) {\n        var id = outsideRefs[name];\n\n        if (this.scope.hasGlobal(id.name) || this.scope.parentHasBinding(id.name)) {\n          delete outsideRefs[id.name];\n          delete this.letReferences[id.name];\n\n          this.scope.rename(id.name);\n\n          this.letReferences[id.name] = id;\n          outsideRefs[id.name] = id;\n        }\n      }\n    }\n\n    // if we're inside of a for loop then we search to see if there are any\n    // `break`s, `continue`s, `return`s etc\n    this.has = this.checkLoop();\n\n    // hoist var references to retain scope\n    this.hoistVarDeclarations();\n\n    // turn outsideLetReferences into an array\n    var params = _lodashObjectValues2[\"default\"](outsideRefs);\n    var args = _lodashObjectValues2[\"default\"](outsideRefs);\n\n    // build the closure that we're going to wrap the block with\n    var fn = t.functionExpression(null, params, t.blockStatement(block.body));\n    fn.shadow = true;\n\n    // continuation\n    this.addContinuations(fn);\n\n    // replace the current block body with the one we're going to build\n    block.body = this.body;\n\n    var ref = fn;\n\n    if (this.loop) {\n      ref = this.scope.generateUidIdentifier(\"loop\");\n      this.loopPath.insertBefore(t.variableDeclaration(\"var\", [t.variableDeclarator(ref, fn)]));\n    }\n\n    // build a call and a unique id that we can assign the return value to\n    var call = t.callExpression(ref, args);\n    var ret = this.scope.generateUidIdentifier(\"ret\");\n\n    // handle generators\n    var hasYield = _traversal2[\"default\"].hasType(fn.body, this.scope, \"YieldExpression\", t.FUNCTION_TYPES);\n    if (hasYield) {\n      fn.generator = true;\n      call = t.yieldExpression(call, true);\n    }\n\n    // handlers async functions\n    var hasAsync = _traversal2[\"default\"].hasType(fn.body, this.scope, \"AwaitExpression\", t.FUNCTION_TYPES);\n    if (hasAsync) {\n      fn.async = true;\n      call = t.awaitExpression(call);\n    }\n\n    this.buildClosure(ret, call);\n  };\n\n  /**\n   * Push the closure to the body.\n   */\n\n  BlockScoping.prototype.buildClosure = function buildClosure(ret, call) {\n    var has = this.has;\n    if (has.hasReturn || has.hasBreakContinue) {\n      this.buildHas(ret, call);\n    } else {\n      this.body.push(t.expressionStatement(call));\n    }\n  };\n\n  /**\n   * If any of the outer let variables are reassigned then we need to rename them in\n   * the closure so we can get direct access to the outer variable to continue the\n   * iteration with bindings based on each iteration.\n   *\n   * Reference: https://github.com/babel/babel/issues/1078\n   */\n\n  BlockScoping.prototype.addContinuations = function addContinuations(fn) {\n    var state = {\n      reassignments: {},\n      outsideReferences: this.outsideLetReferences\n    };\n\n    this.scope.traverse(fn, continuationVisitor, state);\n\n    for (var i = 0; i < fn.params.length; i++) {\n      var param = fn.params[i];\n      if (!state.reassignments[param.name]) continue;\n\n      var newParam = this.scope.generateUidIdentifier(param.name);\n      fn.params[i] = newParam;\n\n      this.scope.rename(param.name, newParam.name, fn);\n\n      // assign outer reference as it's been modified internally and needs to be retained\n      fn.body.body.push(t.expressionStatement(t.assignmentExpression(\"=\", param, newParam)));\n    }\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  BlockScoping.prototype.getLetReferences = function getLetReferences() {\n    var block = this.block;\n\n    var declarators = block._letDeclarators || [];\n\n    //\n    for (var i = 0; i < declarators.length; i++) {\n      var declar = declarators[i];\n      _lodashObjectExtend2[\"default\"](this.outsideLetReferences, t.getBindingIdentifiers(declar));\n    }\n\n    //\n    if (block.body) {\n      for (var i = 0; i < block.body.length; i++) {\n        var declar = block.body[i];\n        if (isLet(declar, block)) {\n          declarators = declarators.concat(declar.declarations);\n        }\n      }\n    }\n\n    //\n    for (var i = 0; i < declarators.length; i++) {\n      var declar = declarators[i];\n      var keys = t.getBindingIdentifiers(declar);\n      _lodashObjectExtend2[\"default\"](this.letReferences, keys);\n      this.hasLetReferences = true;\n    }\n\n    // no let references so we can just quit\n    if (!this.hasLetReferences) return;\n\n    // set let references to plain var references\n    standardizeLets(declarators);\n\n    var state = {\n      letReferences: this.letReferences,\n      closurify: false\n    };\n\n    // traverse through this block, stopping on functions and checking if they\n    // contain any local let references\n    this.blockPath.traverse(letReferenceBlockVisitor, state);\n\n    return state.closurify;\n  };\n\n  /**\n   * If we're inside of a loop then traverse it and check if it has one of\n   * the following node types `ReturnStatement`, `BreakStatement`,\n   * `ContinueStatement` and replace it with a return value that we can track\n   * later on.\n   *\n   * @returns {Object}\n   */\n\n  BlockScoping.prototype.checkLoop = function checkLoop() {\n    var state = {\n      hasBreakContinue: false,\n      ignoreLabeless: false,\n      inSwitchCase: false,\n      innerLabels: [],\n      hasReturn: false,\n      isLoop: !!this.loop,\n      map: {}\n    };\n\n    this.blockPath.traverse(loopLabelVisitor, state);\n    this.blockPath.traverse(loopVisitor, state);\n\n    return state;\n  };\n\n  /**\n   * Hoist all var declarations in this block to before it so they retain scope\n   * once we wrap everything in a closure.\n   */\n\n  BlockScoping.prototype.hoistVarDeclarations = function hoistVarDeclarations() {\n    this.blockPath.traverse(hoistVarDeclarationsVisitor, this);\n  };\n\n  /**\n   * Turn a `VariableDeclaration` into an array of `AssignmentExpressions` with\n   * their declarations hoisted to before the closure wrapper.\n   */\n\n  BlockScoping.prototype.pushDeclar = function pushDeclar(node) {\n    var declars = [];\n    var names = t.getBindingIdentifiers(node);\n    for (var name in names) {\n      declars.push(t.variableDeclarator(names[name]));\n    }\n\n    this.body.push(t.variableDeclaration(node.kind, declars));\n\n    var replace = [];\n\n    for (var i = 0; i < node.declarations.length; i++) {\n      var declar = node.declarations[i];\n      if (!declar.init) continue;\n\n      var expr = t.assignmentExpression(\"=\", declar.id, declar.init);\n      replace.push(t.inherits(expr, declar));\n    }\n\n    return replace;\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  BlockScoping.prototype.buildHas = function buildHas(ret, call) {\n    var body = this.body;\n\n    body.push(t.variableDeclaration(\"var\", [t.variableDeclarator(ret, call)]));\n\n    var retCheck;\n    var has = this.has;\n    var cases = [];\n\n    if (has.hasReturn) {\n      // typeof ret === \"object\"\n      retCheck = util.template(\"let-scoping-return\", {\n        RETURN: ret\n      });\n    }\n\n    if (has.hasBreakContinue) {\n      for (var key in has.map) {\n        cases.push(t.switchCase(t.literal(key), [has.map[key]]));\n      }\n\n      if (has.hasReturn) {\n        cases.push(t.switchCase(null, [retCheck]));\n      }\n\n      if (cases.length === 1) {\n        var single = cases[0];\n        body.push(this.file.attachAuxiliaryComment(t.ifStatement(t.binaryExpression(\"===\", ret, single.test), single.consequent[0])));\n      } else {\n        // https://github.com/babel/babel/issues/998\n        for (var i = 0; i < cases.length; i++) {\n          var caseConsequent = cases[i].consequent[0];\n          if (t.isBreakStatement(caseConsequent) && !caseConsequent.label) {\n            caseConsequent.label = this.loopLabel = this.loopLabel || this.file.scope.generateUidIdentifier(\"loop\");\n          }\n        }\n\n        body.push(this.file.attachAuxiliaryComment(t.switchStatement(ret, cases)));\n      }\n    } else {\n      if (has.hasReturn) {\n        body.push(this.file.attachAuxiliaryComment(retCheck));\n      }\n    }\n  };\n\n  return BlockScoping;\n})();"]}