{"version":3,"sources":["constants.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC;;;AAG1B,SAAS,uBAAuB,CAAC,GAAG,EAAE;AAAE,MAAI,GAAG,IAAI,GAAG,CAAC,UAAU,EAAE;AAAE,WAAO,GAAG,CAAC;GAAE,MAAM;AAAE,QAAI,MAAM,GAAG,EAAE,CAAC,AAAC,IAAI,GAAG,IAAI,IAAI,EAAE;AAAE,WAAK,IAAI,GAAG,IAAI,GAAG,EAAE;AAAE,YAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;OAAE;KAAE,AAAC,MAAM,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC,AAAC,OAAO,MAAM,CAAC;GAAE;CAAE;;AAEhR,IAAI,SAAS,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;;AAE7C,IAAI,QAAQ,GAAG,uBAAuB,CAAC,SAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;AAqBlD,IAAI,OAAO,GAAG;;;;;;;AAOZ,OAAK,EAAE,SAAS,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE;AACzC,SAAK,IAAI,IAAI,IAAI,KAAK,CAAC,QAAQ,EAAE;AAC/B,UAAI,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;;;AAGnC,UAAI,OAAO,CAAC,IAAI,KAAK,OAAO,IAAI,OAAO,CAAC,IAAI,KAAK,QAAQ,EAAE,SAAS;;AAEpE,UAAI,IAAI,GAAG,OAAO,CAAC,kBAAkB,CAAC;AACtC,WAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;AACvC,YAAI,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;AACzB,cAAM,SAAS,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;OAC/D;KACF;GACF;;;;;;;AAOD,qBAAmB,EAAE,SAAS,mBAAmB,CAAC,IAAI,EAAE;AACtD,QAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;GAC9C;CACF,CAAC;AACF,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC","file":"constants-compiled.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _messages = require(\"../../../messages\");\n\nvar messages = _interopRequireWildcard(_messages);\n\n/**\n * Turn constants into variables.\n * Ensure there are no constant violations in any scope.\n *\n * @example\n *\n * **In**\n *\n * ```javascript\n * const MULTIPLIER = 5;\n * ```\n *\n * **Out**\n *\n * ```javascript\n * var MULTIPLIER = 5;\n * ```\n */\n\nvar visitor = {\n\n  /**\n   * Look for any constants (or modules) in scope.\n   * If they have any `constantViolations` throw an error.\n   */\n\n  Scope: function Scope(node, parent, scope) {\n    for (var name in scope.bindings) {\n      var binding = scope.bindings[name];\n\n      // not a constant\n      if (binding.kind !== \"const\" && binding.kind !== \"module\") continue;\n\n      var _arr = binding.constantViolations;\n      for (var _i = 0; _i < _arr.length; _i++) {\n        var violation = _arr[_i];\n        throw violation.errorWithNode(messages.get(\"readOnly\", name));\n      }\n    }\n  },\n\n  /**\n   * Look for constants.\n   * Turn them into `let` variables.\n   */\n\n  VariableDeclaration: function VariableDeclaration(node) {\n    if (node.kind === \"const\") node.kind = \"let\";\n  }\n};\nexports.visitor = visitor;"]}