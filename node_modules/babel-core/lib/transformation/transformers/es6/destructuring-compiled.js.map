{"version":3,"sources":["destructuring.js"],"names":[],"mappings":"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","file":"destructuring-compiled.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\n// istanbul ignore next\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _messages = require(\"../../../messages\");\n\nvar messages = _interopRequireWildcard(_messages);\n\nvar _types = require(\"../../../types\");\n\nvar t = _interopRequireWildcard(_types);\n\nvar metadata = {\n  group: \"builtin-advanced\"\n};\n\nexports.metadata = metadata;\n/**\n * [Please add a description.]\n */\n\nvar visitor = {\n\n  /**\n   * [Please add a description.]\n   */\n\n  ForXStatement: function ForXStatement(node, parent, scope, file) {\n    var left = node.left;\n\n    if (t.isPattern(left)) {\n      // for ({ length: k } in { abc: 3 });\n\n      var temp = scope.generateUidIdentifier(\"ref\");\n\n      node.left = t.variableDeclaration(\"var\", [t.variableDeclarator(temp)]);\n\n      this.ensureBlock();\n\n      node.body.body.unshift(t.variableDeclaration(\"var\", [t.variableDeclarator(left, temp)]));\n\n      return;\n    }\n\n    if (!t.isVariableDeclaration(left)) return;\n\n    var pattern = left.declarations[0].id;\n    if (!t.isPattern(pattern)) return;\n\n    var key = scope.generateUidIdentifier(\"ref\");\n    node.left = t.variableDeclaration(left.kind, [t.variableDeclarator(key, null)]);\n\n    var nodes = [];\n\n    var destructuring = new DestructuringTransformer({\n      kind: left.kind,\n      file: file,\n      scope: scope,\n      nodes: nodes\n    });\n\n    destructuring.init(pattern, key);\n\n    this.ensureBlock();\n\n    var block = node.body;\n    block.body = nodes.concat(block.body);\n  },\n\n  /**\n   * [Please add a description.]\n   */\n\n  Function: function Function(node, parent, scope, file) {\n    var hasDestructuring = false;\n    var _arr = node.params;\n    for (var _i = 0; _i < _arr.length; _i++) {\n      var pattern = _arr[_i];\n      if (t.isPattern(pattern)) {\n        hasDestructuring = true;\n        break;\n      }\n    }\n    if (!hasDestructuring) return;\n\n    var nodes = [];\n\n    for (var i = 0; i < node.params.length; i++) {\n      var pattern = node.params[i];\n      if (!t.isPattern(pattern)) continue;\n\n      var ref = scope.generateUidIdentifier(\"ref\");\n      if (t.isAssignmentPattern(pattern)) {\n        var _pattern = pattern;\n        pattern = pattern.left;\n        _pattern.left = ref;\n      } else {\n        node.params[i] = ref;\n      }\n\n      t.inherits(ref, pattern);\n\n      var destructuring = new DestructuringTransformer({\n        blockHoist: node.params.length - i,\n        nodes: nodes,\n        scope: scope,\n        file: file,\n        kind: \"let\"\n      });\n\n      destructuring.init(pattern, ref);\n    }\n\n    this.ensureBlock();\n\n    var block = node.body;\n    block.body = nodes.concat(block.body);\n  },\n\n  /**\n   * [Please add a description.]\n   */\n\n  CatchClause: function CatchClause(node, parent, scope, file) {\n    var pattern = node.param;\n    if (!t.isPattern(pattern)) return;\n\n    var ref = scope.generateUidIdentifier(\"ref\");\n    node.param = ref;\n\n    var nodes = [];\n\n    var destructuring = new DestructuringTransformer({\n      kind: \"let\",\n      file: file,\n      scope: scope,\n      nodes: nodes\n    });\n    destructuring.init(pattern, ref);\n\n    node.body.body = nodes.concat(node.body.body);\n  },\n\n  /**\n   * [Please add a description.]\n   */\n\n  AssignmentExpression: function AssignmentExpression(node, parent, scope, file) {\n    if (!t.isPattern(node.left)) return;\n\n    var nodes = [];\n\n    var destructuring = new DestructuringTransformer({\n      operator: node.operator,\n      file: file,\n      scope: scope,\n      nodes: nodes\n    });\n\n    var ref;\n    if (this.isCompletionRecord() || !this.parentPath.isExpressionStatement()) {\n      ref = scope.generateUidIdentifierBasedOnNode(node.right, \"ref\");\n\n      nodes.push(t.variableDeclaration(\"var\", [t.variableDeclarator(ref, node.right)]));\n\n      if (t.isArrayExpression(node.right)) {\n        destructuring.arrays[ref.name] = true;\n      }\n    }\n\n    destructuring.init(node.left, ref || node.right);\n\n    if (ref) {\n      nodes.push(t.expressionStatement(ref));\n    }\n\n    return nodes;\n  },\n\n  /**\n   * [Please add a description.]\n   */\n\n  VariableDeclaration: function VariableDeclaration(node, parent, scope, file) {\n    if (t.isForXStatement(parent)) return;\n    if (!variableDeclarationHasPattern(node)) return;\n\n    var nodes = [];\n    var declar;\n\n    for (var i = 0; i < node.declarations.length; i++) {\n      declar = node.declarations[i];\n\n      var patternId = declar.init;\n      var pattern = declar.id;\n\n      var destructuring = new DestructuringTransformer({\n        nodes: nodes,\n        scope: scope,\n        kind: node.kind,\n        file: file\n      });\n\n      if (t.isPattern(pattern)) {\n        destructuring.init(pattern, patternId);\n\n        if (+i !== node.declarations.length - 1) {\n          // we aren't the last declarator so let's just make the\n          // last transformed node inherit from us\n          t.inherits(nodes[nodes.length - 1], declar);\n        }\n      } else {\n        nodes.push(t.inherits(destructuring.buildVariableAssignment(declar.id, declar.init), declar));\n      }\n    }\n\n    if (!t.isProgram(parent) && !t.isBlockStatement(parent)) {\n      // https://github.com/babel/babel/issues/113\n      // for (let [x] = [0]; false;) {}\n\n      declar = null;\n\n      for (i = 0; i < nodes.length; i++) {\n        node = nodes[i];\n        declar = declar || t.variableDeclaration(node.kind, []);\n\n        if (!t.isVariableDeclaration(node) && declar.kind !== node.kind) {\n          throw file.errorWithNode(node, messages.get(\"invalidParentForThisNode\"));\n        }\n\n        declar.declarations = declar.declarations.concat(node.declarations);\n      }\n\n      return declar;\n    }\n\n    return nodes;\n  }\n};\n\nexports.visitor = visitor;\n/**\n * Test if a VariableDeclaration's declarations contains any Patterns.\n */\n\nfunction variableDeclarationHasPattern(node) {\n  for (var i = 0; i < node.declarations.length; i++) {\n    if (t.isPattern(node.declarations[i].id)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Test if an ArrayPattern's elements contain any RestElements.\n */\n\nfunction hasRest(pattern) {\n  for (var i = 0; i < pattern.elements.length; i++) {\n    if (t.isRestElement(pattern.elements[i])) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * [Please add a description.]\n */\n\nvar arrayUnpackVisitor = {\n\n  /**\n   * [Please add a description.]\n   */\n\n  ReferencedIdentifier: function ReferencedIdentifier(node, parent, scope, state) {\n    if (state.bindings[node.name]) {\n      state.deopt = true;\n      this.stop();\n    }\n  }\n};\n\n/**\n * [Please add a description.]\n */\n\nvar DestructuringTransformer = (function () {\n  function DestructuringTransformer(opts) {\n    _classCallCheck(this, DestructuringTransformer);\n\n    this.blockHoist = opts.blockHoist;\n    this.operator = opts.operator;\n    this.arrays = {};\n    this.nodes = opts.nodes || [];\n    this.scope = opts.scope;\n    this.file = opts.file;\n    this.kind = opts.kind;\n  }\n\n  /**\n   * [Please add a description.]\n   */\n\n  DestructuringTransformer.prototype.buildVariableAssignment = function buildVariableAssignment(id, init) {\n    var op = this.operator;\n    if (t.isMemberExpression(id)) op = \"=\";\n\n    var node;\n\n    if (op) {\n      node = t.expressionStatement(t.assignmentExpression(op, id, init));\n    } else {\n      node = t.variableDeclaration(this.kind, [t.variableDeclarator(id, init)]);\n    }\n\n    node._blockHoist = this.blockHoist;\n\n    return node;\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  DestructuringTransformer.prototype.buildVariableDeclaration = function buildVariableDeclaration(id, init) {\n    var declar = t.variableDeclaration(\"var\", [t.variableDeclarator(id, init)]);\n    declar._blockHoist = this.blockHoist;\n    return declar;\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  DestructuringTransformer.prototype.push = function push(id, init) {\n    if (t.isObjectPattern(id)) {\n      this.pushObjectPattern(id, init);\n    } else if (t.isArrayPattern(id)) {\n      this.pushArrayPattern(id, init);\n    } else if (t.isAssignmentPattern(id)) {\n      this.pushAssignmentPattern(id, init);\n    } else {\n      this.nodes.push(this.buildVariableAssignment(id, init));\n    }\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  DestructuringTransformer.prototype.toArray = function toArray(node, count) {\n    if (this.file.isLoose(\"es6.destructuring\") || t.isIdentifier(node) && this.arrays[node.name]) {\n      return node;\n    } else {\n      return this.scope.toArray(node, count);\n    }\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  DestructuringTransformer.prototype.pushAssignmentPattern = function pushAssignmentPattern(pattern, valueRef) {\n    // we need to assign the current value of the assignment to avoid evaluating\n    // it more than once\n\n    var tempValueRef = this.scope.generateUidIdentifierBasedOnNode(valueRef);\n\n    var declar = t.variableDeclaration(\"var\", [t.variableDeclarator(tempValueRef, valueRef)]);\n    declar._blockHoist = this.blockHoist;\n    this.nodes.push(declar);\n\n    //\n\n    var tempConditional = t.conditionalExpression(t.binaryExpression(\"===\", tempValueRef, t.identifier(\"undefined\")), pattern.right, tempValueRef);\n\n    var left = pattern.left;\n    if (t.isPattern(left)) {\n      var tempValueDefault = t.expressionStatement(t.assignmentExpression(\"=\", tempValueRef, tempConditional));\n      tempValueDefault._blockHoist = this.blockHoist;\n\n      this.nodes.push(tempValueDefault);\n      this.push(left, tempValueRef);\n    } else {\n      this.nodes.push(this.buildVariableAssignment(left, tempConditional));\n    }\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  DestructuringTransformer.prototype.pushObjectSpread = function pushObjectSpread(pattern, objRef, spreadProp, spreadPropIndex) {\n    // get all the keys that appear in this object before the current spread\n\n    var keys = [];\n\n    for (var i = 0; i < pattern.properties.length; i++) {\n      var prop = pattern.properties[i];\n\n      // we've exceeded the index of the spread property to all properties to the\n      // right need to be ignored\n      if (i >= spreadPropIndex) break;\n\n      // ignore other spread properties\n      if (t.isSpreadProperty(prop)) continue;\n\n      var key = prop.key;\n      if (t.isIdentifier(key) && !prop.computed) key = t.literal(prop.key.name);\n      keys.push(key);\n    }\n\n    keys = t.arrayExpression(keys);\n\n    //\n\n    var value = t.callExpression(this.file.addHelper(\"object-without-properties\"), [objRef, keys]);\n    this.nodes.push(this.buildVariableAssignment(spreadProp.argument, value));\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  DestructuringTransformer.prototype.pushObjectProperty = function pushObjectProperty(prop, propRef) {\n    if (t.isLiteral(prop.key)) prop.computed = true;\n\n    var pattern = prop.value;\n    var objRef = t.memberExpression(propRef, prop.key, prop.computed);\n\n    if (t.isPattern(pattern)) {\n      this.push(pattern, objRef);\n    } else {\n      this.nodes.push(this.buildVariableAssignment(pattern, objRef));\n    }\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  DestructuringTransformer.prototype.pushObjectPattern = function pushObjectPattern(pattern, objRef) {\n    // https://github.com/babel/babel/issues/681\n\n    if (!pattern.properties.length) {\n      this.nodes.push(t.expressionStatement(t.callExpression(this.file.addHelper(\"object-destructuring-empty\"), [objRef])));\n    }\n\n    // if we have more than one properties in this pattern and the objectRef is a\n    // member expression then we need to assign it to a temporary variable so it's\n    // only evaluated once\n\n    if (pattern.properties.length > 1 && !this.scope.isStatic(objRef)) {\n      var temp = this.scope.generateUidIdentifierBasedOnNode(objRef);\n      this.nodes.push(this.buildVariableDeclaration(temp, objRef));\n      objRef = temp;\n    }\n\n    //\n\n    for (var i = 0; i < pattern.properties.length; i++) {\n      var prop = pattern.properties[i];\n      if (t.isSpreadProperty(prop)) {\n        this.pushObjectSpread(pattern, objRef, prop, i);\n      } else {\n        this.pushObjectProperty(prop, objRef);\n      }\n    }\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  DestructuringTransformer.prototype.canUnpackArrayPattern = function canUnpackArrayPattern(pattern, arr) {\n    // not an array so there's no way we can deal with this\n    if (!t.isArrayExpression(arr)) return false;\n\n    // pattern has less elements than the array and doesn't have a rest so some\n    // elements wont be evaluated\n    if (pattern.elements.length > arr.elements.length) return;\n    if (pattern.elements.length < arr.elements.length && !hasRest(pattern)) return false;\n\n    var _arr2 = pattern.elements;\n    for (var _i2 = 0; _i2 < _arr2.length; _i2++) {\n      var elem = _arr2[_i2];\n      // deopt on holes\n      if (!elem) return false;\n\n      // deopt on member expressions as they may be included in the RHS\n      if (t.isMemberExpression(elem)) return false;\n    }\n\n    var _arr3 = arr.elements;\n    for (var _i3 = 0; _i3 < _arr3.length; _i3++) {\n      var elem = _arr3[_i3];\n      // deopt on spread elements\n      if (t.isSpreadElement(elem)) return false;\n    }\n\n    // deopt on reference to left side identifiers\n    var bindings = t.getBindingIdentifiers(pattern);\n    var state = { deopt: false, bindings: bindings };\n    this.scope.traverse(arr, arrayUnpackVisitor, state);\n    return !state.deopt;\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  DestructuringTransformer.prototype.pushUnpackedArrayPattern = function pushUnpackedArrayPattern(pattern, arr) {\n    for (var i = 0; i < pattern.elements.length; i++) {\n      var elem = pattern.elements[i];\n      if (t.isRestElement(elem)) {\n        this.push(elem.argument, t.arrayExpression(arr.elements.slice(i)));\n      } else {\n        this.push(elem, arr.elements[i]);\n      }\n    }\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  DestructuringTransformer.prototype.pushArrayPattern = function pushArrayPattern(pattern, arrayRef) {\n    if (!pattern.elements) return;\n\n    // optimise basic array destructuring of an array expression\n    //\n    // we can't do this to a pattern of unequal size to it's right hand\n    // array expression as then there will be values that wont be evaluated\n    //\n    // eg: var [a, b] = [1, 2];\n\n    if (this.canUnpackArrayPattern(pattern, arrayRef)) {\n      return this.pushUnpackedArrayPattern(pattern, arrayRef);\n    }\n\n    // if we have a rest then we need all the elements so don't tell\n    // `scope.toArray` to only get a certain amount\n\n    var count = !hasRest(pattern) && pattern.elements.length;\n\n    // so we need to ensure that the `arrayRef` is an array, `scope.toArray` will\n    // return a locally bound identifier if it's been inferred to be an array,\n    // otherwise it'll be a call to a helper that will ensure it's one\n\n    var toArray = this.toArray(arrayRef, count);\n\n    if (t.isIdentifier(toArray)) {\n      // we've been given an identifier so it must have been inferred to be an\n      // array\n      arrayRef = toArray;\n    } else {\n      arrayRef = this.scope.generateUidIdentifierBasedOnNode(arrayRef);\n      this.arrays[arrayRef.name] = true;\n      this.nodes.push(this.buildVariableDeclaration(arrayRef, toArray));\n    }\n\n    //\n\n    for (var i = 0; i < pattern.elements.length; i++) {\n      var elem = pattern.elements[i];\n\n      // hole\n      if (!elem) continue;\n\n      var elemRef;\n\n      if (t.isRestElement(elem)) {\n        elemRef = this.toArray(arrayRef);\n\n        if (i > 0) {\n          elemRef = t.callExpression(t.memberExpression(elemRef, t.identifier(\"slice\")), [t.literal(i)]);\n        }\n\n        // set the element to the rest element argument since we've dealt with it\n        // being a rest already\n        elem = elem.argument;\n      } else {\n        elemRef = t.memberExpression(arrayRef, t.literal(i), true);\n      }\n\n      this.push(elem, elemRef);\n    }\n  };\n\n  /**\n   * [Please add a description.]\n   */\n\n  DestructuringTransformer.prototype.init = function init(pattern, ref) {\n    // trying to destructure a value that we can't evaluate more than once so we\n    // need to save it to a variable\n\n    if (!t.isArrayExpression(ref) && !t.isMemberExpression(ref)) {\n      var memo = this.scope.maybeGenerateMemoised(ref, true);\n      if (memo) {\n        this.nodes.push(this.buildVariableDeclaration(memo, ref));\n        ref = memo;\n      }\n    }\n\n    //\n\n    this.push(pattern, ref);\n\n    return this.nodes;\n  };\n\n  return DestructuringTransformer;\n})();"]}