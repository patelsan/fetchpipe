{"version":3,"sources":["for-of.js"],"names":[],"mappings":"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","file":"for-of-compiled.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports._ForOfStatementArray = _ForOfStatementArray;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _messages = require(\"../../../messages\");\n\nvar messages = _interopRequireWildcard(_messages);\n\nvar _util = require(\"../../../util\");\n\nvar util = _interopRequireWildcard(_util);\n\nvar _types = require(\"../../../types\");\n\nvar t = _interopRequireWildcard(_types);\n\n/**\n * [Please add a description.]\n */\n\nvar visitor = {\n\n  /**\n   * [Please add a description.]\n   */\n\n  ForOfStatement: function ForOfStatement(node, parent, scope, file) {\n    if (this.get(\"right\").isArrayExpression()) {\n      return _ForOfStatementArray.call(this, node, scope, file);\n    }\n\n    var callback = spec;\n    if (file.isLoose(\"es6.forOf\")) callback = loose;\n\n    var build = callback(node, parent, scope, file);\n    var declar = build.declar;\n    var loop = build.loop;\n    var block = loop.body;\n\n    // ensure that it's a block so we can take all its statements\n    this.ensureBlock();\n\n    // add the value declaration to the new loop body\n    if (declar) {\n      block.body.push(declar);\n    }\n\n    // push the rest of the original loop body onto our new body\n    block.body = block.body.concat(node.body.body);\n\n    t.inherits(loop, node);\n    t.inherits(loop.body, node.body);\n\n    if (build.replaceParent) {\n      this.parentPath.replaceWithMultiple(build.node);\n      this.dangerouslyRemove();\n    } else {\n      return build.node;\n    }\n  }\n};\n\nexports.visitor = visitor;\n/**\n * [Please add a description.]\n */\n\nfunction _ForOfStatementArray(node, scope) {\n  var nodes = [];\n  var right = node.right;\n\n  if (!t.isIdentifier(right) || !scope.hasBinding(right.name)) {\n    var uid = scope.generateUidIdentifier(\"arr\");\n    nodes.push(t.variableDeclaration(\"var\", [t.variableDeclarator(uid, right)]));\n    right = uid;\n  }\n\n  var iterationKey = scope.generateUidIdentifier(\"i\");\n\n  var loop = util.template(\"for-of-array\", {\n    BODY: node.body,\n    KEY: iterationKey,\n    ARR: right\n  });\n\n  t.inherits(loop, node);\n  t.ensureBlock(loop);\n\n  var iterationValue = t.memberExpression(right, iterationKey, true);\n\n  var left = node.left;\n  if (t.isVariableDeclaration(left)) {\n    left.declarations[0].init = iterationValue;\n    loop.body.body.unshift(left);\n  } else {\n    loop.body.body.unshift(t.expressionStatement(t.assignmentExpression(\"=\", left, iterationValue)));\n  }\n\n  if (this.parentPath.isLabeledStatement()) {\n    loop = t.labeledStatement(this.parentPath.node.label, loop);\n  }\n\n  nodes.push(loop);\n\n  return nodes;\n}\n\n/**\n * [Please add a description.]\n */\n\nvar loose = function loose(node, parent, scope, file) {\n  var left = node.left;\n  var declar, id;\n\n  if (t.isIdentifier(left) || t.isPattern(left) || t.isMemberExpression(left)) {\n    // for (i of test), for ({ i } of test)\n    id = left;\n  } else if (t.isVariableDeclaration(left)) {\n    // for (var i of test)\n    id = scope.generateUidIdentifier(\"ref\");\n    declar = t.variableDeclaration(left.kind, [t.variableDeclarator(left.declarations[0].id, id)]);\n  } else {\n    throw file.errorWithNode(left, messages.get(\"unknownForHead\", left.type));\n  }\n\n  var iteratorKey = scope.generateUidIdentifier(\"iterator\");\n  var isArrayKey = scope.generateUidIdentifier(\"isArray\");\n\n  var loop = util.template(\"for-of-loose\", {\n    LOOP_OBJECT: iteratorKey,\n    IS_ARRAY: isArrayKey,\n    OBJECT: node.right,\n    INDEX: scope.generateUidIdentifier(\"i\"),\n    ID: id\n  });\n\n  if (!declar) {\n    // no declaration so we need to remove the variable declaration at the top of\n    // the for-of-loose template\n    loop.body.body.shift();\n  }\n\n  //\n\n  return {\n    declar: declar,\n    node: loop,\n    loop: loop\n  };\n};\n\n/**\n * [Please add a description.]\n */\n\nvar spec = function spec(node, parent, scope, file) {\n  var left = node.left;\n  var declar;\n\n  var stepKey = scope.generateUidIdentifier(\"step\");\n  var stepValue = t.memberExpression(stepKey, t.identifier(\"value\"));\n\n  if (t.isIdentifier(left) || t.isPattern(left) || t.isMemberExpression(left)) {\n    // for (i of test), for ({ i } of test)\n    declar = t.expressionStatement(t.assignmentExpression(\"=\", left, stepValue));\n  } else if (t.isVariableDeclaration(left)) {\n    // for (var i of test)\n    declar = t.variableDeclaration(left.kind, [t.variableDeclarator(left.declarations[0].id, stepValue)]);\n  } else {\n    throw file.errorWithNode(left, messages.get(\"unknownForHead\", left.type));\n  }\n\n  //\n\n  var iteratorKey = scope.generateUidIdentifier(\"iterator\");\n\n  var template = util.template(\"for-of\", {\n    ITERATOR_HAD_ERROR_KEY: scope.generateUidIdentifier(\"didIteratorError\"),\n    ITERATOR_COMPLETION: scope.generateUidIdentifier(\"iteratorNormalCompletion\"),\n    ITERATOR_ERROR_KEY: scope.generateUidIdentifier(\"iteratorError\"),\n    ITERATOR_KEY: iteratorKey,\n    STEP_KEY: stepKey,\n    OBJECT: node.right,\n    BODY: null\n  });\n\n  var isLabeledParent = t.isLabeledStatement(parent);\n\n  var tryBody = template[3].block.body;\n  var loop = tryBody[0];\n\n  if (isLabeledParent) {\n    tryBody[0] = t.labeledStatement(parent.label, loop);\n  }\n\n  //\n\n  return {\n    replaceParent: isLabeledParent,\n    declar: declar,\n    loop: loop,\n    node: template\n  };\n};"]}