{"version":3,"sources":["spec.block-scoping.js"],"names":[],"mappings":"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","file":"spec.block-scoping-compiled.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _types = require(\"../../../types\");\n\nvar t = _interopRequireWildcard(_types);\n\n/**\n * [Please add a description.]\n */\n\nfunction buildAssert(node, file) {\n  return t.callExpression(file.addHelper(\"temporal-assert-defined\"), [node, t.literal(node.name), file.addHelper(\"temporal-undefined\")]);\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction references(node, scope, state) {\n  var declared = state.letRefs[node.name];\n  if (!declared) return false;\n\n  // declared node is different in this scope\n  return scope.getBindingIdentifier(node.name) === declared;\n}\n\n/**\n * [Please add a description.]\n */\n\nvar refVisitor = {\n\n  /**\n   * [Please add a description.]\n   */\n\n  ReferencedIdentifier: function ReferencedIdentifier(node, parent, scope, state) {\n    if (t.isFor(parent) && parent.left === node) return;\n\n    if (!references(node, scope, state)) return;\n\n    var assert = buildAssert(node, state.file);\n\n    this.skip();\n\n    if (t.isUpdateExpression(parent)) {\n      if (parent._ignoreBlockScopingTDZ) return;\n      this.parentPath.replaceWith(t.sequenceExpression([assert, parent]));\n    } else {\n      return t.logicalExpression(\"&&\", assert, node);\n    }\n  },\n\n  /**\n   * [Please add a description.]\n   */\n\n  AssignmentExpression: {\n    exit: function exit(node, parent, scope, state) {\n      if (node._ignoreBlockScopingTDZ) return;\n\n      var nodes = [];\n      var ids = this.getBindingIdentifiers();\n\n      for (var name in ids) {\n        var id = ids[name];\n\n        if (references(id, scope, state)) {\n          nodes.push(buildAssert(id, state.file));\n        }\n      }\n\n      if (nodes.length) {\n        node._ignoreBlockScopingTDZ = true;\n        nodes.push(node);\n        return nodes.map(t.expressionStatement);\n      }\n    }\n  }\n};\n\nvar metadata = {\n  optional: true,\n  group: \"builtin-advanced\"\n};\n\nexports.metadata = metadata;\n/**\n * [Please add a description.]\n */\n\nvar visitor = {\n\n  /**\n   * [Please add a description.]\n   */\n\n  \"Program|Loop|BlockStatement\": {\n    exit: function exit(node, parent, scope, file) {\n      var letRefs = node._letReferences;\n      if (!letRefs) return;\n\n      this.traverse(refVisitor, {\n        letRefs: letRefs,\n        file: file\n      });\n    }\n  }\n};\nexports.visitor = visitor;"]}