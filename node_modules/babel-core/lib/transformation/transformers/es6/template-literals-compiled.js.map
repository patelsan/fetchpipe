{"version":3,"sources":["template-literals.js"],"names":[],"mappings":"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","file":"template-literals-compiled.js","sourcesContent":["/* eslint no-unused-vars: 0 */\n\n\"use strict\";\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _types = require(\"../../../types\");\n\nvar t = _interopRequireWildcard(_types);\n\nvar metadata = {\n  group: \"builtin-pre\"\n};\n\nexports.metadata = metadata;\n/**\n * [Please add a description.]\n */\n\nfunction isString(node) {\n  return t.isLiteral(node) && typeof node.value === \"string\";\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction buildBinaryExpression(left, right) {\n  var node = t.binaryExpression(\"+\", left, right);\n  node._templateLiteralProduced = true;\n  return node;\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction crawl(path) {\n  if (path.is(\"_templateLiteralProduced\")) {\n    crawl(path.get(\"left\"));\n    crawl(path.get(\"right\"));\n  } else if (!path.isBaseType(\"string\") && !path.isBaseType(\"number\")) {\n    path.replaceWith(t.callExpression(t.identifier(\"String\"), [path.node]));\n  }\n}\n\n/**\n * [Please add a description.]\n */\n\nvar visitor = {\n\n  /**\n   * [Please add a description.]\n   */\n\n  TaggedTemplateExpression: function TaggedTemplateExpression(node, parent, scope, file) {\n    var quasi = node.quasi;\n    var args = [];\n\n    var strings = [];\n    var raw = [];\n\n    var _arr = quasi.quasis;\n    for (var _i = 0; _i < _arr.length; _i++) {\n      var elem = _arr[_i];\n      strings.push(t.literal(elem.value.cooked));\n      raw.push(t.literal(elem.value.raw));\n    }\n\n    strings = t.arrayExpression(strings);\n    raw = t.arrayExpression(raw);\n\n    var templateName = \"tagged-template-literal\";\n    if (file.isLoose(\"es6.templateLiterals\")) templateName += \"-loose\";\n\n    var templateObject = file.addTemplateObject(templateName, strings, raw);\n    args.push(templateObject);\n\n    args = args.concat(quasi.expressions);\n\n    return t.callExpression(node.tag, args);\n  },\n\n  /**\n   * [Please add a description.]\n   */\n\n  TemplateLiteral: function TemplateLiteral(node, parent, scope, file) {\n    var nodes = [];\n\n    var _arr2 = node.quasis;\n    for (var _i2 = 0; _i2 < _arr2.length; _i2++) {\n      var elem = _arr2[_i2];\n      nodes.push(t.literal(elem.value.cooked));\n\n      var expr = node.expressions.shift();\n      if (expr) nodes.push(expr);\n    }\n\n    // filter out empty string literals\n    nodes = nodes.filter(function (n) {\n      return !t.isLiteral(n, { value: \"\" });\n    });\n\n    // since `+` is left-to-right associative\n    // ensure the first node is a string if first/second isn't\n    if (!isString(nodes[0]) && !isString(nodes[1])) {\n      nodes.unshift(t.literal(\"\"));\n    }\n\n    if (nodes.length > 1) {\n      var root = buildBinaryExpression(nodes.shift(), nodes.shift());\n\n      var _arr3 = nodes;\n      for (var _i3 = 0; _i3 < _arr3.length; _i3++) {\n        var _node = _arr3[_i3];\n        root = buildBinaryExpression(root, _node);\n      }\n\n      this.replaceWith(root);\n      //crawl(this);\n    } else {\n        return nodes[0];\n      }\n  }\n};\nexports.visitor = visitor;"]}