{"version":3,"sources":["function-bind.js"],"names":[],"mappings":"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","file":"function-bind-compiled.js","sourcesContent":["// https://github.com/zenparsing/es-function-bind\n\n\"use strict\";\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _types = require(\"../../../types\");\n\nvar t = _interopRequireWildcard(_types);\n\nvar metadata = {\n  optional: true,\n  stage: 0\n};\n\nexports.metadata = metadata;\n/**\n * [Please add a description.]\n */\n\nfunction getTempId(scope) {\n  var id = scope.path.getData(\"functionBind\");\n  if (id) return id;\n\n  id = scope.generateDeclaredUidIdentifier(\"context\");\n  return scope.path.setData(\"functionBind\", id);\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction getStaticContext(bind, scope) {\n  var object = bind.object || bind.callee.object;\n  return scope.isStatic(object) && object;\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction inferBindContext(bind, scope) {\n  var staticContext = getStaticContext(bind, scope);\n  if (staticContext) return staticContext;\n\n  var tempId = getTempId(scope);\n  if (bind.object) {\n    bind.callee = t.sequenceExpression([t.assignmentExpression(\"=\", tempId, bind.object), bind.callee]);\n  } else {\n    bind.callee.object = t.assignmentExpression(\"=\", tempId, bind.callee.object);\n  }\n  return tempId;\n}\n\n/**\n * [Please add a description.]\n */\n\nvar visitor = {\n\n  /**\n   * [Please add a description.]\n   */\n\n  CallExpression: function CallExpression(node, parent, scope) {\n    var bind = node.callee;\n    if (!t.isBindExpression(bind)) return;\n\n    var context = inferBindContext(bind, scope);\n    node.callee = t.memberExpression(bind.callee, t.identifier(\"call\"));\n    node.arguments.unshift(context);\n  },\n\n  /**\n   * [Please add a description.]\n   */\n\n  BindExpression: function BindExpression(node, parent, scope) {\n    var context = inferBindContext(node, scope);\n    return t.callExpression(t.memberExpression(node.callee, t.identifier(\"bind\")), [context]);\n  }\n};\nexports.visitor = visitor;"]}