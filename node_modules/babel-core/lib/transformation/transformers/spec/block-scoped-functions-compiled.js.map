{"version":3,"sources":["block-scoped-functions.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC;;;AAG1B,SAAS,uBAAuB,CAAC,GAAG,EAAE;AAAE,MAAI,GAAG,IAAI,GAAG,CAAC,UAAU,EAAE;AAAE,WAAO,GAAG,CAAC;GAAE,MAAM;AAAE,QAAI,MAAM,GAAG,EAAE,CAAC,AAAC,IAAI,GAAG,IAAI,IAAI,EAAE;AAAE,WAAK,IAAI,GAAG,IAAI,GAAG,EAAE;AAAE,YAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;OAAE;KAAE,AAAC,MAAM,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC,AAAC,OAAO,MAAM,CAAC;GAAE;CAAE;;AAEhR,IAAI,MAAM,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;;AAEvC,IAAI,CAAC,GAAG,uBAAuB,CAAC,MAAM,CAAC,CAAC;;;;;;AAMxC,SAAS,aAAa,CAAC,GAAG,EAAE,IAAI,EAAE;AAChC,MAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;;AAE1B,OAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACrC,QAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;;AAErB,QAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;AACtB,QAAI,CAAC,CAAC,CAAC,qBAAqB,CAAC,IAAI,CAAC,EAAE,SAAS;;AAE7C,QAAI,MAAM,GAAG,CAAC,CAAC,mBAAmB,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;;;AAGjG,UAAM,CAAC,WAAW,GAAG,CAAC,CAAC;;;AAGvB,QAAI,CAAC,EAAE,GAAG,IAAI,CAAC;;AAEf,SAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;GAC3B;CACF;;;;;;AAMD,IAAI,OAAO,GAAG;;;;;;AAMZ,gBAAc,EAAE,SAAS,cAAc,CAAC,IAAI,EAAE,MAAM,EAAE;AACpD,QAAI,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,CAAC,mBAAmB,CAAC,MAAM,CAAC,EAAE;AACjF,aAAO;KACR;;AAED,iBAAa,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;GAC7B;;;;;;AAMD,YAAU,EAAE,SAAS,UAAU,GAAG;AAChC,iBAAa,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;GACnC;CACF,CAAC;AACF,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC","file":"block-scoped-functions-compiled.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _types = require(\"../../../types\");\n\nvar t = _interopRequireWildcard(_types);\n\n/**\n * [Please add a description.]\n */\n\nfunction statementList(key, path) {\n  var paths = path.get(key);\n\n  for (var i = 0; i < paths.length; i++) {\n    var _path = paths[i];\n\n    var func = _path.node;\n    if (!t.isFunctionDeclaration(func)) continue;\n\n    var declar = t.variableDeclaration(\"let\", [t.variableDeclarator(func.id, t.toExpression(func))]);\n\n    // hoist it up above everything else\n    declar._blockHoist = 2;\n\n    // todo: name this\n    func.id = null;\n\n    _path.replaceWith(declar);\n  }\n}\n\n/**\n * [Please add a description.]\n */\n\nvar visitor = {\n\n  /**\n   * [Please add a description.]\n   */\n\n  BlockStatement: function BlockStatement(node, parent) {\n    if (t.isFunction(parent) && parent.body === node || t.isExportDeclaration(parent)) {\n      return;\n    }\n\n    statementList(\"body\", this);\n  },\n\n  /**\n   * [Please add a description.]\n   */\n\n  SwitchCase: function SwitchCase() {\n    statementList(\"consequent\", this);\n  }\n};\nexports.visitor = visitor;"]}