{"version":3,"sources":["function-name.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC;;AAE1B,IAAI,kBAAkB,GAAG,OAAO,CAAC,2BAA2B,CAAC,CAAC;;AAE9D,IAAI,QAAQ,GAAG;AACb,OAAK,EAAE,eAAe;CACvB,CAAC;;AAEF,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;;;;;;;AAO5B,IAAI,OAAO,GAAG;;;;;;AAMZ,8CAA4C,EAAE;AAC5C,QAAI,EAAE,SAAS,IAAI,GAAG;AACpB,UAAI,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,EAAE;AACjC,eAAO,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;OACvD;KACF;GACF;;;;;;AAMD,kBAAgB,EAAE,SAAS,gBAAgB,GAAG;AAC5C,QAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;AACnC,QAAI,IAAI,GAAG,KAAK,CAAC;AACjB,SAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;AACvC,UAAI,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;AACpB,UAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AAC9B,UAAI,KAAK,CAAC,UAAU,EAAE,EAAE;AACtB,YAAI,OAAO,GAAG,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;AAC1E,YAAI,OAAO,EAAE,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;OACzC;KACF;GACF;CACF,CAAC;AACF,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC","file":"function-name-compiled.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n\nvar _helpersNameMethod = require(\"../../helpers/name-method\");\n\nvar metadata = {\n  group: \"builtin-basic\"\n};\n\nexports.metadata = metadata;\n// visit Property functions first - https://github.com/babel/babel/issues/1860\n\n/**\n * [Please add a description.]\n */\n\nvar visitor = {\n\n  /**\n   * [Please add a description.]\n   */\n\n  \"ArrowFunctionExpression|FunctionExpression\": {\n    exit: function exit() {\n      if (!this.parentPath.isProperty()) {\n        return _helpersNameMethod.bare.apply(this, arguments);\n      }\n    }\n  },\n\n  /**\n   * [Please add a description.]\n   */\n\n  ObjectExpression: function ObjectExpression() {\n    var props = this.get(\"properties\");\n    var _arr = props;\n    for (var _i = 0; _i < _arr.length; _i++) {\n      var prop = _arr[_i];\n      var value = prop.get(\"value\");\n      if (value.isFunction()) {\n        var newNode = _helpersNameMethod.bare(value.node, prop.node, value.scope);\n        if (newNode) value.replaceWith(newNode);\n      }\n    }\n  }\n};\nexports.visitor = visitor;"]}