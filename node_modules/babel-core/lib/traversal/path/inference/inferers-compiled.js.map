{"version":3,"sources":["inferers.js"],"names":[],"mappings":"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","file":"inferers-compiled.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.VariableDeclarator = VariableDeclarator;\nexports.TypeCastExpression = TypeCastExpression;\nexports.NewExpression = NewExpression;\nexports.TemplateLiteral = TemplateLiteral;\nexports.UnaryExpression = UnaryExpression;\nexports.BinaryExpression = BinaryExpression;\nexports.LogicalExpression = LogicalExpression;\nexports.ConditionalExpression = ConditionalExpression;\nexports.SequenceExpression = SequenceExpression;\nexports.AssignmentExpression = AssignmentExpression;\nexports.UpdateExpression = UpdateExpression;\nexports.Literal = Literal;\nexports.ObjectExpression = ObjectExpression;\nexports.ArrayExpression = ArrayExpression;\nexports.RestElement = RestElement;\nexports.CallExpression = CallExpression;\nexports.TaggedTemplateExpression = TaggedTemplateExpression;\n// istanbul ignore next\n\nfunction _interopRequire(obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; }\n\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _types = require(\"../../../types\");\n\nvar t = _interopRequireWildcard(_types);\n\nvar _infererReference = require(\"./inferer-reference\");\n\nexports.Identifier = _interopRequire(_infererReference);\n\n/**\n * [Please add a description.]\n */\n\nfunction VariableDeclarator() {\n  var id = this.get(\"id\");\n\n  if (id.isIdentifier()) {\n    return this.get(\"init\").getTypeAnnotation();\n  } else {\n    return;\n  }\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction TypeCastExpression(node) {\n  return node.typeAnnotation;\n}\n\nTypeCastExpression.validParent = true;\n\n/**\n * [Please add a description.]\n */\n\nfunction NewExpression(node) {\n  if (this.get(\"callee\").isIdentifier()) {\n    // only resolve identifier callee\n    return t.genericTypeAnnotation(node.callee);\n  }\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction TemplateLiteral() {\n  return t.stringTypeAnnotation();\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction UnaryExpression(node) {\n  var operator = node.operator;\n\n  if (operator === \"void\") {\n    return t.voidTypeAnnotation();\n  } else if (t.NUMBER_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.numberTypeAnnotation();\n  } else if (t.STRING_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.stringTypeAnnotation();\n  } else if (t.BOOLEAN_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.booleanTypeAnnotation();\n  }\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction BinaryExpression(node) {\n  var operator = node.operator;\n\n  if (t.NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.numberTypeAnnotation();\n  } else if (t.BOOLEAN_BINARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.booleanTypeAnnotation();\n  } else if (operator === \"+\") {\n    var right = this.get(\"right\");\n    var left = this.get(\"left\");\n\n    if (left.isBaseType(\"number\") && right.isBaseType(\"number\")) {\n      // both numbers so this will be a number\n      return t.numberTypeAnnotation();\n    } else if (left.isBaseType(\"string\") || right.isBaseType(\"string\")) {\n      // one is a string so the result will be a string\n      return t.stringTypeAnnotation();\n    }\n\n    // unsure if left and right are strings or numbers so stay on the safe side\n    return t.unionTypeAnnotation([t.stringTypeAnnotation(), t.numberTypeAnnotation()]);\n  }\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction LogicalExpression() {\n  return t.createUnionTypeAnnotation([this.get(\"left\").getTypeAnnotation(), this.get(\"right\").getTypeAnnotation()]);\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction ConditionalExpression() {\n  return t.createUnionTypeAnnotation([this.get(\"consequent\").getTypeAnnotation(), this.get(\"alternate\").getTypeAnnotation()]);\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction SequenceExpression() {\n  return this.get(\"expressions\").pop().getTypeAnnotation();\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction AssignmentExpression() {\n  return this.get(\"right\").getTypeAnnotation();\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction UpdateExpression(node) {\n  var operator = node.operator;\n  if (operator === \"++\" || operator === \"--\") {\n    return t.numberTypeAnnotation();\n  }\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction Literal(node) {\n  var value = node.value;\n  if (typeof value === \"string\") return t.stringTypeAnnotation();\n  if (typeof value === \"number\") return t.numberTypeAnnotation();\n  if (typeof value === \"boolean\") return t.booleanTypeAnnotation();\n  if (value === null) return t.voidTypeAnnotation();\n  if (node.regex) return t.genericTypeAnnotation(t.identifier(\"RegExp\"));\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction ObjectExpression() {\n  return t.genericTypeAnnotation(t.identifier(\"Object\"));\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction ArrayExpression() {\n  return t.genericTypeAnnotation(t.identifier(\"Array\"));\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction RestElement() {\n  return ArrayExpression();\n}\n\nRestElement.validParent = true;\n\n/**\n * [Please add a description.]\n */\n\nfunction Func() {\n  return t.genericTypeAnnotation(t.identifier(\"Function\"));\n}\n\nexports.Function = Func;\nexports.Class = Func;\n\n/**\n * [Please add a description.]\n */\n\nfunction CallExpression() {\n  return resolveCall(this.get(\"callee\"));\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction TaggedTemplateExpression() {\n  return resolveCall(this.get(\"tag\"));\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction resolveCall(callee) {\n  callee = callee.resolve();\n\n  if (callee.isFunction()) {\n    if (callee.is(\"async\")) {\n      if (callee.is(\"generator\")) {\n        return t.genericTypeAnnotation(t.identifier(\"AsyncIterator\"));\n      } else {\n        return t.genericTypeAnnotation(t.identifier(\"Promise\"));\n      }\n    } else {\n      if (callee.node.returnType) {\n        return callee.node.returnType;\n      } else {\n        // todo: get union type of all return arguments\n      }\n    }\n  }\n}"]}