{"version":3,"sources":["modification.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC;AAC1B,OAAO,CAAC,YAAY,GAAG,YAAY,CAAC;AACpC,OAAO,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;AAC5C,OAAO,CAAC,sBAAsB,GAAG,sBAAsB,CAAC;AACxD,OAAO,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;AACtD,OAAO,CAAC,uBAAuB,GAAG,uBAAuB,CAAC;AAC1D,OAAO,CAAC,WAAW,GAAG,WAAW,CAAC;AAClC,OAAO,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;AAC9C,OAAO,CAAC,eAAe,GAAG,eAAe,CAAC;AAC1C,OAAO,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;AAC5C,OAAO,CAAC,aAAa,GAAG,aAAa,CAAC;AACtC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;;;AAGtB,SAAS,uBAAuB,CAAC,GAAG,EAAE;AAAE,MAAI,GAAG,IAAI,GAAG,CAAC,UAAU,EAAE;AAAE,WAAO,GAAG,CAAC;GAAE,MAAM;AAAE,QAAI,MAAM,GAAG,EAAE,CAAC,AAAC,IAAI,GAAG,IAAI,IAAI,EAAE;AAAE,WAAK,IAAI,GAAG,IAAI,GAAG,EAAE;AAAE,YAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;OAAE;KAAE,AAAC,MAAM,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC,AAAC,OAAO,MAAM,CAAC;GAAE;CAAE;;;;AAIhR,SAAS,sBAAsB,CAAC,GAAG,EAAE;AAAE,SAAO,GAAG,IAAI,GAAG,CAAC,UAAU,GAAG,GAAG,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC;CAAE;;AAEjG,IAAI,WAAW,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;;AAE3C,IAAI,YAAY,GAAG,sBAAsB,CAAC,WAAW,CAAC,CAAC;;AAEvD,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;;AAEhC,IAAI,OAAO,GAAG,sBAAsB,CAAC,MAAM,CAAC,CAAC;;AAE7C,IAAI,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;;AAEpC,IAAI,CAAC,GAAG,uBAAuB,CAAC,MAAM,CAAC,CAAC;;;;;;AAMxC,SAAS,YAAY,CAAC,KAAK,EAAE;AAC3B,MAAI,CAAC,gBAAgB,EAAE,CAAC;;AAExB,OAAK,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;;AAEpC,MAAI,IAAI,CAAC,UAAU,CAAC,qBAAqB,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,kBAAkB,EAAE,EAAE;AACnF,WAAO,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;GAC5C,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,IAAI,IAAI,CAAC,GAAG,KAAK,MAAM,EAAE;AACnG,QAAI,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrC,QAAI,CAAC,+BAA+B,CAAC,KAAK,CAAC,CAAC;GAC7C,MAAM;AACL,QAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;AACpC,QAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;AACjC,aAAO,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;KAC3C,MAAM,IAAI,IAAI,CAAC,kBAAkB,EAAE,EAAE;AACpC,UAAI,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrC,UAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;KAChE,MAAM;AACL,YAAM,IAAI,KAAK,CAAC,wGAAwG,CAAC,CAAC;KAC3H;GACF;;AAED,SAAO,CAAC,IAAI,CAAC,CAAC;CACf;;;;;;AAMD,SAAS,gBAAgB,CAAC,IAAI,EAAE,KAAK,EAAE;AACrC,MAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;;AAE3C,MAAI,KAAK,GAAG,EAAE,CAAC;;AAEf,OAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACrC,QAAI,EAAE,GAAG,IAAI,GAAG,CAAC,CAAC;AAClB,QAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACpB,QAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;;AAEnC,QAAI,IAAI,CAAC,OAAO,EAAE;AAChB,UAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;AAC9E,WAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjB,UAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;KACtB,MAAM;AACL,WAAK,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC;AAChC,kBAAU,EAAE,IAAI;AAChB,cAAM,EAAE,IAAI;AACZ,iBAAS,EAAE,IAAI,CAAC,SAAS;AACzB,eAAO,EAAE,IAAI,CAAC,OAAO;AACrB,WAAG,EAAE,EAAE;OACR,CAAC,CAAC,CAAC;KACL;GACF;;AAED,SAAO,KAAK,CAAC;CACd;;;;;;AAMD,SAAS,sBAAsB,CAAC,KAAK,EAAE;AACrC,SAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;CAC/C;;;;;;AAMD,SAAS,qBAAqB,CAAC,KAAK,EAAE;AACpC,SAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;CACnD;;;;;;AAMD,SAAS,uBAAuB,CAAC,KAAK,EAAE;AACtC,MAAI,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AACnC,MAAI,CAAC,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE;AAClG,SAAK,CAAC,GAAG,EAAE,CAAC;GACb;CACF;;;;;;;AAOD,SAAS,WAAW,CAAC,KAAK,EAAE;AAC1B,MAAI,CAAC,gBAAgB,EAAE,CAAC;;AAExB,OAAK,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;;AAEpC,MAAI,IAAI,CAAC,UAAU,CAAC,qBAAqB,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,kBAAkB,EAAE,EAAE;AACnF,WAAO,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;GAC3C,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,IAAI,IAAI,CAAC,GAAG,KAAK,MAAM,EAAE;AACnG,QAAI,IAAI,CAAC,IAAI,EAAE;AACb,UAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,6BAA6B,EAAE,CAAC;AACtD,WAAK,CAAC,OAAO,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,oBAAoB,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACnF,WAAK,CAAC,IAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC;KACzC;AACD,QAAI,CAAC,+BAA+B,CAAC,KAAK,CAAC,CAAC;GAC7C,MAAM;AACL,QAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;AACpC,QAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;AACjC,aAAO,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;KAC1C,MAAM,IAAI,IAAI,CAAC,kBAAkB,EAAE,EAAE;AACpC,UAAI,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACxC,UAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;KAChE,MAAM;AACL,YAAM,IAAI,KAAK,CAAC,wGAAwG,CAAC,CAAC;KAC3H;GACF;;AAED,SAAO,CAAC,IAAI,CAAC,CAAC;CACf;;;;;;AAMD,SAAS,iBAAiB,CAAC,SAAS,EAAE,WAAW,EAAE;AACjD,MAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;AAC/B,OAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACrC,QAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACpB,QAAI,IAAI,CAAC,GAAG,IAAI,SAAS,EAAE;AACzB,UAAI,CAAC,GAAG,IAAI,WAAW,CAAC;KACzB;GACF;CACF;;;;;;AAMD,SAAS,eAAe,CAAC,KAAK,EAAE;AAC9B,MAAI,KAAK,CAAC,WAAW,KAAK,KAAK,EAAE;AAC/B,SAAK,GAAG,CAAC,KAAK,CAAC,CAAC;GACjB;;AAED,OAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACrC,QAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACpB,QAAI,CAAC,IAAI,EAAE;AACT,YAAM,IAAI,KAAK,CAAC,6CAA6C,GAAG,CAAC,CAAC,CAAC;KACpE,MAAM,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AACnC,YAAM,IAAI,KAAK,CAAC,yDAAyD,GAAG,CAAC,CAAC,CAAC;KAChF,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;AACrB,YAAM,IAAI,KAAK,CAAC,6DAA6D,GAAG,CAAC,CAAC,CAAC;KACpF,MAAM,IAAI,IAAI,YAAY,OAAO,CAAC,SAAS,CAAC,EAAE;AAC7C,WAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;KACtB;GACF;;AAED,SAAO,KAAK,CAAC;CACd;;;;;;AAMD,SAAS,gBAAgB,CAAC,OAAO,EAAE,KAAK,EAAE;AACxC,MAAI,CAAC,gBAAgB,EAAE,CAAC;;AAExB,OAAK,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;;;;;AAKpC,MAAI,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACnC,MAAI,IAAI,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC;AAChC,cAAU,EAAE,IAAI;AAChB,UAAM,EAAE,IAAI,CAAC,IAAI;AACjB,aAAS,EAAE,SAAS;AACpB,WAAO,EAAE,OAAO;AAChB,OAAG,EAAE,CAAC;GACP,CAAC,CAAC;;AAEH,SAAO,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;CACjC;;;;;;AAMD,SAAS,aAAa,CAAC,OAAO,EAAE,KAAK,EAAE;AACrC,MAAI,CAAC,gBAAgB,EAAE,CAAC;;AAExB,OAAK,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;;;;;AAKpC,MAAI,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACnC,MAAI,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC;AACzB,MAAI,IAAI,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC;AAChC,cAAU,EAAE,IAAI;AAChB,UAAM,EAAE,IAAI,CAAC,IAAI;AACjB,aAAS,EAAE,SAAS;AACpB,WAAO,EAAE,OAAO;AAChB,OAAG,EAAE,CAAC;GACP,CAAC,CAAC;;AAEH,SAAO,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;CACtC;;;;;;;AAOD,SAAS,KAAK,GAAG;AACf,MAAI,KAAK,GAAG,SAAS,CAAC,MAAM,IAAI,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS,GAAG,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;;AAE5F,MAAI,OAAO,GAAG,IAAI,YAAY,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACvD,SAAO,OAAO,CAAC,GAAG,EAAE,CAAC;CACtB","file":"modification-compiled.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.insertBefore = insertBefore;\nexports._containerInsert = _containerInsert;\nexports._containerInsertBefore = _containerInsertBefore;\nexports._containerInsertAfter = _containerInsertAfter;\nexports._maybePopFromStatements = _maybePopFromStatements;\nexports.insertAfter = insertAfter;\nexports.updateSiblingKeys = updateSiblingKeys;\nexports._verifyNodeList = _verifyNodeList;\nexports.unshiftContainer = unshiftContainer;\nexports.pushContainer = pushContainer;\nexports.hoist = hoist;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _libHoister = require(\"./lib/hoister\");\n\nvar _libHoister2 = _interopRequireDefault(_libHoister);\n\nvar _index = require(\"./index\");\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _types = require(\"../../types\");\n\nvar t = _interopRequireWildcard(_types);\n\n/**\n * Insert the provided nodes before the current one.\n */\n\nfunction insertBefore(nodes) {\n  this._assertUnremoved();\n\n  nodes = this._verifyNodeList(nodes);\n\n  if (this.parentPath.isExpressionStatement() || this.parentPath.isLabeledStatement()) {\n    return this.parentPath.insertBefore(nodes);\n  } else if (this.isNodeType(\"Expression\") || this.parentPath.isForStatement() && this.key === \"init\") {\n    if (this.node) nodes.push(this.node);\n    this.replaceExpressionWithStatements(nodes);\n  } else {\n    this._maybePopFromStatements(nodes);\n    if (Array.isArray(this.container)) {\n      return this._containerInsertBefore(nodes);\n    } else if (this.isStatementOrBlock()) {\n      if (this.node) nodes.push(this.node);\n      this.node = this.container[this.key] = t.blockStatement(nodes);\n    } else {\n      throw new Error(\"We don't know what to do with this node type. We were previously a Statement but we can't fit in here?\");\n    }\n  }\n\n  return [this];\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction _containerInsert(from, nodes) {\n  this.updateSiblingKeys(from, nodes.length);\n\n  var paths = [];\n\n  for (var i = 0; i < nodes.length; i++) {\n    var to = from + i;\n    var node = nodes[i];\n    this.container.splice(to, 0, node);\n\n    if (this.context) {\n      var path = this.context.create(this.parent, this.container, to, this.listKey);\n      paths.push(path);\n      this.queueNode(path);\n    } else {\n      paths.push(_index2[\"default\"].get({\n        parentPath: this,\n        parent: node,\n        container: this.container,\n        listKey: this.listKey,\n        key: to\n      }));\n    }\n  }\n\n  return paths;\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction _containerInsertBefore(nodes) {\n  return this._containerInsert(this.key, nodes);\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction _containerInsertAfter(nodes) {\n  return this._containerInsert(this.key + 1, nodes);\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction _maybePopFromStatements(nodes) {\n  var last = nodes[nodes.length - 1];\n  if (t.isExpressionStatement(last) && t.isIdentifier(last.expression) && !this.isCompletionRecord()) {\n    nodes.pop();\n  }\n}\n\n/**\n * Insert the provided nodes after the current one. When inserting nodes after an\n * expression, ensure that the completion record is correct by pushing the current node.\n */\n\nfunction insertAfter(nodes) {\n  this._assertUnremoved();\n\n  nodes = this._verifyNodeList(nodes);\n\n  if (this.parentPath.isExpressionStatement() || this.parentPath.isLabeledStatement()) {\n    return this.parentPath.insertAfter(nodes);\n  } else if (this.isNodeType(\"Expression\") || this.parentPath.isForStatement() && this.key === \"init\") {\n    if (this.node) {\n      var temp = this.scope.generateDeclaredUidIdentifier();\n      nodes.unshift(t.expressionStatement(t.assignmentExpression(\"=\", temp, this.node)));\n      nodes.push(t.expressionStatement(temp));\n    }\n    this.replaceExpressionWithStatements(nodes);\n  } else {\n    this._maybePopFromStatements(nodes);\n    if (Array.isArray(this.container)) {\n      return this._containerInsertAfter(nodes);\n    } else if (this.isStatementOrBlock()) {\n      if (this.node) nodes.unshift(this.node);\n      this.node = this.container[this.key] = t.blockStatement(nodes);\n    } else {\n      throw new Error(\"We don't know what to do with this node type. We were previously a Statement but we can't fit in here?\");\n    }\n  }\n\n  return [this];\n}\n\n/**\n * Update all sibling node paths after `fromIndex` by `incrementBy`.\n */\n\nfunction updateSiblingKeys(fromIndex, incrementBy) {\n  var paths = this.parent._paths;\n  for (var i = 0; i < paths.length; i++) {\n    var path = paths[i];\n    if (path.key >= fromIndex) {\n      path.key += incrementBy;\n    }\n  }\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction _verifyNodeList(nodes) {\n  if (nodes.constructor !== Array) {\n    nodes = [nodes];\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    var node = nodes[i];\n    if (!node) {\n      throw new Error(\"Node list has falsy node with the index of \" + i);\n    } else if (typeof node !== \"object\") {\n      throw new Error(\"Node list contains a non-object node with the index of \" + i);\n    } else if (!node.type) {\n      throw new Error(\"Node list contains a node without a type with the index of \" + i);\n    } else if (node instanceof _index2[\"default\"]) {\n      nodes[i] = node.node;\n    }\n  }\n\n  return nodes;\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction unshiftContainer(listKey, nodes) {\n  this._assertUnremoved();\n\n  nodes = this._verifyNodeList(nodes);\n\n  // get the first path and insert our nodes before it, if it doesn't exist then it\n  // doesn't matter, our nodes will be inserted anyway\n\n  var container = this.node[listKey];\n  var path = _index2[\"default\"].get({\n    parentPath: this,\n    parent: this.node,\n    container: container,\n    listKey: listKey,\n    key: 0\n  });\n\n  return path.insertBefore(nodes);\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction pushContainer(listKey, nodes) {\n  this._assertUnremoved();\n\n  nodes = this._verifyNodeList(nodes);\n\n  // get an invisible path that represents the last node + 1 and replace it with our\n  // nodes, effectively inlining it\n\n  var container = this.node[listKey];\n  var i = container.length;\n  var path = _index2[\"default\"].get({\n    parentPath: this,\n    parent: this.node,\n    container: container,\n    listKey: listKey,\n    key: i\n  });\n\n  return path.replaceWith(nodes, true);\n}\n\n/**\n * Hoist the current node to the highest scope possible and return a UID\n * referencing it.\n */\n\nfunction hoist() {\n  var scope = arguments.length <= 0 || arguments[0] === undefined ? this.scope : arguments[0];\n\n  var hoister = new _libHoister2[\"default\"](this, scope);\n  return hoister.run();\n}"]}