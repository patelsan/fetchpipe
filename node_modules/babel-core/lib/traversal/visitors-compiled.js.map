{"version":3,"sources":["visitors.js"],"names":[],"mappings":"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","file":"visitors-compiled.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.explode = explode;\nexports.verify = verify;\nexports.merge = merge;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\nvar _pathLibVirtualTypes = require(\"./path/lib/virtual-types\");\n\nvar virtualTypes = _interopRequireWildcard(_pathLibVirtualTypes);\n\nvar _messages = require(\"../messages\");\n\nvar messages = _interopRequireWildcard(_messages);\n\nvar _types = require(\"../types\");\n\nvar t = _interopRequireWildcard(_types);\n\nvar _lodashLangClone = require(\"lodash/lang/clone\");\n\nvar _lodashLangClone2 = _interopRequireDefault(_lodashLangClone);\n\n/**\n * [Please add a description.]\n */\n\nfunction explode(visitor) {\n  if (visitor._exploded) return visitor;\n  visitor._exploded = true;\n\n  // normalise pipes\n  for (var nodeType in visitor) {\n    if (shouldIgnoreKey(nodeType)) continue;\n\n    var parts = nodeType.split(\"|\");\n    if (parts.length === 1) continue;\n\n    var fns = visitor[nodeType];\n    delete visitor[nodeType];\n\n    var _arr = parts;\n    for (var _i = 0; _i < _arr.length; _i++) {\n      var part = _arr[_i];\n      visitor[part] = fns;\n    }\n  }\n\n  // verify data structure\n  verify(visitor);\n\n  // make sure there's no __esModule type since this is because we're using loose mode\n  // and it sets __esModule to be enumerable on all modules :(\n  delete visitor.__esModule;\n\n  // ensure visitors are objects\n  ensureEntranceObjects(visitor);\n\n  // ensure enter/exit callbacks are arrays\n  ensureCallbackArrays(visitor);\n\n  // add type wrappers\n\n  var _arr2 = Object.keys(visitor);\n\n  for (var _i2 = 0; _i2 < _arr2.length; _i2++) {\n    var nodeType = _arr2[_i2];\n    if (shouldIgnoreKey(nodeType)) continue;\n\n    var wrapper = virtualTypes[nodeType];\n    if (!wrapper) continue;\n\n    // wrap all the functions\n    var fns = visitor[nodeType];\n    for (var type in fns) {\n      fns[type] = wrapCheck(wrapper, fns[type]);\n    }\n\n    // clear it from the visitor\n    delete visitor[nodeType];\n\n    if (wrapper.types) {\n      var _arr4 = wrapper.types;\n\n      for (var _i4 = 0; _i4 < _arr4.length; _i4++) {\n        var type = _arr4[_i4];\n        // merge the visitor if necessary or just put it back in\n        if (visitor[type]) {\n          mergePair(visitor[type], fns);\n        } else {\n          visitor[type] = fns;\n        }\n      }\n    } else {\n      mergePair(visitor, fns);\n    }\n  }\n\n  // add aliases\n  for (var nodeType in visitor) {\n    if (shouldIgnoreKey(nodeType)) continue;\n\n    var fns = visitor[nodeType];\n\n    var aliases = t.FLIPPED_ALIAS_KEYS[nodeType];\n    if (!aliases) continue;\n\n    // clear it from the visitor\n    delete visitor[nodeType];\n\n    var _arr3 = aliases;\n    for (var _i3 = 0; _i3 < _arr3.length; _i3++) {\n      var alias = _arr3[_i3];\n      var existing = visitor[alias];\n      if (existing) {\n        mergePair(existing, fns);\n      } else {\n        visitor[alias] = _lodashLangClone2[\"default\"](fns);\n      }\n    }\n  }\n\n  for (var nodeType in visitor) {\n    if (shouldIgnoreKey(nodeType)) continue;\n\n    ensureCallbackArrays(visitor[nodeType]);\n  }\n\n  return visitor;\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction verify(visitor) {\n  if (visitor._verified) return;\n\n  if (typeof visitor === \"function\") {\n    throw new Error(messages.get(\"traverseVerifyRootFunction\"));\n  }\n\n  for (var nodeType in visitor) {\n    if (shouldIgnoreKey(nodeType)) continue;\n\n    if (t.TYPES.indexOf(nodeType) < 0) {\n      throw new Error(messages.get(\"traverseVerifyNodeType\", nodeType));\n    }\n\n    var visitors = visitor[nodeType];\n    if (typeof visitors === \"object\") {\n      for (var visitorKey in visitors) {\n        if (visitorKey === \"enter\" || visitorKey === \"exit\") continue;\n        throw new Error(messages.get(\"traverseVerifyVisitorProperty\", nodeType, visitorKey));\n      }\n    }\n  }\n\n  visitor._verified = true;\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction merge(visitors) {\n  var rootVisitor = {};\n\n  var _arr5 = visitors;\n  for (var _i5 = 0; _i5 < _arr5.length; _i5++) {\n    var visitor = _arr5[_i5];\n    explode(visitor);\n\n    for (var type in visitor) {\n      var nodeVisitor = rootVisitor[type] = rootVisitor[type] || {};\n      mergePair(nodeVisitor, visitor[type]);\n    }\n  }\n\n  return rootVisitor;\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction ensureEntranceObjects(obj) {\n  for (var key in obj) {\n    if (shouldIgnoreKey(key)) continue;\n\n    var fns = obj[key];\n    if (typeof fns === \"function\") {\n      obj[key] = { enter: fns };\n    }\n  }\n}\n\n/**\n * Makes sure that enter and exit callbacks are arrays.\n */\n\nfunction ensureCallbackArrays(obj) {\n  if (obj.enter && !Array.isArray(obj.enter)) obj.enter = [obj.enter];\n  if (obj.exit && !Array.isArray(obj.exit)) obj.exit = [obj.exit];\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction wrapCheck(wrapper, fn) {\n  return function () {\n    if (wrapper.checkPath(this)) {\n      return fn.apply(this, arguments);\n    }\n  };\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction shouldIgnoreKey(key) {\n  // internal/hidden key\n  if (key[0] === \"_\") return true;\n\n  // ignore function keys\n  if (key === \"enter\" || key === \"exit\" || key === \"shouldSkip\") return true;\n\n  // ignore other options\n  if (key === \"blacklist\" || key === \"noScope\" || key === \"skipKeys\") return true;\n\n  return false;\n}\n\n/**\n * [Please add a description.]\n */\n\nfunction mergePair(dest, src) {\n  for (var key in src) {\n    dest[key] = [].concat(dest[key] || [], src[key]);\n  }\n}"]}