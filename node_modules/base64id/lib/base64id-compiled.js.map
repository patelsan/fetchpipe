{"version":3,"sources":["base64id.js"],"names":[],"mappings":"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","file":"base64id-compiled.js","sourcesContent":["/*!\n * base64id v0.1.0\n */\n\n/**\n * Module dependencies\n */\n\nvar crypto = require('crypto');\n\n/**\n * Constructor\n */\n\nvar Base64Id = function() { };\n\n/**\n * Get random bytes\n *\n * Uses a buffer if available, falls back to crypto.randomBytes\n */\n\nBase64Id.prototype.getRandomBytes = function(bytes) {\n\n  var BUFFER_SIZE = 4096\n  var self = this;  \n  \n  bytes = bytes || 12;\n\n  if (bytes > BUFFER_SIZE) {\n    return crypto.randomBytes(bytes);\n  }\n  \n  var bytesInBuffer = parseInt(BUFFER_SIZE/bytes);\n  var threshold = parseInt(bytesInBuffer*0.85);\n\n  if (!threshold) {\n    return crypto.randomBytes(bytes);\n  }\n\n  if (this.bytesBufferIndex == null) {\n     this.bytesBufferIndex = -1;\n  }\n\n  if (this.bytesBufferIndex == bytesInBuffer) {\n    this.bytesBuffer = null;\n    this.bytesBufferIndex = -1;\n  }\n\n  // No buffered bytes available or index above threshold\n  if (this.bytesBufferIndex == -1 || this.bytesBufferIndex > threshold) {\n     \n    if (!this.isGeneratingBytes) {\n      this.isGeneratingBytes = true;\n      crypto.randomBytes(BUFFER_SIZE, function(err, bytes) {\n        self.bytesBuffer = bytes;\n        self.bytesBufferIndex = 0;\n        self.isGeneratingBytes = false;\n      }); \n    }\n    \n    // Fall back to sync call when no buffered bytes are available\n    if (this.bytesBufferIndex == -1) {\n      return crypto.randomBytes(bytes);\n    }\n  }\n  \n  var result = this.bytesBuffer.slice(bytes*this.bytesBufferIndex, bytes*(this.bytesBufferIndex+1)); \n  this.bytesBufferIndex++; \n  \n  return result;\n}\n\n/**\n * Generates a base64 id\n *\n * (Original version from socket.io <http://socket.io>)\n */\n\nBase64Id.prototype.generateId = function () {\n  var rand = new Buffer(15); // multiple of 3 for base64\n  if (!rand.writeInt32BE) {\n    return Math.abs(Math.random() * Math.random() * Date.now() | 0).toString()\n      + Math.abs(Math.random() * Math.random() * Date.now() | 0).toString();\n  }\n  this.sequenceNumber = (this.sequenceNumber + 1) | 0;\n  rand.writeInt32BE(this.sequenceNumber, 11);\n  if (crypto.randomBytes) {\n    this.getRandomBytes(12).copy(rand);\n  } else {\n    // not secure for node 0.4\n    [0, 4, 8].forEach(function(i) {\n      rand.writeInt32BE(Math.random() * Math.pow(2, 32) | 0, i);\n    });\n  }\n  return rand.toString('base64').replace(/\\//g, '_').replace(/\\+/g, '-');\n};\n\n/**\n * Export\n */\n\nexports = module.exports = new Base64Id();\n"]}