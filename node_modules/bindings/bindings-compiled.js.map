{"version":3,"sources":["bindings.js"],"names":[],"mappings":";;;;;;;AAKA,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC;IAClB,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC;IACtB,IAAI,GAAG,IAAI,CAAC,IAAI;IAChB,OAAO,GAAG,IAAI,CAAC,OAAO;IACtB,MAAM,GAAG,EAAE,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU;IACzC,QAAQ,GAAG;AACP,OAAK,EAAE,OAAO,CAAC,GAAG,CAAC,mBAAmB,IAAI,KAAK;AAC/C,UAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,0BAA0B,IAAI,UAAU;AAC9D,UAAQ,EAAE,OAAO,CAAC,QAAQ;AAC1B,MAAI,EAAE,OAAO,CAAC,IAAI;AAClB,SAAO,EAAE,OAAO,CAAC,QAAQ,CAAC,IAAI;AAC9B,UAAQ,EAAE,eAAe;AACzB,SAAK;;AAEH,GAAE,aAAa,EAAE,OAAO,EAAE,UAAU,CAAE;;IAEtC,CAAE,aAAa,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,CAAE,EAC/C,CAAE,aAAa,EAAE,OAAO,EAAE,SAAS,EAAE,UAAU,CAAE;;IAEjD,CAAE,aAAa,EAAE,KAAK,EAAE,OAAO,EAAE,UAAU,CAAE,EAC7C,CAAE,aAAa,EAAE,OAAO,EAAE,UAAU,CAAE;;IAEtC,CAAE,aAAa,EAAE,KAAK,EAAE,SAAS,EAAE,UAAU,CAAE,EAC/C,CAAE,aAAa,EAAE,SAAS,EAAE,UAAU,CAAE;;IAExC,CAAE,aAAa,EAAE,OAAO,EAAE,SAAS,EAAE,UAAU,CAAE;;IAEjD,CAAE,aAAa,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,CAAE,CACzE;CACJ,CAAA;;;;;;;;AAQL,SAAS,QAAQ,CAAE,IAAI,EAAE;;;AAGvB,MAAI,OAAO,IAAI,IAAI,QAAQ,EAAE;AAC3B,QAAI,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAA;GAC1B,MAAM,IAAI,CAAC,IAAI,EAAE;AAChB,QAAI,GAAG,EAAE,CAAA;GACV;AACD,MAAI,CAAC,SAAS,GAAG,QAAQ,CAAA;;;AAGzB,MAAI,CAAC,IAAI,CAAC,WAAW,EAAE;AACrB,QAAI,CAAC,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAA;GAC1D;;;AAGD,MAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,OAAO,EAAE;AAC1C,QAAI,CAAC,QAAQ,IAAI,OAAO,CAAA;GACzB;;AAED,MAAI,KAAK,GAAG,EAAE;MACV,CAAC,GAAG,CAAC;MACL,CAAC,GAAG,IAAI,OAAI,CAAC,MAAM;MACnB,CAAC;MACD,CAAC;MACD,GAAG,CAAA;;AAEP,SAAO,CAAC,GAAC,CAAC,EAAE,CAAC,EAAE,EAAE;AACf,KAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,OAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;AAChD,aAAO,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAA;KACpB,CAAC,CAAC,CAAA;AACH,SAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;AACb,QAAI;AACF,OAAC,GAAG,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAA;AAC/C,UAAI,CAAC,IAAI,CAAC,IAAI,EAAE;AACd,SAAC,CAAC,IAAI,GAAG,CAAC,CAAA;OACX;AACD,aAAO,CAAC,CAAA;KACT,CAAC,OAAO,CAAC,EAAE;AACV,UAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE;AAChC,cAAM,CAAC,CAAA;OACR;KACF;GACF;;AAED,KAAG,GAAG,IAAI,KAAK,CAAC,8CAA8C,GAC1D,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;AAAE,WAAO,IAAI,CAAC,KAAK,GAAG,CAAC,CAAA;GAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;AACjE,KAAG,CAAC,KAAK,GAAG,KAAK,CAAA;AACjB,QAAM,GAAG,CAAA;CACV;AACD,MAAM,CAAC,OAAO,GAAG,OAAO,GAAG,QAAQ,CAAA;;;;;;;;AASnC,OAAO,CAAC,WAAW,GAAG,SAAS,WAAW,CAAE,YAAY,EAAE;AACxD,MAAI,OAAO,GAAG,KAAK,CAAC,iBAAiB;MACjC,OAAO,GAAG,KAAK,CAAC,eAAe;MAC/B,KAAK,GAAG,EAAE;MACV,QAAQ,CAAA;;AAEZ,OAAK,CAAC,eAAe,GAAG,EAAE,CAAA;;AAE1B,OAAK,CAAC,iBAAiB,GAAG,UAAU,CAAC,EAAE,EAAE,EAAE;AACzC,SAAK,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,EAAE,CAAC,MAAM,EAAE,CAAC,GAAC,CAAC,EAAE,CAAC,EAAE,EAAE;AACnC,cAAQ,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAA;AAC9B,UAAI,QAAQ,KAAK,UAAU,EAAE;AAC3B,YAAI,YAAY,EAAE;AACd,cAAI,QAAQ,KAAK,YAAY,EAAE;AAC7B,mBAAM;WACP;SACJ,MAAM;AACL,iBAAM;SACP;OACF;KACF;GACF,CAAA;;;AAGD,OAAK,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAA;AAC9B,OAAK,CAAC,KAAK,CAAA;;;AAGX,OAAK,CAAC,iBAAiB,GAAG,OAAO,CAAA;AACjC,OAAK,CAAC,eAAe,GAAG,OAAO,CAAA;;AAE/B,SAAO,QAAQ,CAAA;CAChB,CAAA;;;;;;;;;;;AAWD,OAAO,CAAC,OAAO,GAAG,SAAS,OAAO,CAAE,IAAI,EAAE;AACxC,MAAI,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC;MACnB,IAAI,CAAA;AACR,SAAO,IAAI,EAAE;AACX,QAAI,GAAG,KAAK,GAAG,EAAE;;AAEf,SAAG,GAAG,OAAO,CAAC,GAAG,EAAE,CAAA;KACpB;AACD,QAAI,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC,EAAE;;AAE1E,aAAO,GAAG,CAAA;KACX;AACD,QAAI,IAAI,KAAK,GAAG,EAAE;;AAEhB,YAAM,IAAI,KAAK,CAAC,0CAA0C,GAAG,IAAI,GACjD,wCAAwC,CAAC,CAAA;KAC1D;;AAED,QAAI,GAAG,GAAG,CAAA;AACV,OAAG,GAAG,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAA;GACtB;CACF,CAAA","file":"bindings-compiled.js","sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar fs = require('fs')\n  , path = require('path')\n  , join = path.join\n  , dirname = path.dirname\n  , exists = fs.existsSync || path.existsSync\n  , defaults = {\n        arrow: process.env.NODE_BINDINGS_ARROW || ' â†’ '\n      , compiled: process.env.NODE_BINDINGS_COMPILED_DIR || 'compiled'\n      , platform: process.platform\n      , arch: process.arch\n      , version: process.versions.node\n      , bindings: 'bindings.node'\n      , try: [\n          // node-gyp's linked version in the \"build\" dir\n          [ 'module_root', 'build', 'bindings' ]\n          // node-waf and gyp_addon (a.k.a node-gyp)\n        , [ 'module_root', 'build', 'Debug', 'bindings' ]\n        , [ 'module_root', 'build', 'Release', 'bindings' ]\n          // Debug files, for development (legacy behavior, remove for node v0.9)\n        , [ 'module_root', 'out', 'Debug', 'bindings' ]\n        , [ 'module_root', 'Debug', 'bindings' ]\n          // Release files, but manually compiled (legacy behavior, remove for node v0.9)\n        , [ 'module_root', 'out', 'Release', 'bindings' ]\n        , [ 'module_root', 'Release', 'bindings' ]\n          // Legacy from node-waf, node <= 0.4.x\n        , [ 'module_root', 'build', 'default', 'bindings' ]\n          // Production \"Release\" buildtype binary (meh...)\n        , [ 'module_root', 'compiled', 'version', 'platform', 'arch', 'bindings' ]\n        ]\n    }\n\n/**\n * The main `bindings()` function loads the compiled bindings for a given module.\n * It uses V8's Error API to determine the parent filename that this function is\n * being invoked from, which is then used to find the root directory.\n */\n\nfunction bindings (opts) {\n\n  // Argument surgery\n  if (typeof opts == 'string') {\n    opts = { bindings: opts }\n  } else if (!opts) {\n    opts = {}\n  }\n  opts.__proto__ = defaults\n\n  // Get the module root\n  if (!opts.module_root) {\n    opts.module_root = exports.getRoot(exports.getFileName())\n  }\n\n  // Ensure the given bindings name ends with .node\n  if (path.extname(opts.bindings) != '.node') {\n    opts.bindings += '.node'\n  }\n\n  var tries = []\n    , i = 0\n    , l = opts.try.length\n    , n\n    , b\n    , err\n\n  for (; i<l; i++) {\n    n = join.apply(null, opts.try[i].map(function (p) {\n      return opts[p] || p\n    }))\n    tries.push(n)\n    try {\n      b = opts.path ? require.resolve(n) : require(n)\n      if (!opts.path) {\n        b.path = n\n      }\n      return b\n    } catch (e) {\n      if (!/not find/i.test(e.message)) {\n        throw e\n      }\n    }\n  }\n\n  err = new Error('Could not locate the bindings file. Tried:\\n'\n    + tries.map(function (a) { return opts.arrow + a }).join('\\n'))\n  err.tries = tries\n  throw err\n}\nmodule.exports = exports = bindings\n\n\n/**\n * Gets the filename of the JavaScript file that invokes this function.\n * Used to help find the root directory of a module.\n * Optionally accepts an filename argument to skip when searching for the invoking filename\n */\n\nexports.getFileName = function getFileName (calling_file) {\n  var origPST = Error.prepareStackTrace\n    , origSTL = Error.stackTraceLimit\n    , dummy = {}\n    , fileName\n\n  Error.stackTraceLimit = 10\n\n  Error.prepareStackTrace = function (e, st) {\n    for (var i=0, l=st.length; i<l; i++) {\n      fileName = st[i].getFileName()\n      if (fileName !== __filename) {\n        if (calling_file) {\n            if (fileName !== calling_file) {\n              return\n            }\n        } else {\n          return\n        }\n      }\n    }\n  }\n\n  // run the 'prepareStackTrace' function above\n  Error.captureStackTrace(dummy)\n  dummy.stack\n\n  // cleanup\n  Error.prepareStackTrace = origPST\n  Error.stackTraceLimit = origSTL\n\n  return fileName\n}\n\n/**\n * Gets the root directory of a module, given an arbitrary filename\n * somewhere in the module tree. The \"root directory\" is the directory\n * containing the `package.json` file.\n *\n *   In:  /home/nate/node-native-module/lib/index.js\n *   Out: /home/nate/node-native-module\n */\n\nexports.getRoot = function getRoot (file) {\n  var dir = dirname(file)\n    , prev\n  while (true) {\n    if (dir === '.') {\n      // Avoids an infinite loop in rare cases, like the REPL\n      dir = process.cwd()\n    }\n    if (exists(join(dir, 'package.json')) || exists(join(dir, 'node_modules'))) {\n      // Found the 'package.json' file or 'node_modules' dir; we're done\n      return dir\n    }\n    if (prev === dir) {\n      // Got to the top\n      throw new Error('Could not find module root given file: \"' + file\n                    + '\". Do you have a `package.json` file? ')\n    }\n    // Try the parent dir next\n    prev = dir\n    dir = join(dir, '..')\n  }\n}\n"]}