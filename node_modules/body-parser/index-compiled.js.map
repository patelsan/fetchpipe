{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('body-parser')\n\n/**\n * Cache of loaded parsers.\n * @private\n */\n\nvar parsers = Object.create(null)\n\n/**\n * @typedef Parsers\n * @type {function}\n * @property {function} json\n * @property {function} raw\n * @property {function} text\n * @property {function} urlencoded\n */\n\n/**\n * Module exports.\n * @type {Parsers}\n */\n\nexports = module.exports = deprecate.function(bodyParser,\n  'bodyParser: use individual json/urlencoded middlewares')\n\n/**\n * JSON parser.\n * @public\n */\n\nObject.defineProperty(exports, 'json', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('json')\n})\n\n/**\n * Raw parser.\n * @public\n */\n\nObject.defineProperty(exports, 'raw', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('raw')\n})\n\n/**\n * Text parser.\n * @public\n */\n\nObject.defineProperty(exports, 'text', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('text')\n})\n\n/**\n * URL-encoded parser.\n * @public\n */\n\nObject.defineProperty(exports, 'urlencoded', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('urlencoded')\n})\n\n/**\n * Create a middleware to parse json and urlencoded bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @deprecated\n * @public\n */\n\nfunction bodyParser(options){\n  var opts = {}\n\n  // exclude type option\n  if (options) {\n    for (var prop in options) {\n      if ('type' !== prop) {\n        opts[prop] = options[prop]\n      }\n    }\n  }\n\n  var _urlencoded = exports.urlencoded(opts)\n  var _json = exports.json(opts)\n\n  return function bodyParser(req, res, next) {\n    _json(req, res, function(err){\n      if (err) return next(err);\n      _urlencoded(req, res, next);\n    });\n  }\n}\n\n/**\n * Create a getter for loading a parser.\n * @private\n */\n\nfunction createParserGetter(name) {\n  return function get() {\n    return loadParser(name)\n  }\n}\n\n/**\n * Load a parser module.\n * @private\n */\n\nfunction loadParser(parserName) {\n  var parser = parsers[parserName]\n\n  if (parser !== undefined) {\n    return parser\n  }\n\n  // this uses a switch for static require analysis\n  switch (parserName) {\n    case 'json':\n      parser = require('./lib/types/json')\n      break\n    case 'raw':\n      parser = require('./lib/types/raw')\n      break\n    case 'text':\n      parser = require('./lib/types/text')\n      break\n    case 'urlencoded':\n      parser = require('./lib/types/urlencoded')\n      break\n  }\n\n  // store to prevent invoking require()\n  return parsers[parserName] = parser\n}\n"]}