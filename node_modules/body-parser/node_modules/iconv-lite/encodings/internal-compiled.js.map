{"version":3,"sources":["internal.js"],"names":[],"mappings":"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","file":"internal-compiled.js","sourcesContent":["\"use strict\"\n\n// Export Node.js internal encodings.\n\nmodule.exports = {\n    // Encodings\n    utf8:   { type: \"_internal\", bomAware: true},\n    cesu8:  { type: \"_internal\", bomAware: true},\n    unicode11utf8: \"utf8\",\n\n    ucs2:   { type: \"_internal\", bomAware: true},\n    utf16le: \"ucs2\",\n\n    binary: { type: \"_internal\" },\n    base64: { type: \"_internal\" },\n    hex:    { type: \"_internal\" },\n\n    // Codec.\n    _internal: InternalCodec,\n};\n\n//------------------------------------------------------------------------------\n\nfunction InternalCodec(codecOptions, iconv) {\n    this.enc = codecOptions.encodingName;\n    this.bomAware = codecOptions.bomAware;\n\n    if (this.enc === \"base64\")\n        this.encoder = InternalEncoderBase64;\n    else if (this.enc === \"cesu8\") {\n        this.enc = \"utf8\"; // Use utf8 for decoding.\n        this.encoder = InternalEncoderCesu8;\n\n        // Add decoder for versions of Node not supporting CESU-8\n        if (new Buffer(\"eda080\", 'hex').toString().length == 3) {\n            this.decoder = InternalDecoderCesu8;\n            this.defaultCharUnicode = iconv.defaultCharUnicode;\n        }\n    }\n}\n\nInternalCodec.prototype.encoder = InternalEncoder;\nInternalCodec.prototype.decoder = InternalDecoder;\n\n//------------------------------------------------------------------------------\n\n// We use node.js internal decoder. Its signature is the same as ours.\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\n    StringDecoder.prototype.end = function() {};\n\n\nfunction InternalDecoder(options, codec) {\n    StringDecoder.call(this, codec.enc);\n}\n\nInternalDecoder.prototype = StringDecoder.prototype;\n\n\n//------------------------------------------------------------------------------\n// Encoder is mostly trivial\n\nfunction InternalEncoder(options, codec) {\n    this.enc = codec.enc;\n}\n\nInternalEncoder.prototype.write = function(str) {\n    return new Buffer(str, this.enc);\n}\n\nInternalEncoder.prototype.end = function() {\n}\n\n\n//------------------------------------------------------------------------------\n// Except base64 encoder, which must keep its state.\n\nfunction InternalEncoderBase64(options, codec) {\n    this.prevStr = '';\n}\n\nInternalEncoderBase64.prototype.write = function(str) {\n    str = this.prevStr + str;\n    var completeQuads = str.length - (str.length % 4);\n    this.prevStr = str.slice(completeQuads);\n    str = str.slice(0, completeQuads);\n\n    return new Buffer(str, \"base64\");\n}\n\nInternalEncoderBase64.prototype.end = function() {\n    return new Buffer(this.prevStr, \"base64\");\n}\n\n\n//------------------------------------------------------------------------------\n// CESU-8 encoder is also special.\n\nfunction InternalEncoderCesu8(options, codec) {\n}\n\nInternalEncoderCesu8.prototype.write = function(str) {\n    var buf = new Buffer(str.length * 3), bufIdx = 0;\n    for (var i = 0; i < str.length; i++) {\n        var charCode = str.charCodeAt(i);\n        // Naive implementation, but it works because CESU-8 is especially easy\n        // to convert from UTF-16 (which all JS strings are encoded in).\n        if (charCode < 0x80)\n            buf[bufIdx++] = charCode;\n        else if (charCode < 0x800) {\n            buf[bufIdx++] = 0xC0 + (charCode >>> 6);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n        else { // charCode will always be < 0x10000 in javascript.\n            buf[bufIdx++] = 0xE0 + (charCode >>> 12);\n            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n    }\n    return buf.slice(0, bufIdx);\n}\n\nInternalEncoderCesu8.prototype.end = function() {\n}\n\n//------------------------------------------------------------------------------\n// CESU-8 decoder is not implemented in Node v4.0+\n\nfunction InternalDecoderCesu8(options, codec) {\n    this.acc = 0;\n    this.contBytes = 0;\n    this.accBytes = 0;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n}\n\nInternalDecoderCesu8.prototype.write = function(buf) {\n    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, \n        res = '';\n    for (var i = 0; i < buf.length; i++) {\n        var curByte = buf[i];\n        if ((curByte & 0xC0) !== 0x80) { // Leading byte\n            if (contBytes > 0) { // Previous code is invalid\n                res += this.defaultCharUnicode;\n                contBytes = 0;\n            }\n\n            if (curByte < 0x80) { // Single-byte code\n                res += String.fromCharCode(curByte);\n            } else if (curByte < 0xE0) { // Two-byte code\n                acc = curByte & 0x1F;\n                contBytes = 1; accBytes = 1;\n            } else if (curByte < 0xF0) { // Three-byte code\n                acc = curByte & 0x0F;\n                contBytes = 2; accBytes = 1;\n            } else { // Four or more are not supported for CESU-8.\n                res += this.defaultCharUnicode;\n            }\n        } else { // Continuation byte\n            if (contBytes > 0) { // We're waiting for it.\n                acc = (acc << 6) | (curByte & 0x3f);\n                contBytes--; accBytes++;\n                if (contBytes === 0) {\n                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\n                    if (accBytes === 2 && acc < 0x80 && acc > 0)\n                        res += this.defaultCharUnicode;\n                    else if (accBytes === 3 && acc < 0x800)\n                        res += this.defaultCharUnicode;\n                    else\n                        // Actually add character.\n                        res += String.fromCharCode(acc);\n                }\n            } else { // Unexpected continuation byte\n                res += this.defaultCharUnicode;\n            }\n        }\n    }\n    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;\n    return res;\n}\n\nInternalDecoderCesu8.prototype.end = function() {\n    var res = 0;\n    if (this.contBytes > 0)\n        res += this.defaultCharUnicode;\n    return res;\n}\n"]}