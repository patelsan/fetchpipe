{"version":3,"sources":["sbcs-codec.js"],"names":[],"mappings":"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","file":"sbcs-codec-compiled.js","sourcesContent":["\"use strict\"\n\n// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that\n// correspond to encoded bytes (if 128 - then lower half is ASCII). \n\nexports._sbcs = SBCSCodec;\nfunction SBCSCodec(codecOptions, iconv) {\n    if (!codecOptions)\n        throw new Error(\"SBCS codec is called without the data.\")\n    \n    // Prepare char buffer for decoding.\n    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))\n        throw new Error(\"Encoding '\"+codecOptions.type+\"' has incorrect 'chars' (must be of len 128 or 256)\");\n    \n    if (codecOptions.chars.length === 128) {\n        var asciiString = \"\";\n        for (var i = 0; i < 128; i++)\n            asciiString += String.fromCharCode(i);\n        codecOptions.chars = asciiString + codecOptions.chars;\n    }\n\n    this.decodeBuf = new Buffer(codecOptions.chars, 'ucs2');\n    \n    // Encoding buffer.\n    var encodeBuf = new Buffer(65536);\n    encodeBuf.fill(iconv.defaultCharSingleByte.charCodeAt(0));\n\n    for (var i = 0; i < codecOptions.chars.length; i++)\n        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;\n\n    this.encodeBuf = encodeBuf;\n}\n\nSBCSCodec.prototype.encoder = SBCSEncoder;\nSBCSCodec.prototype.decoder = SBCSDecoder;\n\n\nfunction SBCSEncoder(options, codec) {\n    this.encodeBuf = codec.encodeBuf;\n}\n\nSBCSEncoder.prototype.write = function(str) {\n    var buf = new Buffer(str.length);\n    for (var i = 0; i < str.length; i++)\n        buf[i] = this.encodeBuf[str.charCodeAt(i)];\n    \n    return buf;\n}\n\nSBCSEncoder.prototype.end = function() {\n}\n\n\nfunction SBCSDecoder(options, codec) {\n    this.decodeBuf = codec.decodeBuf;\n}\n\nSBCSDecoder.prototype.write = function(buf) {\n    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n    var decodeBuf = this.decodeBuf;\n    var newBuf = new Buffer(buf.length*2);\n    var idx1 = 0, idx2 = 0;\n    for (var i = 0; i < buf.length; i++) {\n        idx1 = buf[i]*2; idx2 = i*2;\n        newBuf[idx2] = decodeBuf[idx1];\n        newBuf[idx2+1] = decodeBuf[idx1+1];\n    }\n    return newBuf.toString('ucs2');\n}\n\nSBCSDecoder.prototype.end = function() {\n}\n"]}