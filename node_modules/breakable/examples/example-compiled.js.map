{"version":3,"sources":["example.js"],"names":[],"mappings":";;AAAA,IAAI,SAAS,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACvC,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;AACvC,IAAI,QAAQ,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AACvC,IAAI,GAAG,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;;AAE9B,IAAI,GAAG,GAAG,SAAS,CAAC,UAAS,GAAG,EAAE;AAC9B,YAAQ,CAAC,GAAG,EAAE,EAAC,GAAG,EAAE,aAAS,IAAI,EAAE;AAC/B,gBAAI,IAAI,CAAC,IAAI,KAAK,iBAAiB,IAAI,IAAI,CAAC,QAAQ,KAAK,GAAG,EAAE;AAC1D,mBAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACtB;SACJ,EAAC,CAAC,CAAC;CACP,CAAC,CAAC;;AAEH,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC","file":"example-compiled.js","sourcesContent":["var breakable = require(\"./breakable\");\nvar esprima = require(\"esprima\").parse;\nvar traverse = require(\"ast-traverse\");\nvar ast = esprima(\"f(!x, y)\");\n\nvar val = breakable(function(brk) {\n    traverse(ast, {pre: function(node) {\n        if (node.type === \"UnaryExpression\" && node.operator === \"!\") {\n            brk(node.argument);\n        }\n    }});\n});\n\nconsole.dir(val); // { type: 'Identifier', name: 'x' }\n"]}