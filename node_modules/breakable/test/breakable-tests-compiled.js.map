{"version":3,"sources":["breakable-tests.js"],"names":[],"mappings":"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","file":"breakable-tests-compiled.js","sourcesContent":["\"use strict\";\n\nvar test = require(\"tap\").test;\nvar breakable = require(\"../\");\n\ntest(\"normal-return\", function(t) {\n    t.equal(breakable(function(brk) {\n        return 1;\n    }), 1);\n    t.end();\n});\n\ntest(\"break-return\", function(t) {\n    t.equal(breakable(function(brk) {\n        brk(2);\n        return 1;\n    }), 2);\n    t.end();\n});\n\ntest(\"recurse\", function(t) {\n    t.equal(breakable(function(brk) {\n        function traverse(n) {\n            if (n < 100) {\n                traverse(n + 1);\n            }\n            brk(n);\n        }\n        traverse(0);\n    }), 100);\n    t.end();\n});\n\ntest(\"simple-throws\", function(t) {\n    t.throws(breakable.bind(null, function(brk) {\n        throw 1;\n    }));\n    t.doesNotThrow(breakable.bind(null, function(brk) {\n        brk(1);\n        throw 2;\n    }));\n    t.end();\n});\n\ntest(\"prop-recurse-break\", function(t) {\n    var tstObj = {a: 1, b: {c: 2, d: {e: 3, f: \"gold\", g: null}}, h: {i: 6}};\n\n    var found = breakable(function(brk) {\n        function traverse(obj) {\n            var props = Object.keys(obj);\n            props.forEach(function(prop) {\n                var val = obj[prop];\n                if (val === \"gold\") {\n                    brk(prop);\n                } else if (val === null) {\n                    throw new Error(\"break did not work\");\n                } else if (val && typeof val === \"object\") {\n                    traverse(val);\n                }\n            });\n        }\n        traverse(tstObj);\n    });\n    t.equal(found, \"f\");\n    t.end();\n});\n\ntest(\"forEach-break\", function(t) {\n    var cnt = 0;\n    breakable(function(brk) {\n        [1,2,3].forEach(function(v) {\n            ++cnt;\n            if (v === 2) {\n                brk();\n            }\n        });\n    });\n    t.equal(cnt, 2);\n    t.end();\n});\n\ntest(\"nested-forEach-break\", function(t) {\n    var cnt = 0;\n    breakable(function(brk) {\n        [1,2,3].forEach(function(v) {\n            [4,5,6].forEach(function(v1) {\n                ++cnt;\n                if (v === 2 && v1 === 5) {\n                    brk();\n                }\n            });\n        });\n    });\n    t.equal(cnt, 5);\n    t.end();\n});\n\ntest(\"nested-breakables-1\", function(t) {\n    var res = breakable(function(brk1) {\n        breakable(function(brk2) {\n            brk1(13);\n        });\n    });\n    t.equal(res, 13);\n    t.end();\n});\n\ntest(\"nested-breakables-2\", function(t) {\n    t.plan(2);\n    var res1 = breakable(function(brk1) {\n        var res2 = breakable(function(brk2) {\n            brk2(13);\n        });\n        t.equal(res2, 13);\n    });\n    t.equal(res1, undefined);\n    t.end();\n});\n"]}