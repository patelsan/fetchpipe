{"version":3,"sources":["fsevents-handler.js"],"names":[],"mappings":"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","file":"fsevents-handler-compiled.js","sourcesContent":["'use strict';\n\nvar fs = require('fs');\nvar sysPath = require('path');\nvar readdirp = require('readdirp');\nvar fsevents;\ntry { fsevents = require('fsevents'); } catch (error) {}\n\n// fsevents instance helper functions\n\n// object to hold per-process fsevents instances\n// (may be shared across chokidar FSWatcher instances)\nvar FSEventsWatchers = Object.create(null);\n\n// Private function: Instantiates the fsevents interface\n\n// * path       - string, path to be watched\n// * callback   - function, called when fsevents is bound and ready\n\n// Returns new fsevents instance\nfunction createFSEventsInstance(path, callback) {\n  return (new fsevents(path)).on('fsevent', callback).start();\n}\n\n// Private function: Instantiates the fsevents interface or binds listeners\n// to an existing one covering the same file tree\n\n// * path       - string, path to be watched\n// * realPath   - string, real path (in case of symlinks)\n// * listener   - function, called when fsevents emits events\n// * rawEmitter - function, passes data to listeners of the 'raw' event\n\n// Returns close function\nfunction setFSEventsListener(path, realPath, listener, rawEmitter) {\n  var watchPath = sysPath.extname(path) ? sysPath.dirname(path) : path;\n  var watchContainer;\n\n  var resolvedPath = sysPath.resolve(path);\n  var hasSymlink = resolvedPath !== realPath;\n  function filteredListener(fullPath, flags, info) {\n    if (hasSymlink) fullPath = fullPath.replace(realPath, resolvedPath);\n    if (\n      fullPath === resolvedPath ||\n      !fullPath.indexOf(resolvedPath + sysPath.sep)\n    ) listener(fullPath, flags, info);\n  }\n\n  // check if there is already a watcher on a parent path\n  // modifies `watchPath` to the parent path when it finds a match\n  function watchedParent() {\n    return Object.keys(FSEventsWatchers).some(function(watchedPath) {\n      // condition is met when indexOf returns 0\n      if (!realPath.indexOf(sysPath.resolve(watchedPath) + sysPath.sep)) {\n        watchPath = watchedPath;\n        return true;\n      }\n    });\n  }\n\n  if (watchPath in FSEventsWatchers || watchedParent()) {\n    watchContainer = FSEventsWatchers[watchPath];\n    watchContainer.listeners.push(filteredListener);\n  } else {\n    watchContainer = FSEventsWatchers[watchPath] = {\n      listeners: [filteredListener],\n      rawEmitters: [rawEmitter],\n      watcher: createFSEventsInstance(watchPath, function(fullPath, flags) {\n        var info = fsevents.getInfo(fullPath, flags);\n        watchContainer.listeners.forEach(function(listener) {\n          listener(fullPath, flags, info);\n        });\n        watchContainer.rawEmitters.forEach(function(emitter) {\n          emitter(info.event, fullPath, info);\n        });\n      })\n    };\n  }\n  var listenerIndex = watchContainer.listeners.length - 1;\n\n  // removes this instance's listeners and closes the underlying fsevents\n  // instance if there are no more listeners left\n  return function close() {\n    delete watchContainer.listeners[listenerIndex];\n    delete watchContainer.rawEmitters[listenerIndex];\n    if (!Object.keys(watchContainer.listeners).length) {\n      watchContainer.watcher.stop();\n      delete FSEventsWatchers[watchPath];\n    }\n  }\n}\n\n// returns boolean indicating whether fsevents can be used\nfunction canUse() {\n  return fsevents && Object.keys(FSEventsWatchers).length < 128;\n}\n\n// determines subdirectory traversal levels from root to path\nfunction depth(path, root) {\n  var i = 0;\n  while (!path.indexOf(root) && (path = sysPath.dirname(path)) !== root) i++;\n  return i;\n}\n\n// fake constructor for attaching fsevents-specific prototype methods that\n// will be copied to FSWatcher's prototype\nfunction FsEventsHandler() {}\n\n// Private method: Handle symlinks encountered during directory scan\n\n// * wathPath   - string, file/dir path to be watched with fsevents\n// * realPath   - string, real path (in case of symlinks)\n// * transform  - function, path transformer\n// * globFilter - function, path filter in case a glob pattern was provided\n\n// Returns close function for the watcher instance\nFsEventsHandler.prototype._watchWithFsEvents =\nfunction(watchPath, realPath, transform, globFilter) {\n  if (this._isIgnored(watchPath)) return;\n  var watchCallback = function(fullPath, flags, info) {\n    if (\n      this.options.depth !== undefined &&\n      depth(fullPath, realPath) > this.options.depth\n    ) return;\n    var path = transform(sysPath.join(\n      watchPath, sysPath.relative(watchPath, fullPath)\n    ));\n    if (globFilter && !globFilter(path)) return;\n    // ensure directories are tracked\n    var parent = sysPath.dirname(path);\n    var item = sysPath.basename(path);\n    var watchedDir = this._getWatchedDir(\n      info.type === 'directory' ? path : parent\n    );\n    var checkIgnored = function(stats) {\n      if (this._isIgnored(path, stats)) {\n        this._ignoredPaths[path] = true;\n        if (stats && stats.isDirectory()) {\n          this._ignoredPaths[path + '/**/*'] = true;\n        }\n        return true;\n      } else {\n        delete this._ignoredPaths[path];\n        delete this._ignoredPaths[path + '/**/*'];\n      }\n    }.bind(this);\n\n    var handleEvent = function(event) {\n      if (checkIgnored()) return;\n\n      if (event === 'unlink') {\n        // suppress unlink events on never before seen files\n        if (info.type === 'directory' || watchedDir.has(item)) {\n          this._remove(parent, item);\n        }\n      } else {\n        if (event === 'add') {\n          // track new directories\n          if (info.type === 'directory') this._getWatchedDir(path);\n\n          if (info.type === 'symlink' && this.options.followSymlinks) {\n            // push symlinks back to the top of the stack to get handled\n            var curDepth = this.options.depth === undefined ?\n              undefined : depth(fullPath, realPath) + 1;\n            return this._addToFsEvents(path, false, true, curDepth);\n          } else {\n            // track new paths\n            // (other than symlinks being followed, which will be tracked soon)\n            this._getWatchedDir(parent).add(item);\n          }\n        }\n        var eventName = info.type === 'directory' ? event + 'Dir' : event;\n        this._emit(eventName, path);\n      }\n    }.bind(this);\n\n    function addOrChange() {\n      handleEvent(watchedDir.has(item) ? 'change' : 'add');\n    }\n    function checkFd() {\n      fs.open(path, 'r', function(error, fd) {\n        if (fd) fs.close(fd);\n        error && error.code !== 'EACCES' ?\n          handleEvent('unlink') : addOrChange();\n      });\n    }\n    // correct for wrong events emitted\n    var wrongEventFlags = [\n      69888, 70400, 71424, 72704, 73472, 131328, 131840, 262912\n    ];\n    if (wrongEventFlags.indexOf(flags) !== -1 || info.event === 'unknown') {\n      if (typeof this.options.ignored === 'function') {\n        fs.stat(path, function(error, stats) {\n          if (checkIgnored(stats)) return;\n          stats ? addOrChange() : handleEvent('unlink');\n        });\n      } else {\n        checkFd();\n      }\n    } else {\n      switch (info.event) {\n      case 'created':\n      case 'modified':\n        return addOrChange();\n      case 'deleted':\n      case 'moved':\n        return checkFd();\n      }\n    }\n  }.bind(this);\n\n  var closer = setFSEventsListener(\n    watchPath,\n    realPath,\n    watchCallback,\n    this.emit.bind(this, 'raw')\n  );\n\n  this._emitReady();\n  return closer;\n};\n\n// Private method: Handle symlinks encountered during directory scan\n\n// * linkPath   - string, path to symlink\n// * fullPath   - string, absolute path to the symlink\n// * transform  - function, pre-existing path transformer\n// * curDepth   - int, level of subdirectories traversed to where symlink is\n\n// Returns nothing\nFsEventsHandler.prototype._fsEventsSymlink =\nfunction(linkPath, fullPath, transform, curDepth) {\n  // don't follow the same symlink more than once\n  if (this._symlinkPaths[fullPath]) return;\n  else this._symlinkPaths[fullPath] = true;\n\n  this._readyCount++;\n\n  fs.realpath(linkPath, function(error, linkTarget) {\n    if (this._handleError(error) || this._isIgnored(linkTarget)) {\n      return this._emitReady();\n    }\n\n    this._readyCount++;\n\n    // add the linkTarget for watching with a wrapper for transform\n    // that causes emitted paths to incorporate the link's path\n    this._addToFsEvents(linkTarget || linkPath, function(path) {\n      var dotSlash = '.' + sysPath.sep;\n      var aliasedPath = linkPath;\n      if (linkTarget && linkTarget !== dotSlash) {\n        aliasedPath = path.replace(linkTarget, linkPath);\n      } else if (path !== dotSlash) {\n        aliasedPath = sysPath.join(linkPath, path);\n      }\n      return transform(aliasedPath);\n    }, false, curDepth);\n  }.bind(this));\n};\n\n// Private method: Handle added path with fsevents\n\n// * path       - string, file/directory path or glob pattern\n// * transform  - function, converts working path to what the user expects\n// * forceAdd   - boolean, ensure add is emitted\n// * priorDepth - int, level of subdirectories already traversed\n\n// Returns nothing\nFsEventsHandler.prototype._addToFsEvents =\nfunction(path, transform, forceAdd, priorDepth) {\n\n  // applies transform if provided, otherwise returns same value\n  var processPath = typeof transform === 'function' ?\n    transform : function(val) { return val; };\n\n  var emitAdd = function(newPath, stats) {\n    var pp = processPath(newPath);\n    var isDir = stats.isDirectory();\n    var dirObj = this._getWatchedDir(sysPath.dirname(pp));\n    var base = sysPath.basename(pp);\n\n    // ensure empty dirs get tracked\n    if (isDir) this._getWatchedDir(pp);\n\n    if (dirObj.has(base)) return;\n    dirObj.add(base);\n\n    if (!this.options.ignoreInitial || forceAdd === true) {\n      this._emit(isDir ? 'addDir' : 'add', pp, stats);\n    }\n  }.bind(this);\n\n  var wh = this._getWatchHelpers(path);\n\n  // evaluate what is at the path we're being asked to watch\n  fs[wh.statMethod](wh.watchPath, function(error, stats) {\n    if (this._handleError(error) || this._isIgnored(wh.watchPath, stats)) {\n      this._emitReady();\n      return this._emitReady();\n    }\n\n    if (stats.isDirectory()) {\n      // emit addDir unless this is a glob parent\n      if (!wh.globFilter) emitAdd(processPath(path), stats);\n\n      // don't recurse further if it would exceed depth setting\n      if (priorDepth && priorDepth > this.options.depth) return;\n\n      // scan the contents of the dir\n      readdirp({\n        root: wh.watchPath,\n        entryType: 'all',\n        fileFilter: wh.filterPath,\n        directoryFilter: wh.filterDir,\n        lstat: true,\n        depth: this.options.depth - (priorDepth || 0)\n      }).on('data', function(entry) {\n        // need to check filterPath on dirs b/c filterDir is less restrictive\n        if (entry.stat.isDirectory() && !wh.filterPath(entry)) return;\n\n        var joinedPath = sysPath.join(wh.watchPath, entry.path);\n        var fullPath = entry.fullPath;\n\n        if (wh.followSymlinks && entry.stat.isSymbolicLink()) {\n          // preserve the current depth here since it can't be derived from\n          // real paths past the symlink\n          var curDepth = this.options.depth === undefined ?\n            undefined : depth(joinedPath, sysPath.resolve(wh.watchPath)) + 1;\n\n          this._fsEventsSymlink(joinedPath, fullPath, processPath, curDepth);\n        } else {\n          emitAdd(joinedPath, entry.stat);\n        }\n      }.bind(this)).on('end', this._emitReady);\n    } else {\n      emitAdd(wh.watchPath, stats);\n      this._emitReady();\n    }\n  }.bind(this));\n\n  if (this.options.persistent) {\n    var initWatch = function(error, realPath) {\n      var closer = this._watchWithFsEvents(\n        wh.watchPath,\n        sysPath.resolve(realPath || wh.watchPath),\n        processPath,\n        wh.globFilter\n      );\n      if (closer) this._closers[path] = closer;\n    }.bind(this);\n\n    if (typeof transform === 'function') {\n      // realpath has already been resolved\n      initWatch();\n    } else {\n      fs.realpath(wh.watchPath, initWatch);\n    }\n  }\n};\n\nmodule.exports = FsEventsHandler;\nmodule.exports.canUse = canUse;\n"]}