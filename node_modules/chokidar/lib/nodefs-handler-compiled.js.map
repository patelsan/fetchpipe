{"version":3,"sources":["nodefs-handler.js"],"names":[],"mappings":"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","file":"nodefs-handler-compiled.js","sourcesContent":["'use strict';\n\nvar fs = require('fs');\nvar sysPath = require('path');\nvar readdirp = require('readdirp');\nvar isBinaryPath = require('is-binary-path');\n\n// fs.watch helpers\n\n// object to hold per-process fs.watch instances\n// (may be shared across chokidar FSWatcher instances)\nvar FsWatchInstances = Object.create(null);\n\n// Private function: Instantiates the fs.watch interface\n\n// * path       - string, path to be watched\n// * options    - object, options to be passed to fs.watch\n// * listener   - function, main event handler\n// * errHandler - function, handler which emits info about errors\n// * emitRaw    - function, handler which emits raw event data\n\n// Returns new fsevents instance\nfunction createFsWatchInstance(path, options, listener, errHandler, emitRaw) {\n  var handleEvent = function(rawEvent, evPath) {\n    listener(path);\n    emitRaw(rawEvent, evPath, {watchedPath: path});\n\n    // emit based on events occuring for files from a directory's watcher in\n    // case the file's watcher misses it (and rely on throttling to de-dupe)\n    if (evPath && path !== evPath) {\n      fsWatchBroadcast(\n        sysPath.resolve(path, evPath), 'listeners', sysPath.join(path, evPath)\n      );\n    }\n  };\n  try {\n    return fs.watch(path, options, handleEvent);\n  } catch (error) {\n    errHandler(error);\n  }\n}\n\n// Private function: Helper for passing fs.watch event data to a\n// collection of listeners\n\n// * fullPath   - string, absolute path bound to the fs.watch instance\n// * type       - string, listener type\n// * val[1..3]  - arguments to be passed to listeners\n\n// Returns nothing\nfunction fsWatchBroadcast(fullPath, type, val1, val2, val3) {\n  if (!FsWatchInstances[fullPath]) return;\n  FsWatchInstances[fullPath][type].forEach(function(listener) {\n    listener(val1, val2, val3);\n  });\n}\n\n// Private function: Instantiates the fs.watch interface or binds listeners\n// to an existing one covering the same file system entry\n\n// * path       - string, path to be watched\n// * fullPath   - string, absolute path\n// * options    - object, options to be passed to fs.watch\n// * handlers   - object, container for event listener functions\n\n// Returns close function\nfunction setFsWatchListener(path, fullPath, options, handlers) {\n  var listener = handlers.listener;\n  var errHandler = handlers.errHandler;\n  var rawEmitter = handlers.rawEmitter;\n  var container = FsWatchInstances[fullPath];\n  var watcher;\n  if (!options.persistent) {\n    watcher = createFsWatchInstance(\n      path, options, listener, errHandler, rawEmitter\n    );\n    return watcher.close.bind(watcher);\n  }\n  if (!container) {\n    watcher = createFsWatchInstance(\n      path,\n      options,\n      fsWatchBroadcast.bind(null, fullPath, 'listeners'),\n      errHandler, // no need to use broadcast here\n      fsWatchBroadcast.bind(null, fullPath, 'rawEmitters')\n    );\n    if (!watcher) return;\n    var broadcastErr = fsWatchBroadcast.bind(null, fullPath, 'errHandlers');\n    watcher.on('error', function(error) {\n      // Workaround for https://github.com/joyent/node/issues/4337\n      if (process.platform === 'win32' && error.code === 'EPERM') {\n        fs.open(path, 'r', function(err, fd) {\n          if (fd) fs.close(fd);\n          if (!err) broadcastErr(error);\n        });\n      } else {\n        broadcastErr(error);\n      }\n    });\n    container = FsWatchInstances[fullPath] = {\n      listeners: [listener],\n      errHandlers: [errHandler],\n      rawEmitters: [rawEmitter],\n      watcher: watcher\n    };\n  } else {\n    container.listeners.push(listener);\n    container.errHandlers.push(errHandler);\n    container.rawEmitters.push(rawEmitter);\n  }\n  var listenerIndex = container.listeners.length - 1;\n\n  // removes this instance's listeners and closes the underlying fs.watch\n  // instance if there are no more listeners left\n  return function close() {\n    delete container.listeners[listenerIndex];\n    delete container.errHandlers[listenerIndex];\n    delete container.rawEmitters[listenerIndex];\n    if (!Object.keys(container.listeners).length) {\n      container.watcher.close();\n      delete FsWatchInstances[fullPath];\n    }\n  };\n}\n\n// fs.watchFile helpers\n\n// object to hold per-process fs.watchFile instances\n// (may be shared across chokidar FSWatcher instances)\nvar FsWatchFileInstances = Object.create(null);\n\n// Private function: Instantiates the fs.watchFile interface or binds listeners\n// to an existing one covering the same file system entry\n\n// * path       - string, path to be watched\n// * fullPath   - string, absolute path\n// * options    - object, options to be passed to fs.watchFile\n// * handlers   - object, container for event listener functions\n\n// Returns close function\nfunction setFsWatchFileListener(path, fullPath, options, handlers) {\n  var listener = handlers.listener;\n  var rawEmitter = handlers.rawEmitter;\n  var container = FsWatchFileInstances[fullPath];\n  var listeners = [];\n  var rawEmitters = [];\n  if (\n    container && (\n      container.options.persistent < options.persistent ||\n      container.options.interval > options.interval\n    )\n  ) {\n    // \"Upgrade\" the watcher to persistence or a quicker interval.\n    // This creates some unlikely edge case issues if the user mixes\n    // settings in a very weird way, but solving for those cases\n    // doesn't seem worthwhile for the added complexity.\n    listeners = container.listeners;\n    rawEmitters = container.rawEmitters;\n    fs.unwatchFile(fullPath);\n    container = false;\n  }\n  if (!container) {\n    listeners.push(listener);\n    rawEmitters.push(rawEmitter);\n    container = FsWatchFileInstances[fullPath] = {\n      listeners: listeners,\n      rawEmitters: rawEmitters,\n      options: options,\n      watcher: fs.watchFile(fullPath, options, function(curr, prev) {\n        container.rawEmitters.forEach(function(rawEmitter) {\n          rawEmitter('change', fullPath, {curr: curr, prev: prev});\n        });\n        var currmtime = curr.mtime.getTime();\n        if (curr.size !== prev.size || currmtime > prev.mtime.getTime() || currmtime === 0) {\n          container.listeners.forEach(function(listener) {\n            listener(path, curr);\n          });\n        }\n      })\n    };\n  } else {\n    container.listeners.push(listener);\n    container.rawEmitters.push(rawEmitter);\n  }\n  var listenerIndex = container.listeners.length - 1;\n\n  // removes this instance's listeners and closes the underlying fs.watchFile\n  // instance if there are no more listeners left\n  return function close() {\n    delete container.listeners[listenerIndex];\n    delete container.rawEmitters[listenerIndex];\n    if (!Object.keys(container.listeners).length) {\n      fs.unwatchFile(fullPath);\n      delete FsWatchFileInstances[fullPath];\n    }\n  }\n}\n\n// fake constructor for attaching nodefs-specific prototype methods that\n// will be copied to FSWatcher's prototype\nfunction NodeFsHandler() {}\n\n// Private method: Watch file for changes with fs.watchFile or fs.watch.\n\n// * path     - string, path to file or directory.\n// * listener - function, to be executed on fs change.\n\n// Returns close function for the watcher instance\nNodeFsHandler.prototype._watchWithNodeFs =\nfunction(path, listener) {\n  var directory = sysPath.dirname(path);\n  var basename = sysPath.basename(path);\n  var parent = this._getWatchedDir(directory);\n  parent.add(basename);\n  var absolutePath = sysPath.resolve(path);\n  var options = {persistent: this.options.persistent};\n  if (!listener) listener = Function.prototype; // empty function\n\n  var closer;\n  if (this.options.usePolling) {\n    options.interval = this.enableBinaryInterval && isBinaryPath(basename) ?\n      this.options.binaryInterval : this.options.interval;\n    closer = setFsWatchFileListener(path, absolutePath, options, {\n      listener: listener,\n      rawEmitter: this.emit.bind(this, 'raw')\n    });\n  } else {\n    closer = setFsWatchListener(path, absolutePath, options, {\n      listener: listener,\n      errHandler: this._handleError.bind(this),\n      rawEmitter: this.emit.bind(this, 'raw')\n    });\n  }\n  return closer;\n};\n\n// Private method: Watch a file and emit add event if warranted\n\n// * file       - string, the file's path\n// * stats      - object, result of fs.stat\n// * initialAdd - boolean, was the file added at watch instantiation?\n// * callback   - function, called when done processing as a newly seen file\n\n// Returns close function for the watcher instance\nNodeFsHandler.prototype._handleFile =\nfunction(file, stats, initialAdd, callback) {\n  var dirname = sysPath.dirname(file);\n  var basename = sysPath.basename(file);\n  var parent = this._getWatchedDir(dirname);\n\n  // if the file is already being watched, do nothing\n  if (parent.has(basename)) return callback();\n\n  // kick off the watcher\n  var closer = this._watchWithNodeFs(file, function(path, newStats) {\n    if (!this._throttle('watch', file, 5)) return;\n    if (!newStats || newStats && newStats.mtime.getTime() === 0) {\n      fs.stat(file, function(error, newStats) {\n        // Fix issues where mtime is null but file is still present\n        if (error) {\n          this._remove(dirname, basename);\n        } else {\n          this._emit('change', file, newStats);\n        }\n      }.bind(this));\n    // add is about to be emitted if file not already tracked in parent\n    } else if (parent.has(basename)) {\n      this._emit('change', file, newStats);\n    }\n  }.bind(this));\n\n  // emit an add event if we're supposed to\n  if (!(initialAdd && this.options.ignoreInitial)) {\n    if (!this._throttle('add', file, 0)) return;\n    this._emit('add', file, stats);\n  }\n\n  if (callback) callback();\n  return closer;\n};\n\n// Private method: Handle symlinks encountered while reading a dir\n\n// * entry      - object, entry object returned by readdirp\n// * directory  - string, path of the directory being read\n// * path       - string, path of this item\n// * item       - string, basename of this item\n\n// Returns true if no more processing is needed for this entry.\nNodeFsHandler.prototype._handleSymlink =\nfunction(entry, directory, path, item) {\n  var full = entry.fullPath;\n  var dir = this._getWatchedDir(directory);\n\n  if (!this.options.followSymlinks) {\n    // watch symlink directly (don't follow) and detect changes\n    this._readyCount++;\n    fs.realpath(path, function(error, linkPath) {\n      if (dir.has(item)) {\n        if (this._symlinkPaths[full] !== linkPath) {\n          this._symlinkPaths[full] = linkPath;\n          this._emit('change', path, entry.stat);\n        }\n      } else {\n        dir.add(item);\n        this._symlinkPaths[full] = linkPath;\n        this._emit('add', path, entry.stat);\n      }\n      this._emitReady();\n    }.bind(this));\n    return true;\n  }\n\n  // don't follow the same symlink more than once\n  if (this._symlinkPaths[full]) return true;\n  else this._symlinkPaths[full] = true;\n}\n\n// Private method: Read directory to add / remove files from `@watched` list\n// and re-read it on change.\n\n// * dir        - string, fs path.\n// * stats      - object, result of fs.stat\n// * initialAdd - boolean, was the file added at watch instantiation?\n// * depth      - int, depth relative to user-supplied path\n// * target     - string, child path actually targeted for watch\n// * wh         - object, common watch helpers for this path\n// * callback   - function, called when dir scan is complete\n\n// Returns close function for the watcher instance\nNodeFsHandler.prototype._handleDir =\nfunction(dir, stats, initialAdd, depth, target, wh, callback) {\n  if (!(initialAdd && this.options.ignoreInitial) && !target && !wh.hasGlob) {\n    this._emit('addDir', dir, stats);\n  }\n\n  // ensure dir is tracked\n  this._getWatchedDir(sysPath.dirname(dir)).add(sysPath.basename(dir));\n  this._getWatchedDir(dir);\n\n  var read = function(directory, initialAdd, done) {\n    // Normalize the directory name on Windows\n    directory = sysPath.join(directory, '');\n\n    if (!wh.hasGlob) {\n      var throttler = this._throttle('readdir', directory, 1000);\n      if (!throttler) return;\n    }\n\n    var previous = this._getWatchedDir(wh.path);\n    var current = [];\n\n    readdirp({\n      root: directory,\n      entryType: 'all',\n      fileFilter: wh.filterPath,\n      directoryFilter: wh.filterDir,\n      depth: 0,\n      lstat: true\n    }).on('data', function(entry) {\n      var item = entry.path;\n      var path = sysPath.join(directory, item);\n      current.push(item);\n\n      if (entry.stat.isSymbolicLink() &&\n        this._handleSymlink(entry, directory, path, item)) return;\n\n      // Files that present in current directory snapshot\n      // but absent in previous are added to watch list and\n      // emit `add` event.\n      if (item === target || !target && !previous.has(item)) {\n        this._readyCount++;\n\n        // ensure relativeness of path is preserved in case of watcher reuse\n        path = sysPath.join(dir, sysPath.relative(dir, path));\n\n        this._addToNodeFs(path, initialAdd, wh, depth + 1);\n      }\n    }.bind(this)).on('end', function() {\n      if (throttler) throttler.clear();\n      if (done) done();\n\n      // Files that absent in current directory snapshot\n      // but present in previous emit `remove` event\n      // and are removed from @watched[directory].\n      previous.children().filter(function(item) {\n        return item !== directory &&\n          current.indexOf(item) === -1 &&\n          // in case of intersecting globs;\n          // a path may have been filtered out of this readdir, but\n          // shouldn't be removed because it matches a different glob\n          (!wh.hasGlob || wh.filterPath({\n            fullPath: sysPath.resolve(directory, item)\n          }));\n      }).forEach(function(item) {\n        this._remove(directory, item);\n      }, this);\n    }.bind(this)).on('error', this._handleError.bind(this));\n  }.bind(this);\n\n  if (this.options.depth == null || depth <= this.options.depth) {\n    if (!target) read(dir, initialAdd, callback);\n    var closer = this._watchWithNodeFs(dir, function(dirPath, stats) {\n      // if current directory is removed, do nothing\n      if (stats && stats.mtime.getTime() === 0) return;\n\n      read(dirPath, false);\n    });\n  } else {\n    callback();\n  }\n  return closer;\n};\n\n// Private method: Handle added file, directory, or glob pattern.\n// Delegates call to _handleFile / _handleDir after checks.\n\n// * path       - string, path to file or directory.\n// * initialAdd - boolean, was the file added at watch instantiation?\n// * depth      - int, depth relative to user-supplied path\n// * target     - string, child path actually targeted for watch\n// * callback   - function, indicates whether the path was found or not\n\n// Returns nothing\nNodeFsHandler.prototype._addToNodeFs =\nfunction(path, initialAdd, priorWh, depth, target, callback) {\n  if (!callback) callback = Function.prototype;\n  var ready = this._emitReady;\n  if (this._isIgnored(path) || this.closed) {\n    ready();\n    return callback(null, false);\n  }\n\n  var wh = this._getWatchHelpers(path, depth);\n  if (!wh.hasGlob && priorWh) {\n    wh.hasGlob = priorWh.hasGlob;\n    wh.filterPath = priorWh.filterPath;\n    wh.filterDir = priorWh.filterDir;\n  }\n\n  // evaluate what is at the path we're being asked to watch\n  fs[wh.statMethod](wh.watchPath, function(error, stats) {\n    if (this._handleError(error)) return callback(null, path);\n    if (this._isIgnored(wh.watchPath, stats)) {\n      ready();\n      return callback(null, false);\n    }\n\n    var initDir = function(dir, target) {\n      return this._handleDir(dir, stats, initialAdd, depth, target, wh, ready);\n    }.bind(this);\n\n    var closer;\n    if (stats.isDirectory()) {\n      closer = initDir(wh.watchPath, target);\n    } else if (stats.isSymbolicLink()) {\n      var parent = sysPath.dirname(wh.watchPath);\n      this._getWatchedDir(parent).add(wh.watchPath);\n      this._emit('add', wh.watchPath, stats);\n      closer = initDir(parent, path);\n\n      // preserve this symlink's target path\n      fs.realpath(path, function(error, targetPath) {\n        this._symlinkPaths[sysPath.resolve(path)] = targetPath;\n        ready();\n      }.bind(this));\n    } else {\n      closer = this._handleFile(wh.watchPath, stats, initialAdd, ready);\n    }\n\n    if (closer) this._closers[path] = closer;\n    callback(null, false);\n  }.bind(this));\n};\n\nmodule.exports = NodeFsHandler;\n"]}