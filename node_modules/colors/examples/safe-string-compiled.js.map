{"version":3,"sources":["safe-string.js"],"names":[],"mappings":";;AAAA,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;;AAEhC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC,CAAC;;AAErD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,qBAAqB,CAAC,CAAC,CAAC;;AAE5D,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC;;AAErD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC,CAAA;;AAE3D,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAA;;AAEzC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC;;AAElE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,CAAC;;AAGvE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;;AAE/H,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC,CAAC;;AAEhD,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,CAAC;;AAGhE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC,CAAC;AAC9D,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,kCAAkC,CAAC,CAAC,CAAA;AAC9D,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC,CAAC;;AAEnD,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAA;;;;;;;AAOvC,MAAM,CAAC,QAAQ,CAAC;AACd,OAAK,EAAE,SAAS;AAChB,OAAK,EAAE,MAAM;AACb,SAAO,EAAE,MAAM;AACf,QAAM,EAAE,MAAM;AACd,MAAI,EAAE,OAAO;AACb,MAAI,EAAE,MAAM;AACZ,MAAI,EAAE,MAAM;AACZ,MAAI,EAAE,QAAQ;AACd,OAAK,EAAE,MAAM;AACb,OAAK,EAAE,KAAK;CACb,CAAC,CAAC;;;AAGH,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC;;;AAG9C,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;;;AAG9C,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC;;;;;AAM9C,MAAM,CAAC,QAAQ,CAAC,SAAS,GAAG,+BAA+B,CAAC,CAAC;;;AAG7D,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC;;;AAG9C,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;;;AAG9C,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC","file":"safe-string-compiled.js","sourcesContent":["var colors = require('../safe');\n\nconsole.log(colors.yellow(\"First some yellow text\"));\n\nconsole.log(colors.yellow.underline(\"Underline that text\"));\n\nconsole.log(colors.red.bold(\"Make it bold and red\"));\n\nconsole.log(colors.rainbow(\"Double Raindows All Day Long\"))\n\nconsole.log(colors.trap(\"Drop the bass\"))\n\nconsole.log(colors.rainbow(colors.trap(\"DROP THE RAINBOW BASS\")));\n\nconsole.log(colors.bold.italic.underline.red('Chains are also cool.')); // styles not widely supported\n\n\nconsole.log(colors.green('So ') + colors.underline('are') + ' ' + colors.inverse('inverse') + colors.yellow.bold(' styles! ')); // styles not widely supported\n\nconsole.log(colors.zebra(\"Zebras are so fun!\"));\n\nconsole.log(\"This is \" + colors.strikethrough(\"not\") + \" fun.\");\n\n\nconsole.log(colors.black.bgWhite('Background color attack!'));\nconsole.log(colors.random('Use random styles on everything!'))\nconsole.log(colors.america('America, Heck Yeah!'));\n\nconsole.log('Setting themes is useful')\n\n//\n// Custom themes\n//\n//console.log('Generic logging theme as JSON'.green.bold.underline);\n// Load theme with JSON literal\ncolors.setTheme({\n  silly: 'rainbow',\n  input: 'grey',\n  verbose: 'cyan',\n  prompt: 'grey',\n  info: 'green',\n  data: 'grey',\n  help: 'cyan',\n  warn: 'yellow',\n  debug: 'blue',\n  error: 'red'\n});\n\n// outputs red text\nconsole.log(colors.error(\"this is an error\"));\n\n// outputs yellow text\nconsole.log(colors.warn(\"this is a warning\"));\n\n// outputs grey text\nconsole.log(colors.input(\"this is an input\"));\n\n\n// console.log('Generic logging theme as file'.green.bold.underline);\n\n// Load a theme from file\ncolors.setTheme(__dirname + '/../themes/generic-logging.js');\n\n// outputs red text\nconsole.log(colors.error(\"this is an error\"));\n\n// outputs yellow text\nconsole.log(colors.warn(\"this is a warning\"));\n\n// outputs grey text\nconsole.log(colors.input(\"this is an input\"));\n\n// console.log(colors.zalgo(\"Don't summon him\"))\n\n\n\n"]}