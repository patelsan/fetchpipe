{"version":3,"sources":["zalgo.js"],"names":[],"mappings":"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","file":"zalgo-compiled.js","sourcesContent":["// please no\nmodule['exports'] = function zalgo(text, options) {\n  text = text || \"   he is here   \";\n  var soul = {\n    \"up\" : [\n      '̍', '̎', '̄', '̅',\n      '̿', '̑', '̆', '̐',\n      '͒', '͗', '͑', '̇',\n      '̈', '̊', '͂', '̓',\n      '̈', '͊', '͋', '͌',\n      '̃', '̂', '̌', '͐',\n      '̀', '́', '̋', '̏',\n      '̒', '̓', '̔', '̽',\n      '̉', 'ͣ', 'ͤ', 'ͥ',\n      'ͦ', 'ͧ', 'ͨ', 'ͩ',\n      'ͪ', 'ͫ', 'ͬ', 'ͭ',\n      'ͮ', 'ͯ', '̾', '͛',\n      '͆', '̚'\n    ],\n    \"down\" : [\n      '̖', '̗', '̘', '̙',\n      '̜', '̝', '̞', '̟',\n      '̠', '̤', '̥', '̦',\n      '̩', '̪', '̫', '̬',\n      '̭', '̮', '̯', '̰',\n      '̱', '̲', '̳', '̹',\n      '̺', '̻', '̼', 'ͅ',\n      '͇', '͈', '͉', '͍',\n      '͎', '͓', '͔', '͕',\n      '͖', '͙', '͚', '̣'\n    ],\n    \"mid\" : [\n      '̕', '̛', '̀', '́',\n      '͘', '̡', '̢', '̧',\n      '̨', '̴', '̵', '̶',\n      '͜', '͝', '͞',\n      '͟', '͠', '͢', '̸',\n      '̷', '͡', ' ҉'\n    ]\n  },\n  all = [].concat(soul.up, soul.down, soul.mid),\n  zalgo = {};\n\n  function randomNumber(range) {\n    var r = Math.floor(Math.random() * range);\n    return r;\n  }\n\n  function is_char(character) {\n    var bool = false;\n    all.filter(function (i) {\n      bool = (i === character);\n    });\n    return bool;\n  }\n  \n\n  function heComes(text, options) {\n    var result = '', counts, l;\n    options = options || {};\n    options[\"up\"] =   typeof options[\"up\"]   !== 'undefined' ? options[\"up\"]   : true;\n    options[\"mid\"] =  typeof options[\"mid\"]  !== 'undefined' ? options[\"mid\"]  : true;\n    options[\"down\"] = typeof options[\"down\"] !== 'undefined' ? options[\"down\"] : true;\n    options[\"size\"] = typeof options[\"size\"] !== 'undefined' ? options[\"size\"] : \"maxi\";\n    text = text.split('');\n    for (l in text) {\n      if (is_char(l)) {\n        continue;\n      }\n      result = result + text[l];\n      counts = {\"up\" : 0, \"down\" : 0, \"mid\" : 0};\n      switch (options.size) {\n      case 'mini':\n        counts.up = randomNumber(8);\n        counts.mid = randomNumber(2);\n        counts.down = randomNumber(8);\n        break;\n      case 'maxi':\n        counts.up = randomNumber(16) + 3;\n        counts.mid = randomNumber(4) + 1;\n        counts.down = randomNumber(64) + 3;\n        break;\n      default:\n        counts.up = randomNumber(8) + 1;\n        counts.mid = randomNumber(6) / 2;\n        counts.down = randomNumber(8) + 1;\n        break;\n      }\n\n      var arr = [\"up\", \"mid\", \"down\"];\n      for (var d in arr) {\n        var index = arr[d];\n        for (var i = 0 ; i <= counts[index]; i++) {\n          if (options[index]) {\n            result = result + soul[index][randomNumber(soul[index].length)];\n          }\n        }\n      }\n    }\n    return result;\n  }\n  // don't summon him\n  return heComes(text, options);\n}\n"]}