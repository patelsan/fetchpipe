{"version":3,"sources":["extendStringPrototype.js"],"names":[],"mappings":"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","file":"extendStringPrototype-compiled.js","sourcesContent":["var colors = require('./colors');\n\nmodule['exports'] = function () {\n\n  //\n  // Extends prototype of native string object to allow for \"foo\".red syntax\n  //\n  var addProperty = function (color, func) {\n    String.prototype.__defineGetter__(color, func);\n  };\n\n  var sequencer = function sequencer (map, str) {\n      return function () {\n        var exploded = this.split(\"\"), i = 0;\n        exploded = exploded.map(map);\n        return exploded.join(\"\");\n      }\n  };\n\n  addProperty('strip', function () {\n    return colors.strip(this);\n  });\n\n  addProperty('stripColors', function () {\n    return colors.strip(this);\n  });\n\n  addProperty(\"trap\", function(){\n    return colors.trap(this);\n  });\n\n  addProperty(\"zalgo\", function(){\n    return colors.zalgo(this);\n  });\n\n  addProperty(\"zebra\", function(){\n    return colors.zebra(this);\n  });\n\n  addProperty(\"rainbow\", function(){\n    return colors.rainbow(this);\n  });\n\n  addProperty(\"random\", function(){\n    return colors.random(this);\n  });\n\n  addProperty(\"america\", function(){\n    return colors.america(this);\n  });\n\n  //\n  // Iterate through all default styles and colors\n  //\n  var x = Object.keys(colors.styles);\n  x.forEach(function (style) {\n    addProperty(style, function () {\n      return colors.stylize(this, style);\n    });\n  });\n\n  function applyTheme(theme) {\n    //\n    // Remark: This is a list of methods that exist\n    // on String that you should not overwrite.\n    //\n    var stringPrototypeBlacklist = [\n      '__defineGetter__', '__defineSetter__', '__lookupGetter__', '__lookupSetter__', 'charAt', 'constructor',\n      'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'toLocaleString', 'toString', 'valueOf', 'charCodeAt',\n      'indexOf', 'lastIndexof', 'length', 'localeCompare', 'match', 'replace', 'search', 'slice', 'split', 'substring',\n      'toLocaleLowerCase', 'toLocaleUpperCase', 'toLowerCase', 'toUpperCase', 'trim', 'trimLeft', 'trimRight'\n    ];\n\n    Object.keys(theme).forEach(function (prop) {\n      if (stringPrototypeBlacklist.indexOf(prop) !== -1) {\n        console.log('warn: '.red + ('String.prototype' + prop).magenta + ' is probably something you don\\'t want to override. Ignoring style name');\n      }\n      else {\n        if (typeof(theme[prop]) === 'string') {\n          colors[prop] = colors[theme[prop]];\n          addProperty(prop, function () {\n            return colors[theme[prop]](this);\n          });\n        }\n        else {\n          addProperty(prop, function () {\n            var ret = this;\n            for (var t = 0; t < theme[prop].length; t++) {\n              ret = colors[theme[prop][t]](ret);\n            }\n            return ret;\n          });\n        }\n      }\n    });\n  }\n\n  colors.setTheme = function (theme) {\n    if (typeof theme === 'string') {\n      try {\n        colors.themes[theme] = require(theme);\n        applyTheme(colors.themes[theme]);\n        return colors.themes[theme];\n      } catch (err) {\n        console.log(err);\n        return err;\n      }\n    } else {\n      applyTheme(theme);\n    }\n  };\n\n};"]}