{"version":3,"sources":["commoner.js"],"names":[],"mappings":"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","file":"commoner-compiled.js","sourcesContent":["var assert = require(\"assert\");\nvar path = require(\"path\");\nvar fs = require(\"fs\");\nvar Q = require(\"q\");\nvar iconv = require(\"iconv-lite\");\nvar ReadFileCache = require(\"./cache\").ReadFileCache;\nvar Watcher = require(\"./watcher\").Watcher;\nvar contextModule = require(\"./context\");\nvar BuildContext = contextModule.BuildContext;\nvar PreferredFileExtension = contextModule.PreferredFileExtension;\nvar ModuleReader = require(\"./reader\").ModuleReader;\nvar output = require(\"./output\");\nvar DirOutput = output.DirOutput;\nvar StdOutput = output.StdOutput;\nvar util = require(\"./util\");\nvar log = util.log;\nvar Ap = Array.prototype;\nvar each = Ap.forEach;\n\n// Better stack traces for promises.\nQ.longStackSupport = true;\n\nfunction Commoner() {\n    var self = this;\n    assert.ok(self instanceof Commoner);\n\n    Object.defineProperties(self, {\n        customVersion: { value: null, writable: true },\n        customOptions: { value: [] },\n        resolvers: { value: [] },\n        processors: { value: [] }\n    });\n}\n\nvar Cp = Commoner.prototype;\n\nCp.version = function(version) {\n    this.customVersion = version;\n    return this; // For chaining.\n};\n\n// Add custom command line options\nCp.option = function() {\n    this.customOptions.push(Ap.slice.call(arguments));\n    return this; // For chaining.\n};\n\n// A resolver is a function that takes a module identifier and returns\n// the unmodified source of the corresponding module, either as a string\n// or as a promise for a string.\nCp.resolve = function() {\n    each.call(arguments, function(resolver) {\n        assert.strictEqual(typeof resolver, \"function\");\n        this.resolvers.push(resolver);\n    }, this);\n\n    return this; // For chaining.\n};\n\n// A processor is a function that takes a module identifier and a string\n// representing the source of the module and returns a modified version of\n// the source, either as a string or as a promise for a string.\nCp.process = function(processor) {\n    each.call(arguments, function(processor) {\n        assert.strictEqual(typeof processor, \"function\");\n        this.processors.push(processor);\n    }, this);\n\n    return this; // For chaining.\n};\n\nCp.buildP = function(options, roots) {\n    var self = this;\n    var sourceDir = options.sourceDir;\n    var outputDir = options.outputDir;\n    var readFileCache = new ReadFileCache(sourceDir, options.sourceCharset);\n    var waiting = 0;\n    var output = outputDir\n        ? new DirOutput(outputDir)\n        : new StdOutput;\n\n    if (self.watch) {\n        new Watcher(readFileCache).on(\"changed\", function(file) {\n            log.err(file + \" changed; rebuilding...\", \"yellow\");\n            rebuild();\n        });\n    }\n\n    function outputModules(modules) {\n        // Note that output.outputModules comes pre-bound.\n        modules.forEach(output.outputModule);\n        return modules;\n    }\n\n    function finish(result) {\n        rebuild.ing = false;\n\n        if (waiting > 0) {\n            waiting = 0;\n            process.nextTick(rebuild);\n        }\n\n        return result;\n    }\n\n    function rebuild() {\n        if (rebuild.ing) {\n            waiting += 1;\n            return;\n        }\n\n        rebuild.ing = true;\n\n        var context = new BuildContext(options, readFileCache);\n\n        if (self.preferredFileExtension)\n            context.setPreferredFileExtension(\n                self.preferredFileExtension);\n\n        context.setCacheDirectory(self.cacheDir);\n\n        context.setIgnoreDependencies(self.ignoreDependencies);\n\n        context.setRelativize(self.relativize);\n\n        context.setUseProvidesModule(self.useProvidesModule);\n\n        return new ModuleReader(\n            context,\n            self.resolvers,\n            self.processors\n        ).readMultiP(context.expandIdsOrGlobsP(roots))\n            .then(context.ignoreDependencies ? pass : collectDepsP)\n            .then(outputModules)\n            .then(outputDir ? printModuleIds : pass)\n            .then(finish, function(err) {\n                log.err(err.stack);\n\n                if (!self.watch) {\n                    // If we're not building with --watch, throw the error\n                    // so that cliBuildP can call process.exit(-1).\n                    throw err;\n                }\n\n                finish();\n            });\n    }\n\n    return (\n      // If outputDir is falsy, we can't (and don't need to) mkdirP it.\n      outputDir ? util.mkdirP : Q\n    )(outputDir).then(rebuild);\n};\n\nfunction pass(modules) {\n    return modules;\n}\n\nfunction collectDepsP(rootModules) {\n    var modules = [];\n    var seenIds = {};\n\n    function traverse(module) {\n        if (seenIds.hasOwnProperty(module.id))\n            return Q(modules);\n        seenIds[module.id] = true;\n\n        return module.getRequiredP().then(function(reqs) {\n            return Q.all(reqs.map(traverse));\n        }).then(function() {\n            modules.push(module);\n            return modules;\n        });\n    }\n\n    return Q.all(rootModules.map(traverse)).then(\n        function() { return modules });\n}\n\nfunction printModuleIds(modules) {\n    log.out(JSON.stringify(modules.map(function(module) {\n        return module.id;\n    })));\n\n    return modules;\n}\n\nCp.forceResolve = function(forceId, source) {\n    this.resolvers.unshift(function(id) {\n        if (id === forceId)\n            return source;\n    });\n};\n\nCp.cliBuildP = function() {\n    var version = this.customVersion || require(\"../package.json\").version;\n    return Q.spread([this, version], cliBuildP);\n};\n\nfunction cliBuildP(commoner, version) {\n    var options = require(\"commander\");\n    var workingDir = process.cwd();\n    var sourceDir = workingDir;\n    var outputDir = null;\n    var roots;\n\n    options.version(version)\n        .usage(\"[options] <source directory> <output directory> [<module ID> [<module ID> ...]]\")\n        .option(\"-c, --config [file]\", \"JSON configuration file (no file or - means STDIN)\")\n        .option(\"-w, --watch\", \"Continually rebuild\")\n        .option(\"-x, --extension <js | coffee | ...>\",\n                \"File extension to assume when resolving module identifiers\")\n        .option(\"--relativize\", \"Rewrite all module identifiers to be relative\")\n        .option(\"--follow-requires\", \"Scan modules for required dependencies\")\n        .option(\"--use-provides-module\", \"Respect @providesModules pragma in files\")\n        .option(\"--cache-dir <directory>\", \"Alternate directory to use for disk cache\")\n        .option(\"--no-cache-dir\", \"Disable the disk cache\")\n        .option(\"--source-charset <utf8 | win1252 | ...>\",\n                \"Charset of source (default: utf8)\")\n        .option(\"--output-charset <utf8 | win1252 | ...>\",\n                \"Charset of output (default: utf8)\");\n\n    commoner.customOptions.forEach(function(customOption) {\n        options.option.apply(options, customOption);\n    });\n\n    options.parse(process.argv.slice(0));\n\n    var pfe = new PreferredFileExtension(options.extension || \"js\");\n\n    // TODO Decide whether passing options to buildP via instance\n    // variables is preferable to passing them as arguments.\n    commoner.preferredFileExtension = pfe;\n    commoner.watch = options.watch;\n    commoner.ignoreDependencies = !options.followRequires;\n    commoner.relativize = options.relativize;\n    commoner.useProvidesModule = options.useProvidesModule;\n    commoner.sourceCharset = normalizeCharset(options.sourceCharset);\n    commoner.outputCharset = normalizeCharset(options.outputCharset);\n\n    function fileToId(file) {\n        file = absolutePath(workingDir, file);\n        assert.ok(fs.statSync(file).isFile(), file);\n        return pfe.trim(path.relative(sourceDir, file));\n    }\n\n    var args = options.args.slice(0);\n    var argc = args.length;\n    if (argc === 0) {\n        if (options.config === true) {\n            log.err(\"Cannot read --config from STDIN when reading \" +\n                    \"source from STDIN\");\n            process.exit(-1);\n        }\n\n        sourceDir = workingDir;\n        outputDir = null;\n        roots = [\"<stdin>\"];\n        commoner.forceResolve(\"<stdin>\", util.readFromStdinP());\n\n        // Ignore dependencies because we wouldn't know how to find them.\n        commoner.ignoreDependencies = true;\n\n    } else {\n        var first = absolutePath(workingDir, args[0]);\n        var stats = fs.statSync(first);\n\n        if (argc === 1) {\n            var firstId = fileToId(first);\n            sourceDir = workingDir;\n            outputDir = null;\n            roots = [firstId];\n            commoner.forceResolve(\n                firstId,\n                util.readFileP(first, commoner.sourceCharset)\n            );\n\n            // Ignore dependencies because we wouldn't know how to find them.\n            commoner.ignoreDependencies = true;\n\n        } else if (stats.isDirectory(first)) {\n            sourceDir = first;\n            outputDir = absolutePath(workingDir, args[1]);\n            roots = args.slice(2);\n            if (roots.length === 0)\n                roots.push(commoner.preferredFileExtension.glob());\n\n        } else {\n            options.help();\n            process.exit(-1);\n        }\n    }\n\n    commoner.cacheDir = null;\n    if (options.cacheDir === false) {\n        // Received the --no-cache-dir option, so disable the disk cache.\n    } else if (typeof options.cacheDir === \"string\") {\n        commoner.cacheDir = absolutePath(workingDir, options.cacheDir);\n    } else if (outputDir) {\n        // The default cache directory lives inside the output directory.\n        commoner.cacheDir = path.join(outputDir, \".module-cache\");\n    }\n\n    var promise = getConfigP(\n        workingDir,\n        options.config\n    ).then(function(config) {\n        var cleanOptions = {};\n\n        options.options.forEach(function(option) {\n            var name = util.camelize(option.name());\n            if (options.hasOwnProperty(name)) {\n                cleanOptions[name] = options[name];\n            }\n        });\n\n        cleanOptions.version = version;\n        cleanOptions.config = config;\n        cleanOptions.sourceDir = sourceDir;\n        cleanOptions.outputDir = outputDir;\n        cleanOptions.sourceCharset = commoner.sourceCharset;\n        cleanOptions.outputCharset = commoner.outputCharset;\n\n        return commoner.buildP(cleanOptions, roots);\n    });\n\n    if (!commoner.watch) {\n        // If we're building from the command line without --watch, any\n        // build errors should immediately terminate the process with a\n        // non-zero error code.\n        promise = promise.catch(function(err) {\n            log.err(err.stack);\n            process.exit(-1);\n        });\n    }\n\n    return promise;\n}\n\nfunction normalizeCharset(charset) {\n    charset = charset\n        && charset.replace(/[- ]/g, \"\").toLowerCase()\n        || \"utf8\";\n\n    assert.ok(\n        iconv.encodingExists(charset),\n        \"Unrecognized charset: \" + charset\n    );\n\n    return charset;\n}\n\nfunction absolutePath(workingDir, pathToJoin) {\n    if (pathToJoin) {\n        workingDir = path.normalize(workingDir);\n        pathToJoin = path.normalize(pathToJoin);\n        // TODO: use path.isAbsolute when Node < 0.10 is unsupported\n        if (path.resolve(pathToJoin) !== pathToJoin) {\n            pathToJoin = path.join(workingDir, pathToJoin);\n        }\n    }\n    return pathToJoin;\n}\n\nfunction getConfigP(workingDir, configFile) {\n    if (typeof configFile === \"undefined\")\n        return Q({}); // Empty config.\n\n    if (configFile === true || // --config is present but has no argument\n        configFile === \"<stdin>\" ||\n        configFile === \"-\" ||\n        configFile === path.sep + path.join(\"dev\", \"stdin\")) {\n        return util.readJsonFromStdinP(\n            1000, // Time limit in milliseconds before warning displayed.\n            \"Expecting configuration from STDIN (pass --config <file> \" +\n                \"if stuck here)...\",\n            \"yellow\"\n        );\n    }\n\n    return util.readJsonFileP(absolutePath(workingDir, configFile));\n}\n\nexports.Commoner = Commoner;\n"]}