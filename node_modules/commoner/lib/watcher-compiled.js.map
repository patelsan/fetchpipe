{"version":3,"sources":["watcher.js"],"names":[],"mappings":"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","file":"watcher-compiled.js","sourcesContent":["var assert = require(\"assert\");\nvar path = require(\"path\");\nvar fs = require(\"graceful-fs\");\nvar spawn = require(\"child_process\").spawn;\nvar Q = require(\"q\");\nvar EventEmitter = require(\"events\").EventEmitter;\nvar ReadFileCache = require(\"./cache\").ReadFileCache;\nvar util = require(\"./util\");\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nfunction Watcher(readFileCache, persistent) {\n    assert.ok(this instanceof Watcher);\n    assert.ok(this instanceof EventEmitter);\n    assert.ok(readFileCache instanceof ReadFileCache);\n\n    // During tests (and only during tests), persistent === false so that\n    // the test suite can actually finish and exit.\n    if (typeof persistent === \"undefined\") {\n        persistent = true;\n    }\n\n    EventEmitter.call(this);\n\n    var self = this;\n    var sourceDir = readFileCache.sourceDir;\n    var dirWatcher = new DirWatcher(sourceDir, persistent);\n\n    Object.defineProperties(self, {\n        sourceDir: { value: sourceDir },\n        readFileCache: { value: readFileCache },\n        dirWatcher: { value: dirWatcher }\n    });\n\n    // Watch everything the readFileCache already knows about, and any new\n    // files added in the future.\n    readFileCache.subscribe(function(relativePath) {\n        self.watch(relativePath);\n    });\n\n    readFileCache.on(\"changed\", function(relativePath) {\n        self.emit(\"changed\", relativePath);\n    });\n\n    function handleDirEvent(event, relativePath) {\n        if (self.dirWatcher.ready) {\n            self.getFileHandler(relativePath)(event);\n        }\n    }\n\n    dirWatcher.on(\"added\", function(relativePath) {\n        handleDirEvent(\"added\", relativePath);\n    }).on(\"deleted\", function(relativePath) {\n        handleDirEvent(\"deleted\", relativePath);\n    }).on(\"changed\", function(relativePath) {\n        handleDirEvent(\"changed\", relativePath);\n    });\n}\n\nutil.inherits(Watcher, EventEmitter);\nvar Wp = Watcher.prototype;\n\nWp.watch = function(relativePath) {\n    this.dirWatcher.add(path.dirname(path.join(\n        this.sourceDir, relativePath)));\n};\n\nWp.readFileP = function(relativePath) {\n    return this.readFileCache.readFileP(relativePath);\n};\n\nWp.noCacheReadFileP = function(relativePath) {\n    return this.readFileCache.noCacheReadFileP(relativePath);\n};\n\nWp.getFileHandler = util.cachedMethod(function(relativePath) {\n    var self = this;\n    return function handler(event) {\n        self.readFileCache.reportPossiblyChanged(relativePath);\n    };\n});\n\nfunction orNull(err) {\n    return null;\n}\n\nWp.close = function() {\n    this.dirWatcher.close();\n};\n\n/**\n * DirWatcher code adapted from Jeffrey Lin's original implementation:\n * https://github.com/jeffreylin/jsx_transformer_fun/blob/master/dirWatcher.js\n *\n * Invariant: this only watches the dir inode, not the actual path.\n * That means the dir can't be renamed and swapped with another dir.\n */\nfunction DirWatcher(inputPath, persistent) {\n    assert.ok(this instanceof DirWatcher);\n\n    var self = this;\n    var absPath = path.resolve(inputPath);\n\n    if (!fs.statSync(absPath).isDirectory()) {\n        throw new Error(inputPath + \"is not a directory!\");\n    }\n\n    EventEmitter.call(self);\n\n    self.ready = false;\n    self.on(\"ready\", function(){\n        self.ready = true;\n    });\n\n    Object.defineProperties(self, {\n        // Map of absDirPaths to fs.FSWatcher objects from fs.watch().\n        watchers: { value: {} },\n        dirContents: { value: {} },\n        rootPath: { value: absPath },\n        persistent: { value: !!persistent }\n    });\n\n    process.nextTick(function() {\n        self.add(absPath);\n        self.emit(\"ready\");\n    });\n}\n\nutil.inherits(DirWatcher, EventEmitter);\nvar DWp = DirWatcher.prototype;\n\nDWp.add = function(absDirPath) {\n    var self = this;\n    if (hasOwn.call(self.watchers, absDirPath)) {\n        return;\n    }\n\n    self.watchers[absDirPath] = fs.watch(absDirPath, {\n        persistent: this.persistent\n    }).on(\"change\", function(event, filename) {\n        self.updateDirContents(absDirPath, event, filename);\n    });\n\n    // Update internal dir contents.\n    self.updateDirContents(absDirPath);\n\n    // Since we've never seen this path before, recursively add child\n    // directories of this path.  TODO: Don't do fs.readdirSync on the\n    // same dir twice in a row.  We already do an fs.statSync in\n    // this.updateDirContents() and we're just going to do another one\n    // here...\n    fs.readdirSync(absDirPath).forEach(function(filename) {\n        var filepath = path.join(absDirPath, filename);\n\n        // Look for directories.\n        if (fs.statSync(filepath).isDirectory()) {\n            self.add(filepath);\n        }\n    });\n};\n\nDWp.updateDirContents = function(absDirPath, event, fsWatchReportedFilename) {\n    var self = this;\n\n    if (!hasOwn.call(self.dirContents, absDirPath)) {\n        self.dirContents[absDirPath] = [];\n    }\n\n    var oldContents = self.dirContents[absDirPath];\n    var newContents = fs.readdirSync(absDirPath);\n\n    var deleted = {};\n    var added = {};\n\n    oldContents.forEach(function(filename) {\n        deleted[filename] = true;\n    });\n\n    newContents.forEach(function(filename) {\n        if (hasOwn.call(deleted, filename)) {\n            delete deleted[filename];\n        } else {\n            added[filename] = true;\n        }\n    });\n\n    var deletedNames = Object.keys(deleted);\n    deletedNames.forEach(function(filename) {\n        self.emit(\n            \"deleted\",\n            path.relative(\n                self.rootPath,\n                path.join(absDirPath, filename)\n            )\n        );\n    });\n\n    var addedNames = Object.keys(added);\n    addedNames.forEach(function(filename) {\n        self.emit(\n            \"added\",\n            path.relative(\n                self.rootPath,\n                path.join(absDirPath, filename)\n            )\n        );\n    });\n\n    // So changed is not deleted or added?\n    if (fsWatchReportedFilename &&\n        !hasOwn.call(deleted, fsWatchReportedFilename) &&\n        !hasOwn.call(added, fsWatchReportedFilename))\n    {\n        self.emit(\n            \"changed\",\n            path.relative(\n                self.rootPath,\n                path.join(absDirPath, fsWatchReportedFilename)\n            )\n        );\n    }\n\n    // If any of the things removed were directories, remove their watchers.\n    // If a dir was moved, hopefully two changed events fired?\n    //  1) event in dir where it was removed\n    //  2) event in dir where it was moved to (added)\n    deletedNames.forEach(function(filename) {\n        var filepath = path.join(absDirPath, filename);\n        delete self.dirContents[filepath];\n        delete self.watchers[filepath];\n    });\n\n    // if any of the things added were directories, recursively deal with them\n    addedNames.forEach(function(filename) {\n        var filepath = path.join(absDirPath, filename);\n        if (fs.existsSync(filepath) &&\n            fs.statSync(filepath).isDirectory())\n        {\n            self.add(filepath);\n            // mighttttttt need a self.updateDirContents() here in case\n            // we're somehow adding a path that replaces another one...?\n        }\n    });\n\n    // Update state of internal dir contents.\n    self.dirContents[absDirPath] = newContents;\n};\n\nDWp.close = function() {\n    var watchers = this.watchers;\n    Object.keys(watchers).forEach(function(filename) {\n        watchers[filename].close();\n    });\n};\n\nexports.Watcher = Watcher;\n"]}