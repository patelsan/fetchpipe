{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["/*!\n * connect\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('connect:dispatcher');\nvar EventEmitter = require('events').EventEmitter;\nvar finalhandler = require('finalhandler');\nvar http = require('http');\nvar merge = require('utils-merge');\nvar parseUrl = require('parseurl');\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = createServer;\n\n/**\n * Module variables.\n * @private\n */\n\nvar env = process.env.NODE_ENV || 'development';\nvar proto = {};\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function'\n  ? setImmediate\n  : function(fn){ process.nextTick(fn.bind.apply(fn, arguments)) }\n\n/**\n * Create a new connect server.\n *\n * @return {function}\n * @public\n */\n\nfunction createServer() {\n  function app(req, res, next){ app.handle(req, res, next); }\n  merge(app, proto);\n  merge(app, EventEmitter.prototype);\n  app.route = '/';\n  app.stack = [];\n  return app;\n}\n\n/**\n * Utilize the given middleware `handle` to the given `route`,\n * defaulting to _/_. This \"route\" is the mount-point for the\n * middleware, when given a value other than _/_ the middleware\n * is only effective when that segment is present in the request's\n * pathname.\n *\n * For example if we were to mount a function at _/admin_, it would\n * be invoked on _/admin_, and _/admin/settings_, however it would\n * not be invoked for _/_, or _/posts_.\n *\n * @param {String|Function|Server} route, callback or server\n * @param {Function|Server} callback or server\n * @return {Server} for chaining\n * @public\n */\n\nproto.use = function use(route, fn) {\n  var handle = fn;\n  var path = route;\n\n  // default route to '/'\n  if (typeof route !== 'string') {\n    handle = route;\n    path = '/';\n  }\n\n  // wrap sub-apps\n  if (typeof handle.handle === 'function') {\n    var server = handle;\n    server.route = path;\n    handle = function (req, res, next) {\n      server.handle(req, res, next);\n    };\n  }\n\n  // wrap vanilla http.Servers\n  if (handle instanceof http.Server) {\n    handle = handle.listeners('request')[0];\n  }\n\n  // strip trailing slash\n  if (path[path.length - 1] === '/') {\n    path = path.slice(0, -1);\n  }\n\n  // add the middleware\n  debug('use %s %s', path || '/', handle.name || 'anonymous');\n  this.stack.push({ route: path, handle: handle });\n\n  return this;\n};\n\n/**\n * Handle server requests, punting them down\n * the middleware stack.\n *\n * @private\n */\n\nproto.handle = function handle(req, res, out) {\n  var index = 0;\n  var protohost = getProtohost(req.url) || '';\n  var removed = '';\n  var slashAdded = false;\n  var stack = this.stack;\n\n  // final function handler\n  var done = out || finalhandler(req, res, {\n    env: env,\n    onerror: logerror\n  });\n\n  // store the original URL\n  req.originalUrl = req.originalUrl || req.url;\n\n  function next(err) {\n    if (slashAdded) {\n      req.url = req.url.substr(1);\n      slashAdded = false;\n    }\n\n    if (removed.length !== 0) {\n      req.url = protohost + removed + req.url.substr(protohost.length);\n      removed = '';\n    }\n\n    // next callback\n    var layer = stack[index++];\n\n    // all done\n    if (!layer) {\n      defer(done, err);\n      return;\n    }\n\n    // route data\n    var path = parseUrl(req).pathname || '/';\n    var route = layer.route;\n\n    // skip this layer if the route doesn't match\n    if (path.toLowerCase().substr(0, route.length) !== route.toLowerCase()) {\n      return next(err);\n    }\n\n    // skip if route match does not border \"/\", \".\", or end\n    var c = path[route.length];\n    if (c !== undefined && '/' !== c && '.' !== c) {\n      return next(err);\n    }\n\n    // trim off the part of the url that matches the route\n    if (route.length !== 0 && route !== '/') {\n      removed = route;\n      req.url = protohost + req.url.substr(protohost.length + removed.length);\n\n      // ensure leading slash\n      if (!protohost && req.url[0] !== '/') {\n        req.url = '/' + req.url;\n        slashAdded = true;\n      }\n    }\n\n    // call the layer handle\n    call(layer.handle, route, err, req, res, next);\n  }\n\n  next();\n};\n\n/**\n * Listen for connections.\n *\n * This method takes the same arguments\n * as node's `http.Server#listen()`.\n *\n * HTTP and HTTPS:\n *\n * If you run your application both as HTTP\n * and HTTPS you may wrap them individually,\n * since your Connect \"server\" is really just\n * a JavaScript `Function`.\n *\n *      var connect = require('connect')\n *        , http = require('http')\n *        , https = require('https');\n *\n *      var app = connect();\n *\n *      http.createServer(app).listen(80);\n *      https.createServer(options, app).listen(443);\n *\n * @return {http.Server}\n * @api public\n */\n\nproto.listen = function listen() {\n  var server = http.createServer(this);\n  return server.listen.apply(server, arguments);\n};\n\n/**\n * Invoke a route handle.\n * @private\n */\n\nfunction call(handle, route, err, req, res, next) {\n  var arity = handle.length;\n  var error = err;\n  var hasError = Boolean(err);\n\n  debug('%s %s : %s', handle.name || '<anonymous>', route, req.originalUrl);\n\n  try {\n    if (hasError && arity === 4) {\n      // error-handling middleware\n      handle(err, req, res, next);\n      return;\n    } else if (!hasError && arity < 4) {\n      // request-handling middleware\n      handle(req, res, next);\n      return;\n    }\n  } catch (e) {\n    // replace the error\n    error = e;\n  }\n\n  // continue\n  next(error);\n}\n\n/**\n * Log error using console.error.\n *\n * @param {Error} err\n * @private\n */\n\nfunction logerror(err) {\n  if (env !== 'test') console.error(err.stack || err.toString());\n}\n\n/**\n * Get get protocol + host for a URL.\n *\n * @param {string} url\n * @private\n */\n\nfunction getProtohost(url) {\n  if (url.length === 0 || url[0] === '/') {\n    return undefined;\n  }\n\n  var searchIndex = url.indexOf('?');\n  var pathLength = searchIndex !== -1\n    ? searchIndex\n    : url.length;\n  var fqdnIndex = url.substr(0, pathLength).indexOf('://');\n\n  return fqdnIndex !== -1\n    ? url.substr(0, url.indexOf('/', 3 + fqdnIndex))\n    : undefined;\n}\n"]}