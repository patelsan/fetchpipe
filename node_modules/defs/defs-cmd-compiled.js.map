{"version":3,"sources":["defs-cmd.js"],"names":[],"mappings":"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","file":"defs-cmd-compiled.js","sourcesContent":["\"use strict\";\n\nconst fs = require(\"fs\");\nconst fmt = require(\"simple-fmt\");\nconst tryor = require(\"tryor\");\nconst defs = require(\"./defs-main\");\nconst version = require(\"./package.json\").version;\nconst yargs = require(\"yargs\")\n    .options(\"config\", {});\nconst argv = yargs.argv;\n\nif (!argv._.length) {\n    const usage = [\n        \"defs v\" + version + \"\",\n        \"\",\n        \"Usage: defs OPTIONS <file>\",\n        \"\",\n        \"Options: \",\n        \"  --config  use specified defs-config.js instead of searching for it\",\n    ].join(\"\\n\");\n    console.error(usage);\n    process.exit(-1);\n}\nconst filename = argv._[0];\n\nif (!fs.existsSync(filename)) {\n    console.error(\"error: file not found <%s>\", filename);\n    process.exit(-1);\n}\n\nconst src = String(fs.readFileSync(filename));\n\nconst config = findAndReadConfig();\n\nconst ret = defs(src, config);\nif (ret.errors) {\n    process.stderr.write(ret.errors.join(\"\\n\"));\n    process.stderr.write(\"\\n\");\n    process.exit(-1);\n}\n\nif (config.stats) {\n    process.stdout.write(ret.stats.toString());\n    process.exit(0);\n}\nif (ret.ast) {\n    process.stdout.write(JSON.stringify(ret.ast, null, 4));\n}\nif (ret.src) {\n    process.stdout.write(ret.src);\n}\n\nfunction findAndReadConfig() {\n    if (argv.config) {\n        const config = tryor(function() { return String(fs.readFileSync(argv.config)) }, null);\n        if (!config) {\n            console.error(\"error: config file not found <%s>\", argv.config);\n            process.exit(-1);\n        }\n        const json = tryor(function() { return JSON.parse(config) }, null);\n        if (!json) {\n            console.error(\"error: config file is not valid JSON <%s>\", argv.config);\n            process.exit(-1);\n        }\n        return json;\n    }\n\n    let path = \"\";\n    let filename = \"defs-config.json\";\n    let filenamePath = null;\n\n    while (fs.existsSync(path || \".\")) {\n        filenamePath = path + filename;\n        if (fs.existsSync(filenamePath)) {\n            const config = tryor(function() {\n                return JSON.parse(String(fs.readFileSync(filenamePath)));\n            }, null);\n            if (config === null) {\n                console.error(\"error: config file is not valid JSON <%s>\", filenamePath);\n                process.exit(-1);\n            }\n            return config;\n        }\n\n        path = \"../\" + path;\n    }\n\n    return {};\n}"]}