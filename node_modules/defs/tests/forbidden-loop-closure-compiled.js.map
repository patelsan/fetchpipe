{"version":3,"sources":["forbidden-loop-closure.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AACb,IAAI,GAAG,GAAG,EAAE,CAAC;;;;;;;;;;sBASJ,CAAC;AACN,OAAG,CAAC,IAAI,CAAC,YAAW;AAAE,eAAO,CAAC,CAAC;KAAE,CAAC,CAAC;;;AADvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;UAAnB,CAAC;CAET;;uBACW,CAAC,EAAJ,EAAC;AACN,OAAG,CAAC,IAAI,CAAC,YAAW;AAAE,eAAO,CAAC,CAAC;KAAE,CAAC,CAAC;;;AADvC,KAAK,IAAI,EAAC,YAAA,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;WAAnB,CAAC,EAAJ,EAAC;CAET;;;;;;;uBAMQ,CAAC;AAAmB,KAAC,YAAU;AACpC,YAAI,CAAC,GAAG,CAAC,CAAC;AACV,WAAG,CAAC,IAAI,CAAC,YAAW;AAAE,mBAAO,CAAC,CAAC;SAAE,CAAC,CAAC;KACtC,CAAA,CAAE,IAAI,WAAM,CAAC;;;AAHd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;WAAnB,CAAC;CAGK;;;AAGf,CAAC,YAAW;2BACC,CAAC;AACN,YAAI,CAAC,GAAG,CAAC,CAAC;AACV;eAAO,CAAC;UAAC;AACT,WAAG,CAAC,IAAI,CAAC,YAAW;AAAE,mBAAO,CAAC,CAAC;SAAE,CAAC,CAAC;;;AAHvC,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;2BAAnB,CAAC;;;KAIT;CACJ,CAAA,EAAG,CAAC;;;;uBAGI,CAAC;AACN,QAAI,CAAC,GAAG,CAAC,CAAC;AACV,mBAAM;AACN,OAAG,CAAC,IAAI,CAAC,YAAW;AAAE,eAAO,CAAC,CAAC;KAAE,CAAC,CAAC;;;AAHvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;uBAAnB,CAAC;;2BAEN,MAAM;CAET;;;;uBAGQ,CAAC;AACN,QAAI,CAAC,GAAG,CAAC,CAAC;AACV,sBAAS;AACT,OAAG,CAAC,IAAI,CAAC,YAAW;AAAE,eAAO,CAAC,CAAC;KAAE,CAAC,CAAC;;;AAHvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;uBAAnB,CAAC;;8BAEN,SAAS;CAEZ;;;;;uBAIQ,CAAC;AACN,QAAI,CAAC,GAAG,CAAC,CAAC;AACV,eAAU,CAAC,CAAC,CAAC;AACb,OAAG,CAAC,IAAI,CAAC,YAAW;AAAE,eAAO,CAAC,CAAC;KAAE,CAAC,CAAC;;;AAHvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;WAAnB,CAAC;CAIT;;;;uBAGQ,CAAC;AACN,QAAI,CAAC,GAAG,CAAC,CAAC;AACN,KAAC,GAAG,CAAC;;AACT,OAAG,CAAC,IAAI,CAAC,YAAW;AAAE,eAAO,CAAC,CAAC;KAAE,CAAC,CAAC;;;AAHvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QAEpB,CAAC;;WAFA,CAAC;CAIT;;;;AAID,GAAG,CAAC,OAAO,CAAC,UAAS,CAAC,EAAE;AACpB,WAAO,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;CACpB,CAAC,CAAC","file":"forbidden-loop-closure-compiled.js","sourcesContent":["\"use strict\";\nvar arr = [];\n\n// fresh x per iteration but semantics not determined yet\n// in ES6 spec draft (transfer in particular). Also inconsistent\n// between VM implementations.\n// once ES6 nails down the semantics (and VM's catch up) we'll\n// revisit\n// note v8 bug https://code.google.com/p/v8/issues/detail?id=2560\n// also see other/v8-bug.js\nfor (let x = 0; x < 3; x++) {\n    arr.push(function() { return x; });\n}\nfor (let z, x = 0; x < 3; x++) {\n    arr.push(function() { return x; });\n}\n\n// as a consequence of the above, defs is unable to transform\n// the code below (even though it is the output of an earlier\n// defs transformation). we should be able to detect this case\n// (and pass it through unmodified) but is it worth the effort?\nfor (let x = 0; x < 3; x++) {(function(){\n    let y = x;\n    arr.push(function() { return y; });\n}).call(this);}\n\n// return is not allowed inside the loop body because the IIFE would break it\n(function() {\n    for (let x = 0; x < 3; x++) {\n        let y = x;\n        return 1;\n        arr.push(function() { return y; });\n    }\n})();\n\n// break is not allowed inside the loop body because the IIFE would break it\nfor (let x = 0; x < 3; x++) {\n    let y = x;\n    break;\n    arr.push(function() { return y; });\n}\n\n// continue is not allowed inside the loop body because the IIFE would break it\nfor (let x = 0; x < 3; x++) {\n    let y = x;\n    continue;\n    arr.push(function() { return y; });\n}\n\n// arguments is not allowed inside the loop body because the IIFE would break it\n// (and I don't want to re-apply outer arguments in the inserted IIFE)\nfor (let x = 0; x < 3; x++) {\n    let y = x;\n    arguments[0];\n    arr.push(function() { return y; });\n}\n\n// continue is not allowed inside the loop body because the IIFE would break it\nfor (let x = 0; x < 3; x++) {\n    let y = x;\n    var z = 1;\n    arr.push(function() { return y; });\n}\n\n// TODO block-less loops (is that even applicable?)\n\narr.forEach(function(f) {\n    console.log(f());\n});\n"]}