{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;AAMA,YAAY,CAAA;;;;;;;AAOZ,MAAM,CAAC,OAAO,GAAG,IAAI,CAAA;;;;;;AAMrB,SAAS,IAAI,CAAC,SAAS,EAAE;AACvB,MAAI,CAAC,SAAS,EAAE;AACd,UAAM,IAAI,SAAS,CAAC,gCAAgC,CAAC,CAAA;GACtD;;AAED,WAAS,SAAS,CAAC,OAAO,EAAE;;GAE3B;;AAED,WAAS,CAAC,KAAK,GAAG,SAAS,CAAA;AAC3B,WAAS,CAAC,QAAQ,GAAG,IAAI,CAAA;AACzB,WAAS,CAAC,UAAU,GAAG,SAAS,CAAA;AAChC,WAAS,CAAC,OAAO,GAAG,KAAK,CAAA;AACzB,WAAS,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;;AAEvC,WAAS,YAAS,GAAG,YAAY,CAAA;AACjC,WAAS,CAAC,QAAQ,GAAG,YAAY,CAAA;;AAEjC,SAAO,SAAS,CAAA;CACjB;;;;;;;;;AASD,SAAS,YAAY,CAAC,EAAE,EAAE,OAAO,EAAE;AACjC,MAAI,OAAO,EAAE,KAAK,UAAU,EAAE;AAC5B,UAAM,IAAI,SAAS,CAAC,gCAAgC,CAAC,CAAA;GACtD;;AAED,SAAO,EAAE,CAAA;CACV;;;;;;;;;AASD,SAAS,YAAY,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE;AACxC,MAAI,CAAC,GAAG,IAAK,OAAO,GAAG,KAAK,QAAQ,IAAI,OAAO,GAAG,KAAK,UAAU,AAAC,EAAE;AAClE,UAAM,IAAI,SAAS,CAAC,6BAA6B,CAAC,CAAA;GACnD;;AAED,MAAI,UAAU,GAAG,MAAM,CAAC,wBAAwB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAA;;AAE3D,MAAI,CAAC,UAAU,EAAE;AACf,UAAM,IAAI,SAAS,CAAC,oCAAoC,CAAC,CAAA;GAC1D;;AAED,MAAI,CAAC,UAAU,CAAC,YAAY,EAAE;AAC5B,UAAM,IAAI,SAAS,CAAC,+BAA+B,CAAC,CAAA;GACrD;;AAED,SAAM;CACP","file":"index-compiled.js","sourcesContent":["/*!\n * depd\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = depd\n\n/**\n * Create deprecate for namespace in caller.\n */\n\nfunction depd(namespace) {\n  if (!namespace) {\n    throw new TypeError('argument namespace is required')\n  }\n\n  function deprecate(message) {\n    // no-op in browser\n  }\n\n  deprecate._file = undefined\n  deprecate._ignored = true\n  deprecate._namespace = namespace\n  deprecate._traced = false\n  deprecate._warned = Object.create(null)\n\n  deprecate.function = wrapfunction\n  deprecate.property = wrapproperty\n\n  return deprecate\n}\n\n/**\n * Return a wrapped function in a deprecation message.\n *\n * This is a no-op version of the wrapper, which does nothing but call\n * validation.\n */\n\nfunction wrapfunction(fn, message) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('argument fn must be a function')\n  }\n\n  return fn\n}\n\n/**\n * Wrap property in a deprecation message.\n *\n * This is a no-op version of the wrapper, which does nothing but call\n * validation.\n */\n\nfunction wrapproperty(obj, prop, message) {\n  if (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    throw new TypeError('argument obj must be object')\n  }\n\n  var descriptor = Object.getOwnPropertyDescriptor(obj, prop)\n\n  if (!descriptor) {\n    throw new TypeError('must call property on owner object')\n  }\n\n  if (!descriptor.configurable) {\n    throw new TypeError('property must be configurable')\n  }\n\n  return\n}\n"]}