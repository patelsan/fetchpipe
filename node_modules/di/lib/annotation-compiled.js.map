{"version":3,"sources":["annotation.js"],"names":[],"mappings":";;AAAA,IAAI,QAAQ,GAAG,SAAX,QAAQ,GAAc;AACxB,MAAI,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACjD,MAAI,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;;AAEpB,IAAE,CAAC,OAAO,GAAG,IAAI,CAAC;;AAElB,SAAO,EAAE,CAAC;CACX,CAAC;;;;;;;;;;;AAYF,IAAI,OAAO,GAAG,oCAAoC,CAAC;AACnD,IAAI,MAAM,GAAG,mBAAmB,CAAC;;AAEjC,IAAI,KAAK,GAAG,SAAR,KAAK,CAAY,EAAE,EAAE;AACvB,MAAI,OAAO,EAAE,KAAK,UAAU,EAAE;AAC5B,UAAM,IAAI,KAAK,CAAC,oBAAoB,GAAG,EAAE,GAAG,yBAAyB,CAAC,CAAC;GACxE;;AAED,MAAI,KAAK,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AACzC,SAAO,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAS,GAAG,EAAE;AACvD,SAAK,GAAG,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AAC1B,WAAO,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;GAC7C,CAAC,IAAI,EAAE,CAAC;CACV,CAAC;;AAGF,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC5B,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC","file":"annotation-compiled.js","sourcesContent":["var annotate = function() {\n  var args = Array.prototype.slice.call(arguments);\n  var fn = args.pop();\n\n  fn.$inject = args;\n\n  return fn;\n};\n\n\n// Current limitations:\n// - can't put into \"function arg\" comments\n// function /* (no parenthesis like this) */ (){}\n// function abc( /* xx (no parenthesis like this) */ a, b) {}\n//\n// Just put the comment before function or inside:\n// /* (((this is fine))) */ function(a, b) {}\n// function abc(a) { /* (((this is fine))) */}\n\nvar FN_ARGS = /^function\\s*[^\\(]*\\(\\s*([^\\)]*)\\)/m;\nvar FN_ARG = /\\/\\*([^\\*]*)\\*\\//m;\n\nvar parse = function(fn) {\n  if (typeof fn !== 'function') {\n    throw new Error('Can not annotate \"' + fn + '\". Expected a function!');\n  }\n\n  var match = fn.toString().match(FN_ARGS);\n  return match[1] && match[1].split(',').map(function(arg) {\n    match = arg.match(FN_ARG);\n    return match ? match[1].trim() : arg.trim();\n  }) || [];\n};\n\n\nexports.annotate = annotate;\nexports.parse = parse;\n"]}