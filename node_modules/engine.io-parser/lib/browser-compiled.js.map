{"version":3,"sources":["browser.js"],"names":[],"mappings":"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","file":"browser-compiled.js","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar keys = require('./keys');\nvar hasBinary = require('has-binary');\nvar sliceBuffer = require('arraybuffer.slice');\nvar base64encoder = require('base64-arraybuffer');\nvar after = require('after');\nvar utf8 = require('utf8');\n\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\nvar isAndroid = navigator.userAgent.match(/Android/i);\n\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\nvar isPhantomJS = /PhantomJS/i.test(navigator.userAgent);\n\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\nvar dontSendBlobs = isAndroid || isPhantomJS;\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if ('function' == typeof supportsBinary) {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if ('function' == typeof utf8encode) {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = (packet.data === undefined)\n    ? undefined\n    : packet.data.buffer || packet.data;\n\n  if (global.ArrayBuffer && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (Blob && data instanceof global.Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  }\n\n  // might be an object with { base64: true, data: dataAsBase64String }\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data)) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n\n/**\n * Encode packet helpers for binary types\n */\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n  resultBuffer[0] = packets[packet.type];\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i+1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n  fr.onload = function() {\n    packet.data = fr.result;\n    exports.encodePacket(packet, supportsBinary, true, callback);\n  };\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n\n  return callback(blob);\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n  if (Blob && packet.data instanceof Blob) {\n    var fr = new FileReader();\n    fr.onload = function() {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n  message += global.btoa(b64data);\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  // String data\n  if (typeof data == 'string' || data === undefined) {\n    if (data.charAt(0) == 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      try {\n        data = utf8.decode(data);\n      } catch (e) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n  return { type: packetslist[type], data: rest };\n};\n\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  if (!global.ArrayBuffer) {\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary == 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, true, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data != 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data == '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = ''\n    , n, msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (':' != chr) {\n      length += chr;\n    } else {\n      if ('' == length || (length != (n = Number(length)))) {\n        // parser error - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      msg = data.substr(i + 1, n);\n\n      if (length != msg.length) {\n        // parser error - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      if (msg.length) {\n        packet = exports.decodePacket(msg, binaryType, true);\n\n        if (err.type == packet.type && err.data == packet.data) {\n          // parser error in individual packet - ignoring payload\n          return callback(err, 0, 1);\n        }\n\n        var ret = callback(packet, i + n, l);\n        if (false === ret) return;\n      }\n\n      // advance cursor\n      i += n;\n      length = '';\n    }\n  }\n\n  if (length != '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function(err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function(acc, p) {\n      var len;\n      if (typeof p === 'string'){\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n\n    var resultArray = new Uint8Array(totalLength);\n\n    var bufferIndex = 0;\n    encodedPackets.forEach(function(p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n      if (isString) {\n        var view = new Uint8Array(p.length);\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n        ab = view.buffer;\n      }\n\n      if (isString) { // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else { // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n      resultArray[bufferIndex++] = 255;\n\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n\n    return callback(resultArray.buffer);\n  });\n};\n\n/**\n * Encode as Blob\n */\n\nexports.encodePayloadAsBlob = function(packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = (encoded instanceof ArrayBuffer)\n        ? encoded.byteLength\n        : encoded.size;\n\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(new Blob(results));\n  });\n};\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  var numberTooLong = false;\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1; ; i++) {\n      if (tailArray[i] == 255) break;\n\n      if (msgLength.length > 310) {\n        numberTooLong = true;\n        break;\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    if(numberTooLong) return callback(err, 0, 1);\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function(buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n"]}