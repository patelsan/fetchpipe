{"version":3,"sources":["transport.js"],"names":[],"mappings":";;;;;;;AAKA,IAAI,YAAY,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY;IAC7C,MAAM,GAAG,OAAO,CAAC,kBAAkB,CAAC;IACpC,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,kBAAkB,CAAC,CAAC;;;;;;AAMjD,MAAM,CAAC,OAAO,GAAG,SAAS,CAAC;;;;;;;;AAQ3B,SAAS,IAAI,GAAI,EAAE,CAAC;;;;;;;;;AASpB,SAAS,SAAS,CAAE,GAAG,EAAE;AACvB,MAAI,CAAC,UAAU,GAAG,SAAS,CAAC;CAC7B,CAAC;;;;;;AAMF,SAAS,CAAC,SAAS,CAAC,SAAS,GAAG,YAAY,CAAC,SAAS,CAAC;;;;;;;;;AASvD,SAAS,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,GAAG,EAAE;AAC7C,OAAK,CAAC,iBAAiB,CAAC,CAAC;AACzB,MAAI,CAAC,GAAG,GAAG,GAAG,CAAC;CAChB,CAAC;;;;;;;;AAQF,SAAS,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,EAAE,EAAE;AACxC,MAAI,CAAC,UAAU,GAAG,SAAS,CAAC;AAC5B,MAAI,CAAC,OAAO,CAAC,EAAE,IAAI,IAAI,CAAC,CAAC;CAC1B,CAAC;;;;;;;;;;AAUF,SAAS,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,GAAG,EAAE,IAAI,EAAE;AACjD,MAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE;AAClC,QAAI,GAAG,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;AACzB,OAAG,CAAC,IAAI,GAAG,gBAAgB,CAAC;AAC5B,OAAG,CAAC,WAAW,GAAG,IAAI,CAAC;AACvB,QAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;GACzB,MAAM;AACL,SAAK,CAAC,iCAAiC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;GACrD;CACF,CAAC;;;;;;;;;AASF,SAAS,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,MAAM,EAAE;AAC/C,MAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;CAC7B,CAAC;;;;;;;;;AASF,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,IAAI,EAAE;AAC3C,MAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;CAC1C,CAAC;;;;;;;;AAQF,SAAS,CAAC,SAAS,CAAC,OAAO,GAAG,YAAY;AACxC,MAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;AAC3B,MAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;CACpB,CAAC","file":"transport-compiled.js","sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar EventEmitter = require('events').EventEmitter\n  , parser = require('engine.io-parser')\n  , debug = require('debug')('engine:transport');\n\n/**\n * Expose the constructor.\n */\n\nmodule.exports = Transport;\n\n/**\n * Noop function.\n *\n * @api private\n */\n\nfunction noop () {};\n\n/**\n * Transport constructor.\n *\n * @param {http.ServerRequest} request\n * @api public\n */\n\nfunction Transport (req) {\n  this.readyState = 'opening';\n};\n\n/**\n * Inherits from EventEmitter.\n */\n\nTransport.prototype.__proto__ = EventEmitter.prototype;\n\n/**\n * Called with an incoming HTTP request.\n *\n * @param {http.ServerRequest} request\n * @api private\n */\n\nTransport.prototype.onRequest = function (req) {\n  debug('setting request');\n  this.req = req;\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function (fn) {\n  this.readyState = 'closing';\n  this.doClose(fn || noop);\n};\n\n/**\n * Called with a transport error.\n *\n * @param {String} message error\n * @param {Object} error description\n * @api private\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  if (this.listeners('error').length) {\n    var err = new Error(msg);\n    err.type = 'TransportError';\n    err.description = desc;\n    this.emit('error', err);\n  } else {\n    debug('ignored transport error %s (%s)', msg, desc);\n  }\n};\n\n/**\n * Called with parsed out a packets from the data stream.\n *\n * @param {Object} packet\n * @api private\n */\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called with the encoded packet data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function (data) {\n  this.onPacket(parser.decodePacket(data));\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};\n"]}