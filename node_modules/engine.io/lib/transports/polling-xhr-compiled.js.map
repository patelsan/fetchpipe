{"version":3,"sources":["polling-xhr.js"],"names":[],"mappings":";;;;;;;AAKA,IAAI,OAAO,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AACnC,IAAI,SAAS,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AACxC,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,oBAAoB,CAAC,CAAC;;;;;;AAMnD,MAAM,CAAC,OAAO,GAAG,GAAG,CAAC;;;;;;;;AAQrB,SAAS,GAAG,CAAC,GAAG,EAAC;AACf,SAAO,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;CACzB;;;;;;AAMD,GAAG,CAAC,SAAS,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;;;;;;;;;AAS5C,GAAG,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,GAAG,EAAE;AACvC,MAAI,SAAS,IAAI,GAAG,CAAC,MAAM,EAAE;AAC3B,QAAI,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;AAClB,QAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AAChC,WAAO,CAAC,8BAA8B,CAAC,GAAG,cAAc,CAAC;AACzD,OAAG,CAAC,SAAS,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;AAC5B,OAAG,CAAC,GAAG,EAAE,CAAC;GACX,MAAM;AACL,WAAO,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;GAC7C;CACF,CAAC;;;;;;;;AAQF,GAAG,CAAC,SAAS,CAAC,OAAO,GAAG,UAAS,IAAI,EAAC;;AAEpC,MAAI,QAAQ,GAAG,OAAO,IAAI,IAAI,QAAQ,CAAC;AACvC,MAAI,WAAW,GAAG,QAAQ,GACtB,2BAA2B,GAC3B,0BAA0B,CAAC;AAC/B,MAAI,aAAa,GAAG,EAAE,IAAI,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAA,AAAC,CAAC;;AAE5E,MAAI,OAAO,GAAG;AACZ,kBAAc,EAAE,WAAW;AAC3B,oBAAgB,EAAE,aAAa;GAChC,CAAC;;;;AAIF,MAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;AACxC,MAAI,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,CAAA,AAAC,EAAE;AAC3D,WAAO,CAAC,kBAAkB,CAAC,GAAG,GAAG,CAAC;GACnC;;AAED,MAAI,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC;AACzD,MAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;CACpB,CAAC;;;;;;;;;;AAUF,GAAG,CAAC,SAAS,CAAC,OAAO,GAAG,UAAS,GAAG,EAAE,OAAO,EAAC;AAC5C,SAAO,GAAG,OAAO,IAAI,EAAE,CAAC;;AAExB,MAAI,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE;AACtB,WAAO,CAAC,kCAAkC,CAAC,GAAG,MAAM,CAAC;AACrD,WAAO,CAAC,6BAA6B,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC;GAC7D,MAAM;AACL,WAAO,CAAC,6BAA6B,CAAC,GAAG,GAAG,CAAC;GAC9C;;AAED,MAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AAC9B,SAAO,OAAO,CAAC;CAChB,CAAC","file":"polling-xhr-compiled.js","sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar Polling = require('./polling');\nvar Transport = require('../transport');\nvar debug = require('debug')('engine:polling-xhr');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\n\n/**\n * Ajax polling transport.\n *\n * @api public\n */\n\nfunction XHR(req){\n  Polling.call(this, req);\n}\n\n/**\n * Inherits from Polling.\n */\n\nXHR.prototype.__proto__ = Polling.prototype;\n\n/**\n * Overrides `onRequest` to handle `OPTIONS`..\n *\n * @param {http.ServerRequest}\n * @api private\n */\n\nXHR.prototype.onRequest = function (req) {\n  if ('OPTIONS' == req.method) {\n    var res = req.res;\n    var headers = this.headers(req);\n    headers['Access-Control-Allow-Headers'] = 'Content-Type';\n    res.writeHead(200, headers);\n    res.end();\n  } else {\n    Polling.prototype.onRequest.call(this, req);\n  }\n};\n\n/**\n * Frames data prior to write.\n *\n * @api private\n */\n\nXHR.prototype.doWrite = function(data){\n  // explicit UTF-8 is required for pages not served under utf\n  var isString = typeof data == 'string';\n  var contentType = isString\n    ? 'text/plain; charset=UTF-8'\n    : 'application/octet-stream';\n  var contentLength = '' + (isString ? Buffer.byteLength(data) : data.length);\n\n  var headers = {\n    'Content-Type': contentType,\n    'Content-Length': contentLength\n  };\n\n  // prevent XSS warnings on IE\n  // https://github.com/LearnBoost/socket.io/pull/1333\n  var ua = this.req.headers['user-agent'];\n  if (ua && (~ua.indexOf(';MSIE') || ~ua.indexOf('Trident/'))) {\n    headers['X-XSS-Protection'] = '0';\n  }\n\n  this.res.writeHead(200, this.headers(this.req, headers));\n  this.res.end(data);\n};\n\n/**\n * Returns headers for a response.\n *\n * @param {http.ServerRequest} request\n * @param {Object} extra headers\n * @api private\n */\n\nXHR.prototype.headers = function(req, headers){\n  headers = headers || {};\n\n  if (req.headers.origin) {\n    headers['Access-Control-Allow-Credentials'] = 'true';\n    headers['Access-Control-Allow-Origin'] = req.headers.origin;\n  } else {\n    headers['Access-Control-Allow-Origin'] = '*';\n  }\n\n  this.emit('headers', headers);\n  return headers;\n};\n"]}