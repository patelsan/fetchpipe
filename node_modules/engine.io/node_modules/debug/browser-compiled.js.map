{"version":3,"sources":["browser.js"],"names":[],"mappings":"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","file":"browser-compiled.js","sourcesContent":["\n/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors and the Firebug\n * extension (*not* the built-in Firefox web inpector) are\n * known to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  return ('WebkitAppearance' in document.documentElement.style) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (window.console && (console.firebug || (console.exception && console.table)));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  return JSON.stringify(v);\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? '%c ' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return args;\n\n  var c = 'color: ' + this.color;\n  args = [args[0], c, ''].concat(Array.prototype.slice.call(args, 1));\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n  return args;\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // This hackery is required for IE8,\n  // where the `console.log` function doesn't have 'apply'\n  return 'object' == typeof console\n    && 'function' == typeof console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      localStorage.removeItem('debug');\n    } else {\n      localStorage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = localStorage.debug;\n  } catch(e) {}\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n"]}