{"version":3,"sources":["hex.js"],"names":[],"mappings":";;AAAA,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACnC,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;;AAEzB,IAAI,CAAC,KAAK,EAAE,UAAU,CAAC,EAAE;AACrB,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;AACzB,YAAI,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AAC/B,YAAI,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;AACf,aAAC,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC7B,MACI;AACD,gBAAI,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;AACrC,aAAC,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1B,aAAC,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;SAC1C;KACJ;;AAED,SAAK,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;AAC7B,YAAI,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AAC/B,YAAI,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;AACrC,YAAI,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;;AAErC,SAAC,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1B,SAAC,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;AAE1B,YAAI,OAAO,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC5B,YAAI,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACjC,YAAI,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE;AAC1B,aAAC,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;AACjC,aAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;SACjD;KACJ;AACD,KAAC,CAAC,GAAG,EAAE,CAAC;CACX,CAAC,CAAC","file":"hex-compiled.js","sourcesContent":["var test = require('tape');\nvar punycode = require('punycode');\nvar ent = require('../');\n\ntest('hex', function (t) {\n    for (var i = 0; i < 32; i++) {\n        var a = String.fromCharCode(i);\n        if (a.match(/\\s/)) {\n            t.equal(ent.decode(a), a);\n        }\n        else {\n            var b = '&#x' + i.toString(16) + ';';\n            t.equal(ent.decode(b), a);\n            t.equal(ent.encode(a), '&#' + i + ';');\n        }\n    }\n    \n    for (var i = 127; i < 2000; i++) {\n        var a = String.fromCharCode(i);\n        var b = '&#x' + i.toString(16) + ';';\n        var c = '&#X' + i.toString(16) + ';';\n        \n        t.equal(ent.decode(b), a);\n        t.equal(ent.decode(c), a);\n        \n        var encoded = ent.encode(a);\n        var encoded2 = ent.encode(a + a);\n        if (!encoded.match(/^&\\w+;/)) {\n            t.equal(encoded, '&#' + i + ';');\n            t.equal(encoded2, '&#' + i + ';&#' + i + ';');\n        }\n    }\n    t.end();\n});\n\n"]}