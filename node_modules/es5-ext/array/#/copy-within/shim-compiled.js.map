{"version":3,"sources":["shim.js"],"names":[],"mappings":";;AAEA,YAAY,CAAC;;AAEb,IAAI,SAAS,GAAI,OAAO,CAAC,4BAA4B,CAAC;IAClD,QAAQ,GAAK,OAAO,CAAC,gCAAgC,CAAC;IACtD,UAAU,GAAG,OAAO,CAAC,6BAA6B,CAAC;IAEnD,cAAc,GAAG,MAAM,CAAC,SAAS,CAAC,cAAc;IAChD,GAAG,GAAG,IAAI,CAAC,GAAG;IAAE,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;;AAEnC,MAAM,CAAC,OAAO,GAAG,UAAU,MAAM,EAAE,KAAK,YAAW;AAClD,KAAI,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC;KAAE,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC;KAAE,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC;KAChE,EAAE;KAAE,IAAI;KAAE,GAAG;KAAE,KAAK;KAAE,SAAS,CAAC;;AAEpC,OAAM,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;AAC3B,MAAK,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;AACzB,IAAG,GAAG,AAAC,GAAG,KAAK,SAAS,GAAI,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;;AAE/C,GAAE,GAAG,MAAM,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,MAAM,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AACtD,KAAI,GAAG,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrD,IAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AAC9C,MAAK,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AAChC,UAAS,GAAG,CAAC,CAAC;;AAEd,KAAI,AAAC,IAAI,GAAG,EAAE,IAAM,EAAE,GAAI,IAAI,GAAG,KAAK,AAAC,AAAC,EAAE;AACzC,WAAS,GAAG,CAAC,CAAC,CAAC;AACf,MAAI,IAAI,KAAK,GAAG,CAAC,CAAC;AAClB,IAAE,IAAI,KAAK,GAAG,CAAC,CAAC;EAChB;AACD,QAAO,KAAK,GAAG,CAAC,EAAE;AACjB,MAAI,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,KAC7C,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC;AACpB,MAAI,IAAI,SAAS,CAAC;AAClB,IAAE,IAAI,SAAS,CAAC;AAChB,OAAK,IAAI,CAAC,CAAC;EACX;AACD,QAAO,CAAC,CAAC;CACT,CAAC","file":"shim-compiled.js","sourcesContent":["// Taken from: https://github.com/paulmillr/es6-shim/\n\n'use strict';\n\nvar toInteger  = require('../../../number/to-integer')\n  , toPosInt   = require('../../../number/to-pos-integer')\n  , validValue = require('../../../object/valid-value')\n\n  , hasOwnProperty = Object.prototype.hasOwnProperty\n  , max = Math.max, min = Math.min;\n\nmodule.exports = function (target, start/*, end*/) {\n\tvar o = validValue(this), end = arguments[2], l = toPosInt(o.length)\n\t  , to, from, fin, count, direction;\n\n\ttarget = toInteger(target);\n\tstart = toInteger(start);\n\tend = (end === undefined) ? l : toInteger(end);\n\n\tto = target < 0 ? max(l + target, 0) : min(target, l);\n\tfrom = start < 0 ? max(l + start, 0) : min(start, l);\n\tfin = end < 0 ? max(l + end, 0) : min(end, l);\n\tcount = min(fin - from, l - to);\n\tdirection = 1;\n\n\tif ((from < to) && (to < (from + count))) {\n\t\tdirection = -1;\n\t\tfrom += count - 1;\n\t\tto += count - 1;\n\t}\n\twhile (count > 0) {\n\t\tif (hasOwnProperty.call(o, from)) o[to] = o[from];\n\t\telse delete o[from];\n\t\tfrom += direction;\n\t\tto += direction;\n\t\tcount -= 1;\n\t}\n\treturn o;\n};\n"]}