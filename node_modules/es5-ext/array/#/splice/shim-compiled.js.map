{"version":3,"sources":["shim.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,YAAY,GAAG,OAAO,CAAC,sBAAsB,CAAC;IAE9C,OAAO,GAAG,KAAK,CAAC,OAAO;IAAE,MAAM,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM;IACxD,OAAO,GAAG,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC;;AAEtC,MAAM,CAAC,OAAO,GAAG,UAAU,KAAK,EAAE,WAAW,eAAc;AAC1D,KAAI,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC;KAAE,MAAM,CAAC;AAChD,KAAI,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,IAAI,CAAC,EAAE,OAAO,GAAG,CAAC;AAC9D,OAAM,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAC1C,QAAO,CAAC,IAAI,CAAC,GAAG,EAAE,UAAU,GAAG,EAAE,CAAC,EAAE;AAAE,QAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;EAAE,CAAC,CAAC;AAC1D,QAAO,MAAM,CAAC;CACd,CAAC","file":"shim-compiled.js","sourcesContent":["'use strict';\n\nvar isPlainArray = require('../../is-plain-array')\n\n  , isArray = Array.isArray, splice = Array.prototype.splice\n  , forEach = Array.prototype.forEach;\n\nmodule.exports = function (start, deleteCount/*, â€¦items*/) {\n\tvar arr = splice.apply(this, arguments), result;\n\tif (!this || !isArray(this) || isPlainArray(this)) return arr;\n\tresult = new this.constructor(arr.length);\n\tforEach.call(arr, function (val, i) { result[i] = val; });\n\treturn result;\n};\n"]}