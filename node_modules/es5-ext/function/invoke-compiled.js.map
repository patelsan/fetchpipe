{"version":3,"sources":["invoke.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,UAAU,GAAG,OAAO,CAAC,uBAAuB,CAAC;IAC7C,KAAK,GAAQ,OAAO,CAAC,uBAAuB,CAAC;IAE7C,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK;IAAE,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC;;AAEpE,MAAM,CAAC,OAAO,GAAG,UAAU,IAAI,cAAa;AAC3C,KAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;KAAE,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;AAC7D,QAAO,UAAU,GAAG,EAAE;AACrB,OAAK,CAAC,GAAG,CAAC,CAAC;AACX,SAAO,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,EAC7C,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC;CACF,CAAC","file":"invoke-compiled.js","sourcesContent":["'use strict';\n\nvar isCallable = require('../object/is-callable')\n  , value      = require('../object/valid-value')\n\n  , slice = Array.prototype.slice, apply = Function.prototype.apply;\n\nmodule.exports = function (name/*, â€¦args*/) {\n\tvar args = slice.call(arguments, 1), isFn = isCallable(name);\n\treturn function (obj) {\n\t\tvalue(obj);\n\t\treturn apply.call(isFn ? name : obj[name], obj,\n\t\t\targs.concat(slice.call(arguments, 1)));\n\t};\n};\n"]}