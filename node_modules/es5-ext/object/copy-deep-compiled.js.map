{"version":3,"sources":["copy-deep.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,OAAO,GAAS,OAAO,CAAC,YAAY,CAAC;IACrC,aAAa,GAAG,OAAO,CAAC,mBAAmB,CAAC;IAC5C,KAAK,GAAW,OAAO,CAAC,eAAe,CAAC;IAExC,OAAO,GAAG,KAAK,CAAC,OAAO;IACvB,IAAI;IAAE,QAAQ,CAAC;;AAEnB,QAAQ,GAAG,UAAU,KAAK,EAAE,GAAG,EAAE;AAChC,KAAI,KAAK,CAAC;AACV,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,OAAO,KAAK,CAAC;AAC3D,MAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAC/B,KAAI,KAAK,KAAK,CAAC,CAAC,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAChD,QAAO,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;CACtB,CAAC;;AAEF,IAAI,GAAG,UAAU,MAAM,EAAE;AACxB,KAAI,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;AACvC,KAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACrB,KAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACrB,KAAI,OAAO,CAAC,MAAM,CAAC,EAAE;AACpB,QAAM,CAAC,OAAO,CAAC,UAAU,KAAK,EAAE,GAAG,EAAE;AACpC,SAAM,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;GAC9C,EAAE,IAAI,CAAC,CAAC;EACT,MAAM;AACN,SAAO,CAAC,MAAM,EAAE,UAAU,KAAK,EAAE,GAAG,EAAE;AACrC,SAAM,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;GAC9C,EAAE,IAAI,CAAC,CAAC;EACT;AACD,QAAO,MAAM,CAAC;CACd,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,UAAU,MAAM,EAAE;AAClC,KAAI,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;AAChC,KAAI,GAAG,KAAK,MAAM,EAAE,OAAO,GAAG,CAAC;AAC/B,QAAO,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;CAChC,CAAC","file":"copy-deep-compiled.js","sourcesContent":["'use strict';\n\nvar forEach       = require('./for-each')\n  , isPlainObject = require('./is-plain-object')\n  , value         = require('./valid-value')\n\n  , isArray = Array.isArray\n  , copy, copyItem;\n\ncopyItem = function (value, key) {\n\tvar index;\n\tif (!isPlainObject(value) && !isArray(value)) return value;\n\tindex = this[0].indexOf(value);\n\tif (index === -1) return copy.call(this, value);\n\treturn this[1][index];\n};\n\ncopy = function (source) {\n\tvar target = isArray(source) ? [] : {};\n\tthis[0].push(source);\n\tthis[1].push(target);\n\tif (isArray(source)) {\n\t\tsource.forEach(function (value, key) {\n\t\t\ttarget[key] = copyItem.call(this, value, key);\n\t\t}, this);\n\t} else {\n\t\tforEach(source, function (value, key) {\n\t\t\ttarget[key] = copyItem.call(this, value, key);\n\t\t}, this);\n\t}\n\treturn target;\n};\n\nmodule.exports = function (source) {\n\tvar obj = Object(value(source));\n\tif (obj !== source) return obj;\n\treturn copy.call([[], []], obj);\n};\n"]}