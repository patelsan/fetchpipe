{"version":3,"sources":["mixin-prototypes.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,KAAK,GAAG,OAAO,CAAC,eAAe,CAAC;IAChC,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC;IAE1B,cAAc,GAAG,MAAM,CAAC,cAAc;IACtC,wBAAwB,GAAG,MAAM,CAAC,wBAAwB;IAC1D,mBAAmB,GAAG,MAAM,CAAC,mBAAmB;IAChD,cAAc,GAAG,MAAM,CAAC,cAAc;IACtC,cAAc,GAAG,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC;;AAErD,MAAM,CAAC,OAAO,GAAG,UAAU,MAAM,EAAE,MAAM,EAAE;AAC1C,KAAI,KAAK,EAAE,GAAG,EAAE,MAAM,CAAC;AACvB,OAAM,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;AAC/B,OAAM,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;AAC/B,IAAG,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC;AAC7B,KAAI,MAAM,KAAK,GAAG,EAAE,OAAO,MAAM,CAAC;AAClC,KAAI;AACH,OAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;EACtB,CAAC,OAAO,CAAC,EAAE;AAAE,OAAK,GAAG,CAAC,CAAC;EAAE;AAC1B,OAAM,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC;AAChC,OAAM,GAAG,UAAU,IAAI,EAAE;AACxB,MAAI,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,OAAO;AAC9C,MAAI;AACH,iBAAc,CAAC,MAAM,EAAE,IAAI,EAAE,wBAAwB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC;GACrE,CAAC,OAAO,CAAC,EAAE;AAAE,QAAK,GAAG,CAAC,CAAC;GAAE;EAC1B,CAAC;AACF,QAAO,MAAM,IAAK,MAAM,KAAK,GAAG,AAAC,EAAE;AAClC,qBAAmB,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AAC5C,QAAM,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC;EAChC;AACD,KAAI,KAAK,EAAE,MAAM,KAAK,CAAC;AACvB,QAAO,MAAM,CAAC;CACd,CAAC","file":"mixin-prototypes-compiled.js","sourcesContent":["'use strict';\n\nvar value = require('./valid-value')\n  , mixin = require('./mixin')\n\n  , defineProperty = Object.defineProperty\n  , getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor\n  , getOwnPropertyNames = Object.getOwnPropertyNames\n  , getPrototypeOf = Object.getPrototypeOf\n  , hasOwnProperty = Object.prototype.hasOwnProperty;\n\nmodule.exports = function (target, source) {\n\tvar error, end, define;\n\ttarget = Object(value(target));\n\tsource = Object(value(source));\n\tend = getPrototypeOf(target);\n\tif (source === end) return target;\n\ttry {\n\t\tmixin(target, source);\n\t} catch (e) { error = e; }\n\tsource = getPrototypeOf(source);\n\tdefine = function (name) {\n\t\tif (hasOwnProperty.call(target, name)) return;\n\t\ttry {\n\t\t\tdefineProperty(target, name, getOwnPropertyDescriptor(source, name));\n\t\t} catch (e) { error = e; }\n\t};\n\twhile (source && (source !== end)) {\n\t\tgetOwnPropertyNames(source).forEach(define);\n\t\tsource = getPrototypeOf(source);\n\t}\n\tif (error) throw error;\n\treturn target;\n};\n"]}