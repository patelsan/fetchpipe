{"version":3,"sources":["serialize.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,OAAO,GAAI,OAAO,CAAC,YAAY,CAAC;IAChC,MAAM,GAAK,OAAO,CAAC,iBAAiB,CAAC;IACrC,QAAQ,GAAG,OAAO,CAAC,uBAAuB,CAAC;IAE3C,OAAO,GAAG,KAAK,CAAC,OAAO;IAAE,SAAS,GAAG,IAAI,CAAC,SAAS;IACnD,gBAAgB,GAAG,SAAnB,gBAAgB,CAAa,KAAK,EAAE,GAAG,EAAE;AAAE,QAAO,SAAS,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;CAAE,CAAC;;AAE/F,IAAI,SAAS,GAAG,SAAZ,SAAS,CAAa,GAAG,EAAE;AAC9B,KAAI,CAAC;KAAE,CAAC,GAAG,GAAG,CAAC,MAAM;KAAE,MAAM,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;AAC7C,MAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;AACvB,MAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,SAAS;AACrC,QAAM,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5B;AACD,QAAO,MAAM,CAAC;CACd,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,OAAO,GAAG,UAAU,GAAG,EAAE;AACzC,KAAI,GAAG,IAAI,IAAI,EAAE,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC;AACpC,SAAQ,OAAO,GAAG;AAClB,OAAK,QAAQ;AACZ,UAAO,SAAS,CAAC,GAAG,CAAC,CAAC;AAAA,AACvB,OAAK,QAAQ,CAAC;AACd,OAAK,SAAS,CAAC;AACf,OAAK,UAAU;AACd,UAAO,MAAM,CAAC,GAAG,CAAC,CAAC;AAAA,AACpB,OAAK,QAAQ;AACZ,OAAI,OAAO,CAAC,GAAG,CAAC,EAAE,OAAO,GAAG,GAAG,SAAS,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;AACpD,OAAI,QAAQ,CAAC,GAAG,CAAC,EAAE,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC;AACtC,OAAI,MAAM,CAAC,GAAG,CAAC,EAAE,OAAO,WAAW,GAAG,GAAG,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC;AAC1D,UAAO,GAAG,GAAG,OAAO,CAAC,GAAG,EAAE,gBAAgB,CAAC,GAAG,GAAG,CAAC;AAAA,AACnD;AACC,SAAM,IAAI,SAAS,CAAC,mBAAmB,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,gBAAgB,CAAC,CAAC;AAAA,EAC1E;CACD,CAAC","file":"serialize-compiled.js","sourcesContent":["'use strict';\n\nvar toArray  = require('./to-array')\n  , isDate   = require('../date/is-date')\n  , isRegExp = require('../reg-exp/is-reg-exp')\n\n  , isArray = Array.isArray, stringify = JSON.stringify\n  , keyValueToString = function (value, key) { return stringify(key) + ':' + exports(value); };\n\nvar sparseMap = function (arr) {\n\tvar i, l = arr.length, result = new Array(l);\n\tfor (i = 0; i < l; ++i) {\n\t\tif (!arr.hasOwnProperty(i)) continue;\n\t\tresult[i] = exports(arr[i]);\n\t}\n\treturn result;\n};\n\nmodule.exports = exports = function (obj) {\n\tif (obj == null) return String(obj);\n\tswitch (typeof obj) {\n\tcase 'string':\n\t\treturn stringify(obj);\n\tcase 'number':\n\tcase 'boolean':\n\tcase 'function':\n\t\treturn String(obj);\n\tcase 'object':\n\t\tif (isArray(obj)) return '[' + sparseMap(obj) + ']';\n\t\tif (isRegExp(obj)) return String(obj);\n\t\tif (isDate(obj)) return 'new Date(' + obj.valueOf() + ')';\n\t\treturn '{' + toArray(obj, keyValueToString) + '}';\n\tdefault:\n\t\tthrow new TypeError(\"Serialization of \" + String(obj) + \"is unsupported\");\n\t}\n};\n"]}