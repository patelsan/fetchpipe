{"version":3,"sources":["shim.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,QAAQ,GAAG,OAAO,CAAC,yCAAyC,CAAC,CAAC;;AAElE,MAAM,CAAC,OAAO,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE;AAChC,KAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;KAAE,CAAC,GAAG,EAAE;KAAE,MAAM;KAAE,OAAO;KAAE,MAAM,CAAC;;AAEtD,EAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,EACzD,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,aAAa,CAAC,CAAC;;AAElE,OAAM,GAAG,IAAI,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;AACvC,QAAO,GAAG,IAAI,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;;AAErC,OAAM,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;AACzD,EAAC,CAAC,MAAM,YAAY,QAAQ,EAAE,IAAI,EAAE,sBAAsB,CAAC,CAAC;AAC5D,EAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,EAC1E,qBAAqB,CAAC,CAAC;;AAExB,SAAQ,CAAC,SAAS,CAAC,sBAAsB,CAAC,GAAG,KAAK,CAAC;;AAEnD,OAAM,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;AACzD,EAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,EACrE,gBAAgB,CAAC,CAAC;;AAEnB,QAAO,QAAQ,CAAC,SAAS,CAAC,sBAAsB,CAAC,CAAC;CAClD,CAAC","file":"shim-compiled.js","sourcesContent":["'use strict';\n\nvar SubArray = require('../../../../array/_sub-array-dummy-safe');\n\nmodule.exports = function (t, a) {\n\tvar arr = [1, 3, 45], x = {}, subArr, subArr2, result;\n\n\ta.deep(t.call(arr, '2d', x, ['ere', 'fe', x], false, null),\n\t\t[1, 3, 45, '2d', x, 'ere', 'fe', x, false, null], \"Plain array\");\n\n\tsubArr = new SubArray('lol', 'miszko');\n\tsubArr2 = new SubArray('elo', 'fol');\n\n\tresult = t.call(subArr, 'df', arr, 'fef', subArr2, null);\n\ta(result instanceof SubArray, true, \"Instance of subclass\");\n\ta.deep(result, ['lol', 'miszko', 'df', 1, 3, 45, 'fef', 'elo', 'fol', null],\n\t\t\"Spreable by default\");\n\n\tSubArray.prototype['@@isConcatSpreadable'] = false;\n\n\tresult = t.call(subArr, 'df', arr, 'fef', subArr2, null);\n\ta.deep(result, ['lol', 'miszko', 'df', 1, 3, 45, 'fef', subArr2, null],\n\t\t\"Non spreadable\");\n\n\tdelete SubArray.prototype['@@isConcatSpreadable'];\n};\n"]}