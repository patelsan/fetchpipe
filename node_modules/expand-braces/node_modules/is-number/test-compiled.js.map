{"version":3,"sources":["test.js"],"names":[],"mappings":"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","file":"test-compiled.js","sourcesContent":["/*!\n * is-number <https://github.com/jonschlinkert/is-number>\n *\n * Copyright (c) 2014 Jon Schlinkert, contributors.\n * Licensed under the MIT License\n */\n\n'use strict';\n\nvar assert = require('assert');\nvar isNumber = require('./');\n\n\nvar shouldPass = [  0,\n  5e3,\n  -1.1,\n  0,\n\n  // 012, Octal literal not allowed in strict mode\n  parseInt('012'),\n  parseFloat('012'),\n  0xff,\n  1,\n  1.1,\n  10,\n  10.10,\n  100,\n\n  Math.abs(1),\n  Math.acos(1),\n  Math.asin(1),\n  Math.atan(1),\n  Math.atan2(1, 2),\n  Math.ceil(1),\n  Math.cos(1),\n  Math.E,\n  Math.exp(1),\n  Math.floor(1),\n  Math.LN10,\n  Math.LN2,\n  Math.log(1),\n  Math.LOG10E,\n  Math.LOG2E,\n  Math.max(1, 2),\n  Math.min(1, 2),\n  Math.PI,\n  Math.pow(1, 2),\n  Math.pow(5, 5),\n  Math.random(1),\n  Math.round(1),\n  Math.sin(1),\n  Math.sqrt(1),\n  Math.SQRT1_2,\n  Math.SQRT2,\n  Math.tan(1),\n\n  Number.MAX_VALUE,\n  Number.MIN_VALUE,\n\n  // these fail in strict mode\n  '-1.1',\n  '0',\n  '012',\n  '0xff',\n  '1',\n  '1.1',\n  '10',\n  '10.10',\n  '100',\n  '5e3'\n];\n\nvar shouldFail = [\n  '3abc',\n  'abc',\n  'abc3',\n  'null',\n  'undefined',\n  [1, 2, 3],\n  function () {},\n  new Buffer('abc'),\n  null,\n  undefined,\n  {abc: 'abc'},\n  {},\n  []\n];\n\n\ndescribe('is a number', function () {\n  shouldPass.forEach(function (num) {\n    it('\"' + num + '\" should be a number', function () {\n      assert.equal(isNumber(num), true);\n    });\n  });\n\n  assert.equal(isNumber(Infinity), true);\n  assert.equal(isNumber('Infinity'), true);\n});\n\n\ndescribe('is a finite number:', function () {\n  function isNum(val) {\n    return isNumber(val) && isFinite(val);\n  }\n\n  assert.equal(isNum(Infinity), false);\n  assert.equal(isNum('Infinity'), false);\n\n  shouldPass.forEach(function (num) {\n    it('\"' + num + '\" should be a number', function () {\n      assert.equal(isNum(num), true);\n    });\n  });\n\n  shouldFail.forEach(function (num) {\n    it('\"' + num + '\" should be a number', function () {\n      assert.equal(isNum(num), false);\n    });\n  });\n});\n\n\ndescribe('is not a number', function () {\n  shouldFail.forEach(function (num) {\n    it('\"' + num + '\" should not be a number', function () {\n      assert.equal(isNumber(num), false);\n    });\n  });\n});"]}