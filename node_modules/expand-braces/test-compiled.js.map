{"version":3,"sources":["test.js"],"names":[],"mappings":";;;;;;;AAOA,YAAY,CAAC;;AAEb,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,IAAI,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;;AAE3B,QAAQ,CAAC,wCAAwC,EAAE,YAAY;AAC7D,UAAQ,CAAC,QAAQ,EAAE,YAAY;AAC7B,MAAE,CAAC,oCAAoC,EAAE,YAAY;AACnD,YAAM,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;KACpE,CAAC,CAAC;;AAEH,MAAE,CAAC,oCAAoC,EAAE,YAAY;AACnD,YAAM,CAAC,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;KACtE,CAAC,CAAC;;AAEH,MAAE,CAAC,4BAA4B,EAAE,YAAY;AAC3C,YAAM,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;KACnD,CAAC,CAAC;;AAEH,MAAE,CAAC,6BAA6B,EAAE,YAAY;AAC5C,YAAM,CAAC,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;KACtE,CAAC,CAAC;;AAEH,MAAE,CAAC,4BAA4B,EAAE,YAAY;AAC3C,YAAM,CAAC,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC;KAC/D,CAAC,CAAC;;AAEH,MAAE,CAAC,kCAAkC,EAAE,YAAY;AACjD,YAAM,CAAC,CAAC,aAAa,EAAE,iBAAiB,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;KACnF,CAAC,CAAC;;AAEH,MAAE,CAAC,0BAA0B,EAAE,YAAY;AACzC,YAAM,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;KACxD,CAAC,CAAC;;AAEH,MAAE,CAAC,oBAAoB,EAAE,YAAY;AACnC,YAAM,CAAC,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;KACnG,CAAC,CAAC;;AAEH,MAAE,CAAC,yDAAyD,EAAE,YAAY;AACxE,OAAC,YAAY;AACX,cAAM,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;OAC7B,CAAA,CAAE,MAAM,SAAM,CAAC,kCAAkC,CAAC,CAAC;KACrD,CAAC,CAAC;GACJ,CAAC,CAAC;;AAEH,UAAQ,CAAC,iBAAiB,EAAE,YAAY;AACtC,MAAE,CAAC,gCAAgC,EAAE,YAAY;AAC/C,YAAM,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;KACnF,CAAC,CAAC;;AAEH,MAAE,CAAC,sBAAsB,EAAE,YAAY;AACrC,YAAM,CAAC,CAAC,UAAU,EAAE,UAAU,EAAE,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;KAC3I,CAAC,CAAC;;AAEH,MAAE,CAAC,mCAAmC,EAAE,YAAY;AAClD,YAAM,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;KAC7F,CAAC,CAAC;;AAEH,MAAE,CAAC,8CAA8C,EAAE,YAAY;AAC7D,UAAI,CAAC,GAAG,CAAC,CAAC;AACV,UAAI,KAAK,GAAG,MAAM,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,UAAU,GAAG,EAAE;AACtD,eAAO,GAAG,GAAG,CAAC,EAAE,CAAC;OAClB,CAAC,CAAC;AACH,WAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;KACpE,CAAC,CAAC;;AAEH,MAAE,CAAC,8CAA8C,EAAE,YAAY;AAC7D,UAAI,KAAK,GAAG,MAAM,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,UAAU,GAAG,EAAE;AACtD,eAAO,GAAG,GAAG,GAAG,CAAC;OAClB,CAAC,CAAC;AACH,WAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;KACpE,CAAC,CAAC;GACJ,CAAC,CAAC;;AAEH,UAAQ,CAAC,wDAAwD,EAAE,YAAY;AAC7E,MAAE,CAAC,oBAAoB,EAAE,YAAY;AACnC,YAAM,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;KAC5H,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ,CAAC,CAAC","file":"test-compiled.js","sourcesContent":["/*!\n * expand-braces <https://github.com/jonschlinkert/expand-braces>\n *\n * Copyright (c) 2014 Jon Schlinkert, contributors.\n * Licensed under the MIT License\n */\n\n'use strict';\n\nvar should = require('should');\nvar expand = require('./');\n\ndescribe('given an array of patterns with braces', function () {\n  describe('braces', function () {\n    it('should work with a list of strings', function () {\n      expand('x{a,b,c}z', 'x{a,b,c}z').should.eql(['xaz', 'xbz', 'xcz']);\n    });\n\n    it('should work with arrays of strings', function () {\n      expand(['x{a,b,c}z', 'x{a,b,c}z']).should.eql(['xaz', 'xbz', 'xcz']);\n    });\n\n    it('should work with no braces', function () {\n      expand(['abc', 'xyz']).should.eql(['abc', 'xyz']);\n    });\n\n    it('should uniquify the result.', function () {\n      expand(['x{a,b,c}z', 'x{a,b,c}z']).should.eql(['xaz', 'xbz', 'xcz']);\n    });\n\n    it('should work with one value', function () {\n      expand(['a{b}c', 'a/b/c{d}e']).should.eql(['abc', 'a/b/cde']);\n    });\n\n    it('should work with nested non-sets', function () {\n      expand(['{a-{b,c,d}}', '{a,{a-{b,c,d}}}']).should.eql(['a-b', 'a-c', 'a-d', 'a']);\n    });\n\n    it('should work with commas.', function () {\n      expand(['a{b,}c', 'a{,b}c']).should.eql(['abc', 'ac']);\n    });\n\n    it('should expand sets', function () {\n      expand(['a/{x,y}/c{d}e', 'a/b/c/{x,y}']).should.eql(['a/x/cde', 'a/y/cde', 'a/b/c/x', 'a/b/c/y']);\n    });\n\n    it('should throw an error when imbalanced braces are found.', function () {\n      (function () {\n        expand(['a/{b,c}{d{e,f}g']);\n      }).should.throw('imbalanced brace in: a/{b,c}{deg');\n    });\n  });\n\n  describe('range expansion', function () {\n    it('should expand numerical ranges', function () {\n      expand(['{1..3}', '{4..8}']).should.eql(['1', '2', '3', '4', '5', '6', '7', '8']);\n    });\n\n    it('should honor padding', function () {\n      expand(['{00..05}', '{01..03}', '{000..005}']).should.eql(['00', '01', '02', '03', '04', '05', '000', '001', '002', '003', '004', '005']);\n    });\n\n    it('should expand alphabetical ranges', function () {\n      expand(['{a..e}', '{A..E}']).should.eql(['a', 'b', 'c', 'd', 'e', 'A', 'B', 'C', 'D', 'E']);\n    });\n\n    it('should use a custom function for expansions.', function () {\n      var i = 0;\n      var range = expand(['{a..e}', '{f..h}'], function (str) {\n        return str + i++;\n      });\n      range.should.eql(['a0', 'b1', 'c2', 'd3', 'e4', 'f5', 'g6', 'h7']);\n    });\n\n    it('should use a custom function for expansions.', function () {\n      var range = expand(['{a..e}', '{f..h}'], function (str) {\n        return '_' + str;\n      });\n      range.should.eql(['_a', '_b', '_c', '_d', '_e', '_f', '_g', '_h']);\n    });\n  });\n\n  describe('should expand a combination of nested sets and ranges.', function () {\n    it('should expand sets', function () {\n      expand(['a/{x,{1..5},y}/c{d}e']).should.eql(['a/x/cde', 'a/1/cde', 'a/y/cde', 'a/2/cde', 'a/3/cde', 'a/4/cde', 'a/5/cde']);\n    });\n  });\n});\n"]}