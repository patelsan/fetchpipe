{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAOA,YAAY,CAAC;;;;;;AAMb,IAAI,KAAK,GAAG;AACV,OAAK,EAAE,WAAW;AAClB,OAAK,EAAE,QAAQ;AACf,OAAK,EAAE,MAAM;AACb,OAAK,EAAE,kBAAkB;AACzB,OAAK,EAAE,KAAK;AACZ,OAAK,EAAE,aAAa;AACpB,OAAK,EAAE,KAAK;AACZ,OAAK,EAAE,aAAa;AACpB,OAAK,EAAE,sCAAsC;AAC7C,OAAK,EAAE,kBAAkB;AACzB,OAAK,EAAE,KAAK;AACZ,MAAI,EAAG,YAAY;AACnB,QAAM,EAAE,WAAW;CACpB,CAAC;;;;;;AAMF,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC;;AAE1B,SAAS,QAAQ,CAAC,GAAG,EAAE;AACrB,MAAI,OAAO,GAAG,KAAK,CAAC;AACpB,MAAI,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;AAC5B,WAAO,GAAG,IAAI,CAAC;AACf,OAAG,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;GACjC;AACD,MAAI,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;AAC5B,WAAO,GAAG,IAAI,CAAC;AACf,OAAG,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;GACjC;;AAED,MAAI,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACvB,MAAI,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACvB,MAAI,UAAU,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,CAAC;;AAEvC,MAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAAC;AAClD,MAAI,GAAG,GAAG,KAAK,CAAC,MAAM;MAAE,CAAC,GAAG,CAAC,CAAC;AAC9B,MAAI,GAAG,GAAG,EAAE;MAAE,GAAG,GAAG,EAAE,CAAC;AACvB,MAAI,GAAG,GAAG,EAAE,CAAC;;;AAGb,SAAO,GAAG,EAAE,EAAE;AACZ,QAAI,KAAK,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AACvB,QAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,EAAE;AACrC,WAAK,GAAG,EAAE,CAAC;AACX,aAAO,GAAG,IAAI,CAAC;KAChB;;AAED,QAAI,MAAM,GAAG,OAAO,GAAG,GAAG,GAAG,EAAE,CAAC;AAChC,QAAI,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;;AAEtB,QAAI,EAAE,EAAE;AACN,SAAG,CAAC,IAAI,CAAC,GAAG,GAAG,MAAM,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC;KACnC,MAAM,IAAI,KAAK,EAAE;AAChB,UAAI,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;AAC/B,YAAI,CAAC,KAAK,KAAK,CAAC,MAAM,EAAE;AACtB,aAAG,CAAC,IAAI,CAAC,GAAG,GAAG,MAAM,GAAG,KAAK,CAAC,CAAC;SAChC,MAAM,IAAI,CAAC,KAAK,CAAC,EAAE;AAClB,aAAG,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;SAChC,MAAM;AACL,aAAG,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;SAC1B;OACF,MAAM;AACL,YAAI,CAAC,KAAK,CAAC,EAAE;AACX,aAAG,IAAI,KAAK,CAAC;SACd,MAAM,IAAI,CAAC,KAAK,KAAK,CAAC,MAAM,EAAE;AAC7B,aAAG,IAAI,KAAK,CAAC;SACd,MAAM;AACL,aAAG,CAAC,IAAI,CAAC,GAAG,GAAG,MAAM,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;SACtC;OACF;KACF;GACF;;AAED,MAAI,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC3B,MAAI,IAAI,GAAG,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC;AAC3B,MAAI,IAAI,GAAG,CAAC,EAAE;AACZ,UAAM,GAAG,KAAK,GAAG,MAAM,GAAG,GAAG,CAAC;AAC9B,QAAI,GAAG,CAAC,CAAC;GACV;AACD,MAAI,GAAG,EAAE;AACP,QAAI,EAAE,CAAC;AACP,QAAI,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AACzB,UAAI,UAAU,EAAE;AACd,WAAG,GAAG,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;OAC5B,MAAM;AACL,WAAG,IAAI,GAAG,CAAC;OACZ;KACF;AACD,UAAM,GAAG,GAAG,GAAG,MAAM,CAAC;GACvB;AACD,MAAI,GAAG,EAAE;AACP,QAAI,EAAE,CAAC;AACP,QAAI,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AACzB,UAAI,UAAU,EAAE;AACd,WAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;OAC5C,MAAM;AACL,WAAG,GAAG,GAAG,GAAG,GAAG,CAAC;OACjB;KACF;AACD,UAAM,IAAI,GAAG,CAAC;GACf;;AAED,MAAI,IAAI,GAAG,CAAC,EAAE;AACZ,UAAM,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACxC,QAAI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;AACtD,YAAM,GAAG,KAAK,GAAG,MAAM,GAAG,GAAG,CAAC;KAC/B;GACF;;AAED,QAAM,GAAG,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;AAC7C,SAAO,MAAM,CAAC;CACf;;AAED,QAAQ,CAAC,MAAM,GAAG,UAAU,OAAO,EAAE;AACnC,MAAI;AACF,WAAO,IAAI,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;GACtC,CAAC,OAAO,GAAG,EAAE,EAAE;CACjB,CAAC;;AAEF,QAAQ,CAAC,OAAO,GAAG,UAAU,GAAG,EAAE,OAAO,EAAE;AACzC,MAAI;AACF,WAAO,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;GAC3C,CAAC,OAAO,GAAG,EAAE;AACZ,WAAO,KAAK,CAAC;GACd;CACF,CAAC;;AAEF,QAAQ,CAAC,KAAK,GAAG,UAAU,GAAG,EAAE,OAAO,EAAE;AACvC,MAAI,GAAG,GAAG,GAAG,CAAC,MAAM;MAAE,CAAC,GAAG,CAAC,CAAC;AAC5B,MAAI,GAAG,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC;;AAEtB,MAAI,EAAE,GAAG,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AAClC,SAAO,CAAC,GAAG,GAAG,EAAE;AACd,QAAI,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACnB,QAAI,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AACjB,eAAS;KACV;AACD,OAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;GAClB;AACD,SAAO,GAAG,CAAC;CACZ,CAAC","file":"index-compiled.js","sourcesContent":["/*!\n * expand-brackets <https://github.com/jonschlinkert/expand-brackets>\n *\n * Copyright (c) 2015 Jon Schlinkert.\n * Licensed under the MIT license.\n */\n\n'use strict';\n\n/**\n * POSIX character classes\n */\n\nvar POSIX = {\n  alnum: 'a-zA-Z0-9',\n  alpha: 'a-zA-Z',\n  blank: ' \\\\t',\n  cntrl: '\\\\x00-\\\\x1F\\\\x7F',\n  digit: '0-9',\n  graph: '\\\\x21-\\\\x7E',\n  lower: 'a-z',\n  print: '\\\\x20-\\\\x7E',\n  punct: '!\"#$%&\\'()\\\\*+,-./:;<=>?@[\\\\]^_`{|}~',\n  space: ' \\\\t\\\\r\\\\n\\\\v\\\\f',\n  upper: 'A-Z',\n  word:  'A-Za-z0-9_',\n  xdigit: 'A-Fa-f0-9',\n};\n\n/**\n * Expose `brackets`\n */\n\nmodule.exports = brackets;\n\nfunction brackets(str) {\n  var negated = false;\n  if (str.indexOf('[^') !== -1) {\n    negated = true;\n    str = str.split('[^').join('[');\n  }\n  if (str.indexOf('[!') !== -1) {\n    negated = true;\n    str = str.split('[!').join('[');\n  }\n\n  var a = str.split('[');\n  var b = str.split(']');\n  var imbalanced = a.length !== b.length;\n\n  var parts = str.split(/(?::\\]\\[:|\\[?\\[:|:\\]\\]?)/);\n  var len = parts.length, i = 0;\n  var end = '', beg = '';\n  var res = [];\n\n  // start at the end (innermost) first\n  while (len--) {\n    var inner = parts[i++];\n    if (inner === '^[!' || inner === '[!') {\n      inner = '';\n      negated = true;\n    }\n\n    var prefix = negated ? '^' : '';\n    var ch = POSIX[inner];\n\n    if (ch) {\n      res.push('[' + prefix + ch + ']');\n    } else if (inner) {\n      if (/^\\[?\\w-\\w\\]?$/.test(inner)) {\n        if (i === parts.length) {\n          res.push('[' + prefix + inner);\n        } else if (i === 1) {\n          res.push(prefix + inner + ']');\n        } else {\n          res.push(prefix + inner);\n        }\n      } else {\n        if (i === 1) {\n          beg += inner;\n        } else if (i === parts.length) {\n          end += inner;\n        } else {\n          res.push('[' + prefix + inner + ']');\n        }\n      }\n    }\n  }\n\n  var result = res.join('|');\n  var rlen = res.length || 1;\n  if (rlen > 1) {\n    result = '(?:' + result + ')';\n    rlen = 1;\n  }\n  if (beg) {\n    rlen++;\n    if (beg.charAt(0) === '[') {\n      if (imbalanced) {\n        beg = '\\\\[' + beg.slice(1);\n      } else {\n        beg += ']';\n      }\n    }\n    result = beg + result;\n  }\n  if (end) {\n    rlen++;\n    if (end.slice(-1) === ']') {\n      if (imbalanced) {\n        end = end.slice(0, end.length - 1) + '\\\\]';\n      } else {\n        end = '[' + end;\n      }\n    }\n    result += end;\n  }\n\n  if (rlen > 1) {\n    result = result.split('][').join(']|[');\n    if (result.indexOf('|') !== -1 && !/\\(\\?/.test(result)) {\n      result = '(?:' + result + ')';\n    }\n  }\n\n  result = result.replace(/\\[+=|=\\]+/g, '\\\\b');\n  return result;\n}\n\nbrackets.makeRe = function (pattern) {\n  try {\n    return new RegExp(brackets(pattern));\n  } catch (err) {}\n};\n\nbrackets.isMatch = function (str, pattern) {\n  try {\n    return brackets.makeRe(pattern).test(str);\n  } catch (err) {\n    return false;\n  }\n};\n\nbrackets.match = function (arr, pattern) {\n  var len = arr.length, i = 0;\n  var res = arr.slice();\n\n  var re = brackets.makeRe(pattern);\n  while (i < len) {\n    var ele = arr[i++];\n    if (!re.test(ele)) {\n      continue;\n    }\n    res.splice(i, 1);\n  }\n  return res;\n};\n"]}