{"version":3,"sources":["package.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,MAAM,CAAC,OAAO,GAAG,OAAO,GAAG,QAAQ,CAAC;;AAEpC,OAAO,CAAC,KAAK,GAAG,oEAAoE,CAAC;;AAErF,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AACvB,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,GAAG,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC5B,IAAI,UAAU,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC;AACjD,IAAI,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,iBAAiB,CAAC;AAC5C,IAAI,WAAW,GAAG,EAAE,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC;AAC3C,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAE/B,SAAS,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE;AACnC,QAAI,IAAI,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC;AACpC,QAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC,CAAC;AACjE,QAAI,IAAI,GAAG,UAAU,CAAC,QAAQ,CAAC,YAAY,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACvD,QAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;AAC5B,QAAI,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,EAAC,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,CAAC;AAC/D,eAAW,CAAC,aAAa,EAAC,UAAS,KAAK,EAAE;AACtC,YAAI,CAAC,KAAK,EAAE;AACR,mBAAO,QAAQ,CAAC,IAAI,KAAK,CAAC,yBAAyB,GAAG,aAAa,GAAG,4CAA4C,CAAC,CAAC,CAAC;SACxH;AACD,YAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;AAClC,YAAI,WAAW,GAAG,SAAd,WAAW,CAAY,KAAK,EAAE;;;AAG9B,eAAG,CAAC,IAAI,CAAC,SAAS,EAAC,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;AAC5C,mBAAO,IAAI,CAAC;SACf,CAAC;AACF,cAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAC,UAAS,GAAG,EAAE;AACvC,gBAAI,GAAG,EAAE,MAAM,GAAG,CAAC;AACnB,gBAAI,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,CACjC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CACpB,EAAE,CAAC,OAAO,EAAE,UAAS,GAAG,EAAE;AACxB,oBAAI,GAAG,EAAG,OAAO,CAAC,KAAK,CAAC,GAAG,GAAC,YAAY,CAAC,IAAI,GAAC,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;AAClE,uBAAO,QAAQ,CAAC,GAAG,CAAC,CAAC;aACvB,CAAC,CACD,EAAE,CAAC,OAAO,EAAE,YAAW;AACrB,mBAAG,CAAC,IAAI,CAAC,SAAS,EAAC,oBAAoB,GAAG,OAAO,GAAG,GAAG,CAAC,CAAC;AACzD,uBAAO,QAAQ,EAAE,CAAC;aACpB,CAAC,CAAC;SACP,CAAC,CAAC;KACN,CAAC,CAAC;CACN","file":"package-compiled.js","sourcesContent":["\"use strict\";\n\nmodule.exports = exports = _package;\n\nexports.usage = 'Packs binary (and enclosing directory) into locally staged tarball';\n\nvar fs = require('fs');\nvar path = require('path');\nvar log = require('npmlog');\nvar versioning = require('./util/versioning.js');\nvar write = require('fs').createWriteStream;\nvar existsAsync = fs.exists || path.exists;\nvar mkdirp = require('mkdirp');\n\nfunction _package(gyp, argv, callback) {\n    var pack = require('tar-pack').pack;\n    var package_json = JSON.parse(fs.readFileSync('./package.json'));\n    var opts = versioning.evaluate(package_json, gyp.opts);\n    var from = opts.module_path;\n    var binary_module = path.join(from,opts.module_name + '.node');\n    existsAsync(binary_module,function(found) {\n        if (!found) {\n            return callback(new Error(\"Cannot package because \" + binary_module + \" missing: run `node-pre-gyp rebuild` first\"));\n        }\n        var tarball = opts.staged_tarball;\n        var filter_func = function(entry) {\n            // ensure directories are +x\n            // https://github.com/mapnik/node-mapnik/issues/262\n            log.info('package','packing ' + entry.path);\n            return true;\n        };\n        mkdirp(path.dirname(tarball),function(err) {\n            if (err) throw err;\n            pack(from, { filter: filter_func })\n             .pipe(write(tarball))\n             .on('error', function(err) {\n                if (err)  console.error('['+package_json.name+'] ' + err.message);\n                return callback(err);\n             })\n             .on('close', function() {\n                log.info('package','Binary staged at \"' + tarball + '\"');\n                return callback();\n             });\n        });\n    });\n}\n"]}