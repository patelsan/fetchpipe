{"version":3,"sources":["publish.js"],"names":[],"mappings":"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","file":"publish-compiled.js","sourcesContent":["\"use strict\";\n\nmodule.exports = exports = publish;\n\nexports.usage = 'Publishes pre-built binary (requires aws-sdk)';\n\nvar fs = require('fs');\nvar path = require('path');\nvar log = require('npmlog');\nvar versioning = require('./util/versioning.js');\nvar s3_setup = require('./util/s3_setup.js');\nvar existsAsync = fs.exists || path.exists;\nvar url = require('url');\nvar config = require('rc')(\"node_pre_gyp\",{acl:\"public-read\"});\n\nfunction publish(gyp, argv, callback) {\n    var AWS = require(\"aws-sdk\");\n    var package_json = JSON.parse(fs.readFileSync('./package.json'));\n    var opts = versioning.evaluate(package_json, gyp.opts);\n    var tarball = opts.staged_tarball;\n    existsAsync(tarball,function(found) {\n        if (!found) {\n            return callback(new Error(\"Cannot publish because \" + tarball + \" missing: run `node-pre-gyp package` first\"));\n        }\n        log.info('publish', 'Detecting s3 credentials');\n        s3_setup.detect(opts.hosted_path,config);\n        var key_name = url.resolve(config.prefix,opts.package_name);\n        log.info('publish', 'Authenticating with s3');\n        AWS.config.update(config);\n        var s3 =  new AWS.S3();\n        var s3_opts = {  Bucket: config.bucket,\n                         Key: key_name\n                      };\n        var remote_package = 'https://' + s3_opts.Bucket + '.s3.amazonaws.com/' + s3_opts.Key;\n        log.info('publish', 'Checking for existing binary at ' + remote_package);\n        s3.headObject(s3_opts, function(err, meta){\n            if (meta) log.info('publish', JSON.stringify(meta));\n            if (err && err.code == 'NotFound') {\n                // we are safe to publish because\n                // the object does not already exist\n                log.info('publish', 'Preparing to put object');\n                var s3_put = new AWS.S3();\n                var s3_put_opts = {  ACL: config.acl,\n                                     Body: fs.createReadStream(tarball),\n                                     Bucket: config.bucket,\n                                     Key: key_name\n                                  };\n                log.info('publish', 'Putting object');\n                try {\n                    s3_put.putObject(s3_put_opts, function(err, resp){\n                        log.info('publish', 'returned from putting object');\n                        if(err) {\n                           log.info('publish', 's3 putObject error: \"' + err + '\"');\n                           return callback(err);\n                        }\n                        if (resp) log.info('publish', 's3 putObject response: \"' + JSON.stringify(resp) + '\"');\n                        log.info('publish', 'successfully put object');\n                        console.log('['+package_json.name+'] published to ' + remote_package);\n                        return callback();\n                    });\n              } catch (err) {\n                   log.info('publish', 's3 putObject error: \"' + err + '\"');\n                   return callback(err);\n              }\n            } else if (err) {\n                log.info('publish', 's3 headObject error: \"' + err + '\"');\n                return callback(err);\n            } else {\n                log.error('publish','Cannot publish over existing version');\n                log.error('publish',\"Update the 'version' field in package.json and try again\");\n                log.error('publish','If the previous version was published in error see:');\n                log.error('publish','\\t node-pre-gyp unpublish');\n                return callback(new Error('Failed publishing to ' + remote_package));\n            }\n        });\n    });\n}\n"]}