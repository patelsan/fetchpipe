{"version":3,"sources":["unpublish.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,MAAM,CAAC,OAAO,GAAG,OAAO,GAAG,SAAS,CAAC;;AAErC,OAAO,CAAC,KAAK,GAAG,iDAAiD,CAAC;;AAElE,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AACvB,IAAI,GAAG,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC5B,IAAI,UAAU,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC;AACjD,IAAI,QAAQ,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC;AAC7C,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;AACzB,IAAI,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,cAAc,EAAC,EAAC,GAAG,EAAC,aAAa,EAAC,CAAC,CAAC;;AAE/D,SAAS,SAAS,CAAC,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE;AACpC,QAAI,GAAG,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAC7B,QAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC,CAAC;AACjE,QAAI,IAAI,GAAG,UAAU,CAAC,QAAQ,CAAC,YAAY,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACvD,YAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAC,MAAM,CAAC,CAAC;AACzC,OAAG,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC1B,QAAI,QAAQ,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,EAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AAC5D,QAAI,EAAE,GAAI,IAAI,GAAG,CAAC,EAAE,EAAE,CAAC;AACvB,QAAI,OAAO,GAAG,EAAG,MAAM,EAAE,MAAM,CAAC,MAAM;AACrB,WAAG,EAAE,QAAQ;KACf,CAAC;AAChB,MAAE,CAAC,UAAU,CAAC,OAAO,EAAE,UAAS,GAAG,EAAE,IAAI,EAAE;AACvC,YAAI,GAAG,IAAI,GAAG,CAAC,IAAI,IAAI,UAAU,EAAE;AAC/B,mBAAO,CAAC,GAAG,CAAC,GAAG,GAAC,YAAY,CAAC,IAAI,GAAC,uBAAuB,GAAG,OAAO,CAAC,MAAM,GAAG,oBAAoB,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;AACjH,mBAAO,QAAQ,EAAE,CAAC;SACrB,MAAM,IAAG,GAAG,EAAE;AACX,mBAAO,QAAQ,CAAC,GAAG,CAAC,CAAC;SACxB,MAAM;AACH,eAAG,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;AAC5C,cAAE,CAAC,YAAY,CAAC,OAAO,EAAE,UAAS,GAAG,EAAE,IAAI,EAAE;AACzC,oBAAI,GAAG,EAAE,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC;AAC9B,mBAAG,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;AAC/B,uBAAO,CAAC,GAAG,CAAC,GAAG,GAAC,YAAY,CAAC,IAAI,GAAC,6BAA6B,GAAG,OAAO,CAAC,MAAM,GAAG,oBAAoB,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;AACvH,uBAAO,QAAQ,EAAE,CAAC;aACrB,CAAC,CAAC;SACN;KACJ,CAAC,CAAC;CACN","file":"unpublish-compiled.js","sourcesContent":["\"use strict\";\n\nmodule.exports = exports = unpublish;\n\nexports.usage = 'Unpublishes pre-built binary (requires aws-sdk)';\n\nvar fs = require('fs');\nvar log = require('npmlog');\nvar versioning = require('./util/versioning.js');\nvar s3_setup = require('./util/s3_setup.js');\nvar url = require('url');\nvar config = require('rc')(\"node_pre_gyp\",{acl:\"public-read\"});\n\nfunction unpublish(gyp, argv, callback) {\n    var AWS = require(\"aws-sdk\");\n    var package_json = JSON.parse(fs.readFileSync('./package.json'));\n    var opts = versioning.evaluate(package_json, gyp.opts);\n    s3_setup.detect(opts.hosted_path,config);\n    AWS.config.update(config);\n    var key_name = url.resolve(config.prefix,opts.package_name);\n    var s3 =  new AWS.S3();\n    var s3_opts = {  Bucket: config.bucket,\n                     Key: key_name\n                  };\n    s3.headObject(s3_opts, function(err, meta) {\n        if (err && err.code == 'NotFound') {\n            console.log('['+package_json.name+'] Not found: https://' + s3_opts.Bucket + '.s3.amazonaws.com/' + s3_opts.Key);\n            return callback();\n        } else if(err) {\n            return callback(err);\n        } else {\n            log.info('unpublish', JSON.stringify(meta));\n            s3.deleteObject(s3_opts, function(err, resp) {\n                if (err) return callback(err);\n                log.info(JSON.stringify(resp));\n                console.log('['+package_json.name+'] Success: removed https://' + s3_opts.Bucket + '.s3.amazonaws.com/' + s3_opts.Key);\n                return callback();\n            });\n        }\n    });\n}\n"]}