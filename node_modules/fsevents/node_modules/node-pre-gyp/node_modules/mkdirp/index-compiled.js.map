{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["var path = require('path');\nvar fs = require('fs');\nvar _0777 = parseInt('0777', 8);\n\nmodule.exports = mkdirP.mkdirp = mkdirP.mkdirP = mkdirP;\n\nfunction mkdirP (p, opts, f, made) {\n    if (typeof opts === 'function') {\n        f = opts;\n        opts = {};\n    }\n    else if (!opts || typeof opts !== 'object') {\n        opts = { mode: opts };\n    }\n    \n    var mode = opts.mode;\n    var xfs = opts.fs || fs;\n    \n    if (mode === undefined) {\n        mode = _0777 & (~process.umask());\n    }\n    if (!made) made = null;\n    \n    var cb = f || function () {};\n    p = path.resolve(p);\n    \n    xfs.mkdir(p, mode, function (er) {\n        if (!er) {\n            made = made || p;\n            return cb(null, made);\n        }\n        switch (er.code) {\n            case 'ENOENT':\n                mkdirP(path.dirname(p), opts, function (er, made) {\n                    if (er) cb(er, made);\n                    else mkdirP(p, opts, cb, made);\n                });\n                break;\n\n            // In the case of any other error, just see if there's a dir\n            // there already.  If so, then hooray!  If not, then something\n            // is borked.\n            default:\n                xfs.stat(p, function (er2, stat) {\n                    // if the stat fails, then that's super weird.\n                    // let the original error be the failure reason.\n                    if (er2 || !stat.isDirectory()) cb(er, made)\n                    else cb(null, made);\n                });\n                break;\n        }\n    });\n}\n\nmkdirP.sync = function sync (p, opts, made) {\n    if (!opts || typeof opts !== 'object') {\n        opts = { mode: opts };\n    }\n    \n    var mode = opts.mode;\n    var xfs = opts.fs || fs;\n    \n    if (mode === undefined) {\n        mode = _0777 & (~process.umask());\n    }\n    if (!made) made = null;\n\n    p = path.resolve(p);\n\n    try {\n        xfs.mkdirSync(p, mode);\n        made = made || p;\n    }\n    catch (err0) {\n        switch (err0.code) {\n            case 'ENOENT' :\n                made = sync(path.dirname(p), opts, made);\n                sync(p, opts, made);\n                break;\n\n            // In the case of any other error, just see if there's a dir\n            // there already.  If so, then hooray!  If not, then something\n            // is borked.\n            default:\n                var stat;\n                try {\n                    stat = xfs.statSync(p);\n                }\n                catch (err1) {\n                    throw err0;\n                }\n                if (!stat.isDirectory()) throw err0;\n                break;\n        }\n    }\n\n    return made;\n};\n"]}