{"version":3,"sources":["cursorPosition.js"],"names":[],"mappings":";;AAEA,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAA;AACxB,IAAI,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;;;AAG3C,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,CAAA;AACtB,GAAG,CAAC,IAAI,CAAC,CAAA;;AAET,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,CAAC,EAAE;AACtC,MAAI,KAAK,GAAG,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAA;AACjD,MAAI,KAAK,EAAE;AACT,QAAI,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;AAChD,WAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAA;GAClB;;;AAGD,KAAG,CAAC,KAAK,CAAC,CAAA;AACV,SAAO,CAAC,KAAK,CAAC,KAAK,EAAE,CAAA;CACtB,CAAC,CAAA;;;AAIF,MAAM,CAAC,aAAa,EAAE,CAAA;;AAEtB,SAAS,GAAG,CAAE,IAAI,EAAE;AAClB,MAAI,OAAO,CAAC,KAAK,CAAC,UAAU,EAAE;AAC5B,WAAO,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAA;GAC/B,MAAM;AACL,OAAG,CAAC,UAAU,CAAC,IAAI,CAAC,CAAA;GACrB;CACF","file":"cursorPosition-compiled.js","sourcesContent":["#!/usr/bin/env node\n\nvar tty = require('tty')\nvar cursor = require('../')(process.stdout)\n\n// listen for the queryPosition report on stdin\nprocess.stdin.resume()\nraw(true)\n\nprocess.stdin.once('data', function (b) {\n  var match = /\\[(\\d+)\\;(\\d+)R$/.exec(b.toString())\n  if (match) {\n    var xy = match.slice(1, 3).reverse().map(Number)\n    console.error(xy)\n  }\n\n  // cleanup and close stdin\n  raw(false)\n  process.stdin.pause()\n})\n\n\n// send the query position request code to stdout\ncursor.queryPosition()\n\nfunction raw (mode) {\n  if (process.stdin.setRawMode) {\n    process.stdin.setRawMode(mode)\n  } else {\n    tty.setRawMode(mode)\n  }\n}\n"]}