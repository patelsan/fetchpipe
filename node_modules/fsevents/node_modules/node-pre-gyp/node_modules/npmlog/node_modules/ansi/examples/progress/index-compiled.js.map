{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["#!/usr/bin/env node\n\nvar assert = require('assert')\n  , ansi = require('../../')\n\nfunction Progress (stream, width) {\n  this.cursor = ansi(stream)\n  this.delta = this.cursor.newlines\n  this.width = width | 0 || 10\n  this.open = '['\n  this.close = ']'\n  this.complete = 'â–ˆ'\n  this.incomplete = '_'\n\n  // initial render\n  this.progress = 0\n}\n\nObject.defineProperty(Progress.prototype, 'progress', {\n    get: get\n  , set: set\n  , configurable: true\n  , enumerable: true\n})\n\nfunction get () {\n  return this._progress\n}\n\nfunction set (v) {\n  this._progress = Math.max(0, Math.min(v, 100))\n\n  var w = this.width - this.complete.length - this.incomplete.length\n    , n = w * (this._progress / 100) | 0\n    , i = w - n\n    , com = c(this.complete, n)\n    , inc = c(this.incomplete, i)\n    , delta = this.cursor.newlines - this.delta\n\n  assert.equal(com.length + inc.length, w)\n\n  if (delta > 0) {\n    this.cursor.up(delta)\n    this.delta = this.cursor.newlines\n  }\n\n  this.cursor\n    .horizontalAbsolute(0)\n    .eraseLine(2)\n    .fg.white()\n    .write(this.open)\n    .fg.grey()\n    .bold()\n    .write(com)\n    .resetBold()\n    .write(inc)\n    .fg.white()\n    .write(this.close)\n    .fg.reset()\n    .write('\\n')\n}\n\nfunction c (char, length) {\n  return Array.apply(null, Array(length)).map(function () {\n    return char\n  }).join('')\n}\n\n\n\n\n// Usage\nvar width = parseInt(process.argv[2], 10) || process.stdout.getWindowSize()[0] / 2\n  , p = new Progress(process.stdout, width)\n\n;(function tick () {\n  p.progress += Math.random() * 5\n  p.cursor\n    .eraseLine(2)\n    .write('Progress: ')\n    .bold().write(p.progress.toFixed(2))\n    .write('%')\n    .resetBold()\n    .write('\\n')\n  if (p.progress < 100)\n    setTimeout(tick, 100)\n})()\n"]}