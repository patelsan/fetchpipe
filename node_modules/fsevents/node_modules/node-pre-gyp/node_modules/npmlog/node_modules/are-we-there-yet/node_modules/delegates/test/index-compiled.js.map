{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["\nvar assert = require('assert');\nvar delegate = require('..');\n\ndescribe('.method(name)', function(){\n  it('should delegate methods', function(){\n    var obj = {};\n\n    obj.request = {\n      foo: function(bar){\n        assert(this == obj.request);\n        return bar;\n      }\n    };\n\n    delegate(obj, 'request').method('foo');\n\n    obj.foo('something').should.equal('something');\n  })\n})\n\ndescribe('.getter(name)', function(){\n  it('should delegate getters', function(){\n    var obj = {};\n\n    obj.request = {\n      get type() {\n        return 'text/html';\n      }\n    }\n\n    delegate(obj, 'request').getter('type');\n\n    obj.type.should.equal('text/html');\n  })\n})\n\ndescribe('.setter(name)', function(){\n  it('should delegate setters', function(){\n    var obj = {};\n\n    obj.request = {\n      get type() {\n        return this._type.toUpperCase();\n      },\n\n      set type(val) {\n        this._type = val;\n      }\n    }\n\n    delegate(obj, 'request').setter('type');\n\n    obj.type = 'hey';\n    obj.request.type.should.equal('HEY');\n  })\n})\n\ndescribe('.access(name)', function(){\n  it('should delegate getters and setters', function(){\n    var obj = {};\n\n    obj.request = {\n      get type() {\n        return this._type.toUpperCase();\n      },\n\n      set type(val) {\n        this._type = val;\n      }\n    }\n\n    delegate(obj, 'request').access('type');\n\n    obj.type = 'hey';\n    obj.type.should.equal('HEY');\n  })\n})\n\ndescribe('.fluent(name)', function () {\n  it('should delegate in a fluent fashion', function () {\n    var obj = {\n      settings: {\n        env: 'development'\n      }\n    };\n\n    delegate(obj, 'settings').fluent('env');\n\n    obj.env().should.equal('development');\n    obj.env('production').should.equal(obj);\n    obj.settings.env.should.equal('production');\n  })\n})\n"]}