{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA,YAAY,CAAA;AACZ,IAAI,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAA;AAC9B,IAAI,aAAa,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAA;;AAE7C,IAAI,CAAC,SAAS,EAAE,UAAU,CAAC,EAAE;AAC3B,GAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;AACT,MAAI,UAAU,GAAG,aAAa,CAAC,aAAa,EAAE;AAC5C,MAAE,EAAE,EAAE,IAAI,EAAE,gBAAY;AAAE,eAAO,YAAY,CAAA;OAAE,EAAE;GAClD,CAAC,CAAA;AACF,GAAC,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,wCAAwC,CAAC,CAAA;CACnE,CAAC,CAAA;AACF,IAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE;AAC5B,GAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;AACT,MAAI,UAAU,GAAG,aAAa,CAAC,aAAa,EAAE;AAC5C,MAAE,EAAE,EAAE,IAAI,EAAE,gBAAY;AAAE,eAAO,OAAO,CAAA;OAAE,EAAE;AAC5C,iBAAa,EAAE,EAAE,IAAI,EAAE,cAAU,GAAG,EAAC,EAAE,EAAE;AAAE,UAAE,CAAC,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC,CAAA;OAAE,EAAE;GAC9E,CAAC,CAAA;AACF,SAAO,CAAC,GAAG,CAAC,IAAI,GAAG,aAAa,CAAA;AAChC,SAAO,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAA;AACzB,GAAC,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,4BAA4B,CAAC,CAAA;AACtD,SAAO,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAA;AACvB,SAAO,CAAC,GAAG,CAAC,MAAM,GAAG,aAAa,CAAA;AAClC,GAAC,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,wBAAwB,CAAC,CAAA;AAClD,SAAO,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAA;AACzB,GAAC,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,KAAK,EAAE,uCAAuC,CAAC,CAAA;CACnE,CAAC,CAAA","file":"index-compiled.js","sourcesContent":["\"use strict\"\nvar test = require(\"tap\").test\nvar requireInject = require(\"require-inject\")\n\ntest(\"Windows\", function (t) {\n  t.plan(1)\n  var hasUnicode = requireInject(\"../index.js\", {\n    os: { type: function () { return \"Windows_NT\" } }\n  })\n  t.is(hasUnicode(), true, \"Windows is assumed to be unicode aware\")\n})\ntest(\"Unix Env\", function (t) {\n  t.plan(3)\n  var hasUnicode = requireInject(\"../index.js\", {\n    os: { type: function () { return \"Linux\" } },\n    child_process: { exec: function (cmd,cb) { cb(new Error(\"not available\")) } }\n  })\n  process.env.LANG = \"en_US.UTF-8\"\n  process.env.LC_ALL = null\n  t.is(hasUnicode(), true, \"Linux with a UTF8 language\")\n  process.env.LANG = null\n  process.env.LC_ALL = \"en_US.UTF-8\"\n  t.is(hasUnicode(), true, \"Linux with UTF8 locale\")\n  process.env.LC_ALL = null\n  t.is(hasUnicode(), false, \"Linux without UTF8 language or locale\")\n})\n"]}