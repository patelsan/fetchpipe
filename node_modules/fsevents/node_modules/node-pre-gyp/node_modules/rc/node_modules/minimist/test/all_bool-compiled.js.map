{"version":3,"sources":["all_bool.js"],"names":[],"mappings":";;AAAA,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;AAC3B,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;;AAE3B,IAAI,CAAC,mDAAmD,EAAE,UAAU,CAAC,EAAE;AACnE,QAAI,IAAI,GAAG,KAAK,CAAC,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC,EAAE;AACvC,eAAO,EAAE,IAAI;KAChB,CAAC,CAAC;;AAEH,KAAC,CAAC,SAAS,CAAC,IAAI,EAAE;AACd,YAAI,EAAE,IAAI;AACV,SAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;KACpB,CAAC,CAAC;;AAEH,KAAC,CAAC,SAAS,CAAC,OAAO,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AACzC,KAAC,CAAC,GAAG,EAAE,CAAC;CACX,CAAC,CAAC;;AAEH,IAAI,CAAC,6EAA6E,EAAE,UAAU,CAAC,EAAE;AAC7F,QAAI,IAAI,GAAG,KAAK,CAAC,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,CAAC,EAAE;AACnE,eAAO,EAAE,IAAI;KAChB,CAAC,CAAC;;AAEH,KAAC,CAAC,SAAS,CAAC,IAAI,EAAE;AACd,YAAI,EAAE,IAAI;AACV,aAAK,EAAE,MAAM;AACb,SAAC,EAAE,EAAE;AACL,SAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;KACpB,CAAC,CAAC;;AAEH,KAAC,CAAC,SAAS,CAAC,OAAO,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AACzC,KAAC,CAAC,GAAG,EAAE,CAAC;CACX,CAAC,CAAC","file":"all_bool-compiled.js","sourcesContent":["var parse = require('../');\nvar test = require('tape');\n\ntest('flag boolean true (default all --args to boolean)', function (t) {\n    var argv = parse(['moo', '--honk', 'cow'], {\n        boolean: true\n    });\n    \n    t.deepEqual(argv, {\n        honk: true,\n        _: ['moo', 'cow']\n    });\n    \n    t.deepEqual(typeof argv.honk, 'boolean');\n    t.end();\n});\n\ntest('flag boolean true only affects double hyphen arguments without equals signs', function (t) {\n    var argv = parse(['moo', '--honk', 'cow', '-p', '55', '--tacos=good'], {\n        boolean: true\n    });\n    \n    t.deepEqual(argv, {\n        honk: true,\n        tacos: 'good',\n        p: 55,\n        _: ['moo', 'cow']\n    });\n    \n    t.deepEqual(typeof argv.honk, 'boolean');\n    t.end();\n});\n"]}