{"version":3,"sources":["settle.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;AACb,MAAM,CAAC,OAAO,GACV,UAAS,OAAO,EAAE,YAAY,EAAE;AACpC,QAAI,iBAAiB,GAAG,OAAO,CAAC,iBAAiB,CAAC;AAClD,QAAI,IAAI,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;;AAEhC,aAAS,mBAAmB,CAAC,MAAM,EAAE;AACjC,YAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;KAC7B;AACD,QAAI,CAAC,QAAQ,CAAC,mBAAmB,EAAE,YAAY,CAAC,CAAC;;AAEjD,uBAAmB,CAAC,SAAS,CAAC,gBAAgB,GAAG,UAAU,KAAK,EAAE,UAAU,EAAE;AAC1E,YAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,UAAU,CAAC;AACjC,YAAI,aAAa,GAAG,EAAE,IAAI,CAAC,cAAc,CAAC;AAC1C,YAAI,aAAa,IAAI,IAAI,CAAC,OAAO,EAAE;AAC/B,gBAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC/B;KACJ,CAAC;;AAEF,uBAAmB,CAAC,SAAS,CAAC,iBAAiB,GAAG,UAAU,KAAK,EAAE,KAAK,EAAE;AACtE,YAAI,GAAG,GAAG,IAAI,iBAAiB,EAAE,CAAC;AAClC,WAAG,CAAC,SAAS,GAAG,SAAS,CAAC;AAC1B,WAAG,CAAC,aAAa,GAAG,KAAK,CAAC;AAC1B,YAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;KACrC,CAAC;AACF,uBAAmB,CAAC,SAAS,CAAC,gBAAgB,GAAG,UAAU,MAAM,EAAE,KAAK,EAAE;AACtE,YAAI,GAAG,GAAG,IAAI,iBAAiB,EAAE,CAAC;AAClC,WAAG,CAAC,SAAS,GAAG,SAAS,CAAC;AAC1B,WAAG,CAAC,aAAa,GAAG,MAAM,CAAC;AAC3B,YAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;KACrC,CAAC;;AAEF,WAAO,CAAC,MAAM,GAAG,UAAU,QAAQ,EAAE;AACjC,eAAO,IAAI,mBAAmB,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,CAAC;KACtD,CAAC;;AAEF,WAAO,CAAC,SAAS,CAAC,MAAM,GAAG,YAAY;AACnC,eAAO,IAAI,mBAAmB,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;KAClD,CAAC;CACD,CAAC","file":"settle-compiled.js","sourcesContent":["\"use strict\";\nmodule.exports =\n    function(Promise, PromiseArray) {\nvar PromiseInspection = Promise.PromiseInspection;\nvar util = require(\"./util.js\");\n\nfunction SettledPromiseArray(values) {\n    this.constructor$(values);\n}\nutil.inherits(SettledPromiseArray, PromiseArray);\n\nSettledPromiseArray.prototype._promiseResolved = function (index, inspection) {\n    this._values[index] = inspection;\n    var totalResolved = ++this._totalResolved;\n    if (totalResolved >= this._length) {\n        this._resolve(this._values);\n    }\n};\n\nSettledPromiseArray.prototype._promiseFulfilled = function (value, index) {\n    var ret = new PromiseInspection();\n    ret._bitField = 268435456;\n    ret._settledValue = value;\n    this._promiseResolved(index, ret);\n};\nSettledPromiseArray.prototype._promiseRejected = function (reason, index) {\n    var ret = new PromiseInspection();\n    ret._bitField = 134217728;\n    ret._settledValue = reason;\n    this._promiseResolved(index, ret);\n};\n\nPromise.settle = function (promises) {\n    return new SettledPromiseArray(promises).promise();\n};\n\nPromise.prototype.settle = function () {\n    return new SettledPromiseArray(this).promise();\n};\n};\n"]}