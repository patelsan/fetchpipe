{"version":3,"sources":["utils.js"],"names":[],"mappings":";;;;AAEA,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;;;;AAK3B,IAAI,SAAS,GAAG,EAAE,CAAC;;AAGnB,OAAO,CAAC,OAAO,GAAG,YAAY;;AAE1B,WAAO,OAAO,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC;CAC7C,CAAC;;;;;AAMF,SAAS,CAAC,eAAe,GAAG,yEAAyE,CAAC;;AAGtG,OAAO,CAAC,SAAS,GAAG,UAAU,GAAG,EAAE,cAAc,EAAE;;AAE/C,kBAAc,GAAI,cAAc,GAAG,cAAc,CAAC,WAAW,EAAE,GAAG,MAAM,AAAC,CAAC;AAC1E,QAAI,UAAU,GAAG,GAAG,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;AAC7C,QAAI,CAAC,UAAU,EAAE;AACb,eAAO,IAAI,CAAC;KACf;;AAED,QAAI,SAAS,GAAG,UAAU,CAAC,KAAK,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;AAC5D,QAAI,CAAC,SAAS,EAAE;AACZ,eAAO,IAAI,CAAC;KACf;;AAED,WAAO;AACH,YAAI,EAAE,SAAS,CAAC,CAAC,CAAC;AAClB,YAAI,EAAG,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAI,GAAG,CAAC,UAAU,IAAI,GAAG,CAAC,UAAU,CAAC,SAAS,GAAG,GAAG,GAAG,EAAE,AAAC,AAAC;KAChG,CAAC;CACL,CAAC;;;;AAKF,OAAO,CAAC,gBAAgB,GAAG,UAAU,MAAM,EAAE;;AAEzC,QAAI,CAAC,MAAM,EAAE;AACT,eAAO,EAAE,CAAC;KACb;;AAED,WAAO,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;CACpD,CAAC;;;;AAKF,OAAO,CAAC,YAAY,GAAG,UAAU,GAAG,EAAE,OAAO,EAAE;;AAE3C,QAAI,CAAC,GAAG,CAAC,OAAO,EAAE;AACd,eAAO,GAAG,CAAC;KACd;;;;AAID,QAAI,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;AAChC,YAAI,IAAI,GAAG,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE,OAAO,CAAC,cAAc,CAAC,CAAC;AAC1D,YAAI,CAAC,IAAI,EAAE;AACP,mBAAO,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;SAC3C;KACJ;;AAED,QAAI,OAAO,GAAG;AACV,cAAM,EAAE,GAAG,CAAC,MAAM;AAClB,WAAG,EAAE,GAAG,CAAC,GAAG;AACZ,YAAI,EAAE,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI;AAC/B,YAAI,EAAE,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI;AAC/B,qBAAa,EAAE,GAAG,CAAC,OAAO,CAAC,aAAa;AACxC,mBAAW,EAAE,GAAG,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,EAAE;KACjD,CAAC;;AAEF,WAAO,OAAO,CAAC;CAClB,CAAC;;AAGF,OAAO,CAAC,GAAG,GAAG,UAAU,mBAAmB,EAAE;;AAEzC,WAAO,IAAI,CAAC,GAAG,EAAE,IAAI,mBAAmB,IAAI,CAAC,CAAA,AAAC,CAAC;CAClD,CAAC;;AAGF,OAAO,CAAC,OAAO,GAAG,UAAU,mBAAmB,EAAE;;AAE7C,WAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,GAAG,IAAI,CAAC,CAAC;CAC9D,CAAC;;;;AAKF,OAAO,CAAC,wBAAwB,GAAG,UAAU,MAAM,EAAE,IAAI,EAAE;;AAEvD,QAAI,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;;AAEzE,QAAI,CAAC,MAAM,EAAE;AACT,eAAO,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;KAC1C;;AAED,QAAI,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;AACtD,QAAI,CAAC,WAAW,EAAE;AACd,eAAO,IAAI,CAAC,UAAU,CAAC,uBAAuB,CAAC,CAAC;KACnD;;AAED,QAAI,MAAM,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;AAC5B,QAAI,MAAM,CAAC,WAAW,EAAE,KAAK,MAAM,EAAE;AACjC,eAAO,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;KAC1C;;AAED,QAAI,gBAAgB,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;AACtC,QAAI,CAAC,gBAAgB,EAAE;AACnB,eAAO,IAAI,CAAC,UAAU,CAAC,uBAAuB,CAAC,CAAC;KACnD;;AAED,QAAI,UAAU,GAAG,EAAE,CAAC;AACpB,QAAI,YAAY,GAAG,EAAE,CAAC;AACtB,QAAI,MAAM,GAAG,gBAAgB,CAAC,OAAO,CAAC,iCAAiC,EAAE,UAAU,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;;;;AAI3F,YAAI,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE;AACzB,wBAAY,GAAG,qBAAqB,GAAG,EAAE,CAAC;AAC1C,mBAAO;SACV;;;;AAID,YAAI,EAAE,CAAC,KAAK,CAAC,yDAAyD,CAAC,KAAK,IAAI,EAAE;AAC9E,wBAAY,GAAG,uBAAuB,GAAG,EAAE,CAAC;AAC5C,mBAAO;SACV;;;;AAID,YAAI,UAAU,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE;AAC/B,wBAAY,GAAG,uBAAuB,GAAG,EAAE,CAAC;AAC5C,mBAAO;SACV;;AAED,kBAAU,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;AACpB,eAAO,EAAE,CAAC;KACb,CAAC,CAAC;;AAEH,QAAI,MAAM,KAAK,EAAE,EAAE;AACf,eAAO,IAAI,CAAC,UAAU,CAAC,YAAY,IAAI,mBAAmB,CAAC,CAAC;KAC/D;;AAED,WAAO,UAAU,CAAC;CACrB,CAAC;;AAGF,OAAO,CAAC,YAAY,GAAG,UAAU,OAAO,EAAE,UAAU,EAAE;;AAElD,WAAO,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;CACzD,CAAC","file":"utils-compiled.js","sourcesContent":["// Load modules\n\nvar Sntp = require('sntp');\nvar Boom = require('boom');\n\n\n// Declare internals\n\nvar internals = {};\n\n\nexports.version = function () {\n\n    return require('../package.json').version;\n};\n\n\n// Extract host and port from request\n\n//                                            $1                            $2\ninternals.hostHeaderRegex = /^(?:(?:\\r\\n)?\\s)*((?:[^:]+)|(?:\\[[^\\]]+\\]))(?::(\\d+))?(?:(?:\\r\\n)?\\s)*$/;              // (IPv4, hostname)|(IPv6)\n\n\nexports.parseHost = function (req, hostHeaderName) {\n\n    hostHeaderName = (hostHeaderName ? hostHeaderName.toLowerCase() : 'host');\n    var hostHeader = req.headers[hostHeaderName];\n    if (!hostHeader) {\n        return null;\n    }\n\n    var hostParts = hostHeader.match(internals.hostHeaderRegex);\n    if (!hostParts) {\n        return null;\n    }\n\n    return {\n        name: hostParts[1],\n        port: (hostParts[2] ? hostParts[2] : (req.connection && req.connection.encrypted ? 443 : 80))\n    };\n};\n\n\n// Parse Content-Type header content\n\nexports.parseContentType = function (header) {\n\n    if (!header) {\n        return '';\n    }\n\n    return header.split(';')[0].trim().toLowerCase();\n};\n\n\n// Convert node's  to request configuration object\n\nexports.parseRequest = function (req, options) {\n\n    if (!req.headers) {\n        return req;\n    }\n\n    // Obtain host and port information\n\n    if (!options.host || !options.port) {\n        var host = exports.parseHost(req, options.hostHeaderName);\n        if (!host) {\n            return new Error('Invalid Host header');\n        }\n    }\n\n    var request = {\n        method: req.method,\n        url: req.url,\n        host: options.host || host.name,\n        port: options.port || host.port,\n        authorization: req.headers.authorization,\n        contentType: req.headers['content-type'] || ''\n    };\n\n    return request;\n};\n\n\nexports.now = function (localtimeOffsetMsec) {\n\n    return Sntp.now() + (localtimeOffsetMsec || 0);\n};\n\n\nexports.nowSecs = function (localtimeOffsetMsec) {\n\n    return Math.floor(exports.now(localtimeOffsetMsec) / 1000);\n};\n\n\n// Parse Hawk HTTP Authorization header\n\nexports.parseAuthorizationHeader = function (header, keys) {\n\n    keys = keys || ['id', 'ts', 'nonce', 'hash', 'ext', 'mac', 'app', 'dlg'];\n\n    if (!header) {\n        return Boom.unauthorized(null, 'Hawk');\n    }\n\n    var headerParts = header.match(/^(\\w+)(?:\\s+(.*))?$/);       // Header: scheme[ something]\n    if (!headerParts) {\n        return Boom.badRequest('Invalid header syntax');\n    }\n\n    var scheme = headerParts[1];\n    if (scheme.toLowerCase() !== 'hawk') {\n        return Boom.unauthorized(null, 'Hawk');\n    }\n\n    var attributesString = headerParts[2];\n    if (!attributesString) {\n        return Boom.badRequest('Invalid header syntax');\n    }\n\n    var attributes = {};\n    var errorMessage = '';\n    var verify = attributesString.replace(/(\\w+)=\"([^\"\\\\]*)\"\\s*(?:,\\s*|$)/g, function ($0, $1, $2) {\n\n        // Check valid attribute names\n\n        if (keys.indexOf($1) === -1) {\n            errorMessage = 'Unknown attribute: ' + $1;\n            return;\n        }\n\n        // Allowed attribute value characters: !#$%&'()*+,-./:;<=>?@[]^_`{|}~ and space, a-z, A-Z, 0-9\n\n        if ($2.match(/^[ \\w\\!#\\$%&'\\(\\)\\*\\+,\\-\\.\\/\\:;<\\=>\\?@\\[\\]\\^`\\{\\|\\}~]+$/) === null) {\n            errorMessage = 'Bad attribute value: ' + $1;\n            return;\n        }\n\n        // Check for duplicates\n\n        if (attributes.hasOwnProperty($1)) {\n            errorMessage = 'Duplicate attribute: ' + $1;\n            return;\n        }\n\n        attributes[$1] = $2;\n        return '';\n    });\n\n    if (verify !== '') {\n        return Boom.badRequest(errorMessage || 'Bad header format');\n    }\n\n    return attributes;\n};\n\n\nexports.unauthorized = function (message, attributes) {\n\n    return Boom.unauthorized(message, 'Hawk', attributes);\n};\n\n"]}