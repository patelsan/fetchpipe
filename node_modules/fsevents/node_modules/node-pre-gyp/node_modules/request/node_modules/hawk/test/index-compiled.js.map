{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;AAEA,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;AACzB,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;;;;AAKzB,IAAI,SAAS,GAAG,EAAE,CAAC;;;;AAKnB,IAAI,GAAG,GAAG,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC;AACrC,IAAI,QAAQ,GAAG,GAAG,CAAC,UAAU,CAAC;AAC9B,IAAI,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;AAClB,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;;AAGzB,QAAQ,CAAC,MAAM,EAAE,YAAY;;AAEzB,QAAI,eAAe,GAAG,SAAlB,eAAe,CAAa,EAAE,EAAE,QAAQ,EAAE;;AAE1C,YAAI,WAAW,GAAG;AACd,cAAE,EAAE,EAAE;AACN,eAAG,EAAE,6CAA6C;AAClD,qBAAS,EAAG,EAAE,KAAK,GAAG,GAAG,MAAM,GAAG,QAAQ,AAAC;AAC3C,gBAAI,EAAE,OAAO;SAChB,CAAC;;AAEF,eAAO,QAAQ,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;KACtC,CAAC;;AAEF,MAAE,CAAC,+DAA+D,EAAE,UAAU,IAAI,EAAE;;AAEhF,YAAI,GAAG,GAAG;AACN,kBAAM,EAAE,KAAK;AACb,eAAG,EAAE,sBAAsB;AAC3B,gBAAI,EAAE,aAAa;AACnB,gBAAI,EAAE,IAAI;SACb,CAAC;;AAEF,uBAAe,CAAC,QAAQ,EAAE,UAAU,GAAG,EAAE,WAAW,EAAE;;AAElD,eAAG,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,6CAA6C,CAAC,EAAE,GAAG,CAAC,MAAM,EAAE,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG,EAAE,eAAe,EAAE,CAAC,CAAC,KAAK,CAAC;AACvK,kBAAM,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;;AAErC,gBAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE,eAAe,EAAE,EAAE,EAAE,UAAU,GAAG,EAAE,WAAW,EAAE,SAAS,EAAE;;AAEtF,sBAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;AAC3B,sBAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAC3C,sBAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;AAChD,oBAAI,EAAE,CAAC;aACV,CAAC,CAAC;SACN,CAAC,CAAC;KACN,CAAC,CAAC;;AAEH,MAAE,CAAC,8DAA8D,EAAE,UAAU,IAAI,EAAE;;AAE/E,YAAI,GAAG,GAAG;AACN,kBAAM,EAAE,MAAM;AACd,eAAG,EAAE,sBAAsB;AAC3B,mBAAO,EAAE;AACL,oBAAI,EAAE,kBAAkB;AACxB,8BAAc,EAAE,gBAAgB;aACnC;SACJ,CAAC;;AAEF,YAAI,OAAO,GAAG,yBAAyB,CAAC;;AAExC,uBAAe,CAAC,QAAQ,EAAE,UAAU,GAAG,EAAE,WAAW,EAAE;;AAElD,gBAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,6CAA6C,EAAE,GAAG,CAAC,MAAM,EAAE,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG,EAAE,eAAe,EAAE,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,GAAG,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;AAC9M,eAAG,CAAC,OAAO,CAAC,aAAa,GAAG,SAAS,CAAC,KAAK,CAAC;;AAE5C,gBAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE,eAAe,EAAE,EAAE,EAAE,UAAU,GAAG,EAAE,WAAW,EAAE,SAAS,EAAE;;AAEtF,sBAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;AAC3B,sBAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAC3C,sBAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;AAChD,sBAAM,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,GAAG,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;;AAErH,oBAAI,GAAG,GAAG;AACN,2BAAO,EAAE;AACL,sCAAc,EAAE,YAAY;qBAC/B;iBACJ,CAAC;;AAEF,mBAAG,CAAC,OAAO,CAAC,sBAAsB,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,EAAE,EAAE,OAAO,EAAE,YAAY,EAAE,WAAW,EAAE,YAAY,EAAE,GAAG,EAAE,mBAAmB,EAAE,CAAC,CAAC;AACjK,sBAAM,CAAC,GAAG,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;;AAEvD,sBAAM,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE,WAAW,EAAE,SAAS,EAAE,EAAE,OAAO,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACxG,oBAAI,EAAE,CAAC;aACV,CAAC,CAAC;SACN,CAAC,CAAC;KACN,CAAC,CAAC;;AAEH,MAAE,CAAC,sEAAsE,EAAE,UAAU,IAAI,EAAE;;AAEvF,YAAI,GAAG,GAAG;AACN,kBAAM,EAAE,MAAM;AACd,eAAG,EAAE,6CAA6C;AAClD,mBAAO,EAAE;AACL,oBAAI,EAAE,kBAAkB;AACxB,8BAAc,EAAE,gBAAgB;aACnC;SACJ,CAAC;;AAEF,YAAI,OAAO,GAAG,yBAAyB,CAAC;;AAExC,uBAAe,CAAC,QAAQ,EAAE,UAAU,GAAG,EAAE,WAAW,EAAE;;AAElD,gBAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,6CAA6C,EAAE,GAAG,CAAC,MAAM,EAAE,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG,EAAE,eAAe,EAAE,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,GAAG,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;AAC9M,eAAG,CAAC,OAAO,CAAC,aAAa,GAAG,SAAS,CAAC,KAAK,CAAC;;AAE5C,gBAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE,eAAe,EAAE,EAAE,EAAE,UAAU,GAAG,EAAE,WAAW,EAAE,SAAS,EAAE;;AAEtF,sBAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;AAC3B,sBAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAC3C,sBAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;AAChD,sBAAM,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,GAAG,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;;AAErH,oBAAI,GAAG,GAAG;AACN,2BAAO,EAAE;AACL,sCAAc,EAAE,YAAY;qBAC/B;iBACJ,CAAC;;AAEF,mBAAG,CAAC,OAAO,CAAC,sBAAsB,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,EAAE,EAAE,OAAO,EAAE,YAAY,EAAE,WAAW,EAAE,YAAY,EAAE,GAAG,EAAE,mBAAmB,EAAE,CAAC,CAAC;AACjK,sBAAM,CAAC,GAAG,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;;AAEvD,sBAAM,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE,WAAW,EAAE,SAAS,EAAE,EAAE,OAAO,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACxG,oBAAI,EAAE,CAAC;aACV,CAAC,CAAC;SACN,CAAC,CAAC;KACN,CAAC,CAAC;;AAEH,MAAE,CAAC,0EAA0E,EAAE,UAAU,IAAI,EAAE;;AAE3F,YAAI,GAAG,GAAG;AACN,kBAAM,EAAE,MAAM;AACd,eAAG,EAAE,sBAAsB;AAC3B,mBAAO,EAAE;AACL,oBAAI,EAAE,kBAAkB;AACxB,8BAAc,EAAE,gBAAgB;aACnC;SACJ,CAAC;;AAEF,YAAI,OAAO,GAAG,yBAAyB,CAAC;;AAExC,uBAAe,CAAC,QAAQ,EAAE,UAAU,GAAG,EAAE,WAAW,EAAE;;AAElD,gBAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,6CAA6C,EAAE,GAAG,CAAC,MAAM,EAAE,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG,EAAE,eAAe,EAAE,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,GAAG,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;AAC9M,eAAG,CAAC,OAAO,CAAC,aAAa,GAAG,SAAS,CAAC,KAAK,CAAC;;AAE5C,gBAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE,eAAe,EAAE,EAAE,EAAE,UAAU,GAAG,EAAE,WAAW,EAAE,SAAS,EAAE;;AAEtF,sBAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;AAC3B,sBAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAC3C,sBAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;AAChD,sBAAM,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,GAAG,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;;AAErH,oBAAI,GAAG,GAAG;AACN,2BAAO,EAAE;AACL,sCAAc,EAAE,YAAY;qBAC/B;iBACJ,CAAC;;AAEF,mBAAG,CAAC,OAAO,CAAC,sBAAsB,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AACjF,sBAAM,CAAC,GAAG,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;;AAEvD,sBAAM,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE,WAAW,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC7E,oBAAI,EAAE,CAAC;aACV,CAAC,CAAC;SACN,CAAC,CAAC;KACN,CAAC,CAAC;;AAEH,MAAE,CAAC,wEAAwE,EAAE,UAAU,IAAI,EAAE;;AAEzF,YAAI,GAAG,GAAG;AACN,kBAAM,EAAE,MAAM;AACd,eAAG,EAAE,sBAAsB;AAC3B,mBAAO,EAAE;AACL,oBAAI,EAAE,kBAAkB;AACxB,8BAAc,EAAE,gBAAgB;aACnC;SACJ,CAAC;;AAEF,YAAI,OAAO,GAAG,yBAAyB,CAAC;;AAExC,uBAAe,CAAC,QAAQ,EAAE,UAAU,GAAG,EAAE,WAAW,EAAE;;AAElD,gBAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,6CAA6C,EAAE,GAAG,CAAC,MAAM,EAAE,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG,EAAE,eAAe,EAAE,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,GAAG,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;AAC9M,eAAG,CAAC,OAAO,CAAC,aAAa,GAAG,SAAS,CAAC,KAAK,CAAC;;AAE5C,gBAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE,eAAe,EAAE,EAAE,EAAE,UAAU,GAAG,EAAE,WAAW,EAAE,SAAS,EAAE;;AAEtF,sBAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;AAC3B,sBAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAC3C,sBAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;AAChD,sBAAM,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,GAAG,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;;AAErH,oBAAI,GAAG,GAAG;AACN,2BAAO,EAAE;AACL,sCAAc,EAAE,YAAY;qBAC/B;iBACJ,CAAC;;AAEF,mBAAG,CAAC,OAAO,CAAC,sBAAsB,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AACjF,sBAAM,CAAC,GAAG,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;;AAEvD,sBAAM,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE,WAAW,EAAE,SAAS,EAAE,EAAE,OAAO,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACzG,oBAAI,EAAE,CAAC;aACV,CAAC,CAAC;SACN,CAAC,CAAC;KACN,CAAC,CAAC;;AAEH,MAAE,CAAC,2DAA2D,EAAE,UAAU,IAAI,EAAE;;AAE5E,YAAI,GAAG,GAAG;AACN,kBAAM,EAAE,KAAK;AACb,eAAG,EAAE,sBAAsB;AAC3B,gBAAI,EAAE,aAAa;AACnB,gBAAI,EAAE,IAAI;SACb,CAAC;;AAEF,uBAAe,CAAC,QAAQ,EAAE,UAAU,GAAG,EAAE,WAAW,EAAE;;AAElD,eAAG,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,6CAA6C,EAAE,GAAG,CAAC,MAAM,EAAE,EAAE,WAAW,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,eAAe,EAAE,CAAC,CAAC,KAAK,CAAC;AAC9K,gBAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE,eAAe,EAAE,EAAE,EAAE,UAAU,GAAG,EAAE,WAAW,EAAE,SAAS,EAAE;;AAEtF,sBAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;AAC3B,sBAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAC3C,sBAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;AAChD,oBAAI,EAAE,CAAC;aACV,CAAC,CAAC;SACN,CAAC,CAAC;KACN,CAAC,CAAC;;AAEH,MAAE,CAAC,qEAAqE,EAAE,UAAU,IAAI,EAAE;;AAEtF,YAAI,GAAG,GAAG;AACN,kBAAM,EAAE,KAAK;AACb,eAAG,EAAE,sBAAsB;AAC3B,gBAAI,EAAE,aAAa;AACnB,gBAAI,EAAE,IAAI;SACb,CAAC;;AAEF,uBAAe,CAAC,QAAQ,EAAE,UAAU,GAAG,EAAE,WAAW,EAAE;;AAElD,eAAG,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,6CAA6C,EAAE,GAAG,CAAC,MAAM,EAAE,EAAE,WAAW,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,eAAe,EAAE,CAAC,CAAC,KAAK,CAAC;AAC9K,gBAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE,eAAe,EAAE,EAAE,EAAE,UAAU,GAAG,EAAE,WAAW,EAAE,SAAS,EAAE;;AAEtF,sBAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;AAC3B,sBAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAC3C,sBAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;AAChD,sBAAM,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAO,EAAE,WAAW,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,QAAK,EAAE,CAAC;AACtF,sBAAM,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,WAAW,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,SAAM,EAAE,CAAC;AACxF,oBAAI,EAAE,CAAC;aACV,CAAC,CAAC;SACN,CAAC,CAAC;KACN,CAAC,CAAC;;AAEH,MAAE,CAAC,mEAAmE,EAAE,UAAU,IAAI,EAAE;;AAEpF,YAAI,GAAG,GAAG;AACN,kBAAM,EAAE,KAAK;AACb,eAAG,EAAE,sBAAsB;AAC3B,gBAAI,EAAE,aAAa;AACnB,gBAAI,EAAE,IAAI;SACb,CAAC;;AAEF,uBAAe,CAAC,QAAQ,EAAE,UAAU,GAAG,EAAE,WAAW,EAAE;;AAElD,eAAG,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,6CAA6C,EAAE,GAAG,CAAC,MAAM,EAAE,EAAE,WAAW,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,eAAe,EAAE,CAAC,CAAC,KAAK,CAAC;AAC9K,gBAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE,eAAe,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,EAAE,UAAU,GAAG,EAAE,WAAW,EAAE,SAAS,EAAE;;AAExG,sBAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;AAC3B,sBAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAC3C,sBAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;AAChD,oBAAI,EAAE,CAAC;aACV,CAAC,CAAC;SACN,CAAC,CAAC;KACN,CAAC,CAAC;;AAEH,MAAE,CAAC,qDAAqD,EAAE,UAAU,IAAI,EAAE;;AAEtE,YAAI,GAAG,GAAG;AACN,kBAAM,EAAE,KAAK;AACb,eAAG,EAAE,sBAAsB;AAC3B,gBAAI,EAAE,aAAa;AACnB,gBAAI,EAAE,IAAI;SACb,CAAC;;AAEF,uBAAe,CAAC,QAAQ,EAAE,UAAU,GAAG,EAAE,WAAW,EAAE;;AAElD,eAAG,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,6CAA6C,EAAE,GAAG,CAAC,MAAM,EAAE,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG,EAAE,eAAe,EAAE,GAAG,EAAE,WAAW,EAAE,CAAC,CAAC,KAAK,CAAC;AAC9K,gBAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE,eAAe,EAAE,EAAE,EAAE,UAAU,GAAG,EAAE,WAAW,EAAE,SAAS,EAAE;;AAEtF,sBAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;AAC3B,sBAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAC3C,sBAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;AAChD,sBAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;AAC5C,oBAAI,EAAE,CAAC;aACV,CAAC,CAAC;SACN,CAAC,CAAC;KACN,CAAC,CAAC;;AAEH,MAAE,CAAC,0DAA0D,EAAE,UAAU,IAAI,EAAE;;AAE3E,YAAI,GAAG,GAAG;AACN,kBAAM,EAAE,KAAK;AACb,eAAG,EAAE,sBAAsB;AAC3B,gBAAI,EAAE,aAAa;AACnB,gBAAI,EAAE,IAAI;SACb,CAAC;;AAEF,uBAAe,CAAC,QAAQ,EAAE,UAAU,GAAG,EAAE,WAAW,EAAE;;AAElD,eAAG,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,6CAA6C,EAAE,GAAG,CAAC,MAAM,EAAE,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG,EAAE,eAAe,EAAE,GAAG,EAAE,WAAW,EAAE,GAAG,EAAE,cAAc,EAAE,CAAC,CAAC,KAAK,CAAC;AACnM,gBAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE,eAAe,EAAE,EAAE,EAAE,UAAU,GAAG,EAAE,WAAW,EAAE,SAAS,EAAE;;AAEtF,sBAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;AAC3B,sBAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAC3C,sBAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;AAChD,sBAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;AAC5C,sBAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;AAC/C,oBAAI,EAAE,CAAC;aACV,CAAC,CAAC;SACN,CAAC,CAAC;KACN,CAAC,CAAC;;AAEH,MAAE,CAAC,6DAA6D,EAAE,UAAU,IAAI,EAAE;;AAE9E,YAAI,GAAG,GAAG;AACN,kBAAM,EAAE,KAAK;AACb,eAAG,EAAE,sBAAsB;AAC3B,gBAAI,EAAE,aAAa;AACnB,gBAAI,EAAE,IAAI;SACb,CAAC;;AAEF,uBAAe,CAAC,QAAQ,EAAE,UAAU,GAAG,EAAE,WAAW,EAAE;;AAElD,eAAG,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,6CAA6C,EAAE,GAAG,CAAC,MAAM,EAAE,EAAE,WAAW,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,eAAe,EAAE,CAAC,CAAC,KAAK,CAAC;AAC9K,gBAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE,eAAe,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE,EAAE,UAAU,GAAG,EAAE,WAAW,EAAE,SAAS,EAAE;;AAE1G,sBAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;AACvB,sBAAM,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;AAChE,oBAAI,EAAE,CAAC;aACV,CAAC,CAAC;SACN,CAAC,CAAC;KACN,CAAC,CAAC;;AAEH,MAAE,CAAC,uEAAuE,EAAE,UAAU,IAAI,EAAE;;AAExF,YAAI,GAAG,GAAG;AACN,kBAAM,EAAE,KAAK;AACb,eAAG,EAAE,sBAAsB;AAC3B,gBAAI,EAAE,aAAa;AACnB,gBAAI,EAAE,IAAI;SACb,CAAC;;AAEF,uBAAe,CAAC,QAAQ,EAAE,UAAU,GAAG,EAAE,WAAW,EAAE;;AAElD,eAAG,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,6CAA6C,EAAE,GAAG,CAAC,MAAM,EAAE,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG,EAAE,eAAe,EAAE,CAAC,CAAC,KAAK,CAAC;AAC5J,eAAG,CAAC,GAAG,GAAG,iBAAiB,CAAC;;AAE5B,gBAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE,eAAe,EAAE,EAAE,EAAE,UAAU,GAAG,EAAE,WAAW,EAAE,SAAS,EAAE;;AAEtF,sBAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;AACvB,sBAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;AAC/B,oBAAI,EAAE,CAAC;aACV,CAAC,CAAC;SACN,CAAC,CAAC;KACN,CAAC,CAAC;CACN,CAAC,CAAC","file":"index-compiled.js","sourcesContent":["// Load modules\n\nvar Url = require('url');\nvar Code = require('code');\nvar Hawk = require('../lib');\nvar Lab = require('lab');\n\n\n// Declare internals\n\nvar internals = {};\n\n\n// Test shortcuts\n\nvar lab = exports.lab = Lab.script();\nvar describe = lab.experiment;\nvar it = lab.test;\nvar expect = Code.expect;\n\n\ndescribe('Hawk', function () {\n\n    var credentialsFunc = function (id, callback) {\n\n        var credentials = {\n            id: id,\n            key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n            algorithm: (id === '1' ? 'sha1' : 'sha256'),\n            user: 'steve'\n        };\n\n        return callback(null, credentials);\n    };\n\n    it('generates a header then successfully parse it (configuration)', function (done) {\n\n        var req = {\n            method: 'GET',\n            url: '/resource/4?filter=a',\n            host: 'example.com',\n            port: 8080\n        };\n\n        credentialsFunc('123456', function (err, credentials) {\n\n            req.authorization = Hawk.client.header(Url.parse('http://example.com:8080/resource/4?filter=a'), req.method, { credentials: credentials, ext: 'some-app-data' }).field;\n            expect(req.authorization).to.exist();\n\n            Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n\n                expect(err).to.not.exist();\n                expect(credentials.user).to.equal('steve');\n                expect(artifacts.ext).to.equal('some-app-data');\n                done();\n            });\n        });\n    });\n\n    it('generates a header then successfully parse it (node request)', function (done) {\n\n        var req = {\n            method: 'POST',\n            url: '/resource/4?filter=a',\n            headers: {\n                host: 'example.com:8080',\n                'content-type': 'text/plain;x=y'\n            }\n        };\n\n        var payload = 'some not so random text';\n\n        credentialsFunc('123456', function (err, credentials) {\n\n            var reqHeader = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data', payload: payload, contentType: req.headers['content-type'] });\n            req.headers.authorization = reqHeader.field;\n\n            Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n\n                expect(err).to.not.exist();\n                expect(credentials.user).to.equal('steve');\n                expect(artifacts.ext).to.equal('some-app-data');\n                expect(Hawk.server.authenticatePayload(payload, credentials, artifacts, req.headers['content-type'])).to.equal(true);\n\n                var res = {\n                    headers: {\n                        'content-type': 'text/plain'\n                    }\n                };\n\n                res.headers['server-authorization'] = Hawk.server.header(credentials, artifacts, { payload: 'some reply', contentType: 'text/plain', ext: 'response-specific' });\n                expect(res.headers['server-authorization']).to.exist();\n\n                expect(Hawk.client.authenticate(res, credentials, artifacts, { payload: 'some reply' })).to.equal(true);\n                done();\n            });\n        });\n    });\n\n    it('generates a header then successfully parse it (absolute request uri)', function (done) {\n\n        var req = {\n            method: 'POST',\n            url: 'http://example.com:8080/resource/4?filter=a',\n            headers: {\n                host: 'example.com:8080',\n                'content-type': 'text/plain;x=y'\n            }\n        };\n\n        var payload = 'some not so random text';\n\n        credentialsFunc('123456', function (err, credentials) {\n\n            var reqHeader = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data', payload: payload, contentType: req.headers['content-type'] });\n            req.headers.authorization = reqHeader.field;\n\n            Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n\n                expect(err).to.not.exist();\n                expect(credentials.user).to.equal('steve');\n                expect(artifacts.ext).to.equal('some-app-data');\n                expect(Hawk.server.authenticatePayload(payload, credentials, artifacts, req.headers['content-type'])).to.equal(true);\n\n                var res = {\n                    headers: {\n                        'content-type': 'text/plain'\n                    }\n                };\n\n                res.headers['server-authorization'] = Hawk.server.header(credentials, artifacts, { payload: 'some reply', contentType: 'text/plain', ext: 'response-specific' });\n                expect(res.headers['server-authorization']).to.exist();\n\n                expect(Hawk.client.authenticate(res, credentials, artifacts, { payload: 'some reply' })).to.equal(true);\n                done();\n            });\n        });\n    });\n\n    it('generates a header then successfully parse it (no server header options)', function (done) {\n\n        var req = {\n            method: 'POST',\n            url: '/resource/4?filter=a',\n            headers: {\n                host: 'example.com:8080',\n                'content-type': 'text/plain;x=y'\n            }\n        };\n\n        var payload = 'some not so random text';\n\n        credentialsFunc('123456', function (err, credentials) {\n\n            var reqHeader = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data', payload: payload, contentType: req.headers['content-type'] });\n            req.headers.authorization = reqHeader.field;\n\n            Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n\n                expect(err).to.not.exist();\n                expect(credentials.user).to.equal('steve');\n                expect(artifacts.ext).to.equal('some-app-data');\n                expect(Hawk.server.authenticatePayload(payload, credentials, artifacts, req.headers['content-type'])).to.equal(true);\n\n                var res = {\n                    headers: {\n                        'content-type': 'text/plain'\n                    }\n                };\n\n                res.headers['server-authorization'] = Hawk.server.header(credentials, artifacts);\n                expect(res.headers['server-authorization']).to.exist();\n\n                expect(Hawk.client.authenticate(res, credentials, artifacts)).to.equal(true);\n                done();\n            });\n        });\n    });\n\n    it('generates a header then fails to parse it (missing server header hash)', function (done) {\n\n        var req = {\n            method: 'POST',\n            url: '/resource/4?filter=a',\n            headers: {\n                host: 'example.com:8080',\n                'content-type': 'text/plain;x=y'\n            }\n        };\n\n        var payload = 'some not so random text';\n\n        credentialsFunc('123456', function (err, credentials) {\n\n            var reqHeader = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data', payload: payload, contentType: req.headers['content-type'] });\n            req.headers.authorization = reqHeader.field;\n\n            Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n\n                expect(err).to.not.exist();\n                expect(credentials.user).to.equal('steve');\n                expect(artifacts.ext).to.equal('some-app-data');\n                expect(Hawk.server.authenticatePayload(payload, credentials, artifacts, req.headers['content-type'])).to.equal(true);\n\n                var res = {\n                    headers: {\n                        'content-type': 'text/plain'\n                    }\n                };\n\n                res.headers['server-authorization'] = Hawk.server.header(credentials, artifacts);\n                expect(res.headers['server-authorization']).to.exist();\n\n                expect(Hawk.client.authenticate(res, credentials, artifacts, { payload: 'some reply' })).to.equal(false);\n                done();\n            });\n        });\n    });\n\n    it('generates a header then successfully parse it (with hash)', function (done) {\n\n        var req = {\n            method: 'GET',\n            url: '/resource/4?filter=a',\n            host: 'example.com',\n            port: 8080\n        };\n\n        credentialsFunc('123456', function (err, credentials) {\n\n            req.authorization = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, payload: 'hola!', ext: 'some-app-data' }).field;\n            Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n\n                expect(err).to.not.exist();\n                expect(credentials.user).to.equal('steve');\n                expect(artifacts.ext).to.equal('some-app-data');\n                done();\n            });\n        });\n    });\n\n    it('generates a header then successfully parse it then validate payload', function (done) {\n\n        var req = {\n            method: 'GET',\n            url: '/resource/4?filter=a',\n            host: 'example.com',\n            port: 8080\n        };\n\n        credentialsFunc('123456', function (err, credentials) {\n\n            req.authorization = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, payload: 'hola!', ext: 'some-app-data' }).field;\n            Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n\n                expect(err).to.not.exist();\n                expect(credentials.user).to.equal('steve');\n                expect(artifacts.ext).to.equal('some-app-data');\n                expect(Hawk.server.authenticatePayload('hola!', credentials, artifacts)).to.be.true();\n                expect(Hawk.server.authenticatePayload('hello!', credentials, artifacts)).to.be.false();\n                done();\n            });\n        });\n    });\n\n    it('generates a header then successfully parses and validates payload', function (done) {\n\n        var req = {\n            method: 'GET',\n            url: '/resource/4?filter=a',\n            host: 'example.com',\n            port: 8080\n        };\n\n        credentialsFunc('123456', function (err, credentials) {\n\n            req.authorization = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, payload: 'hola!', ext: 'some-app-data' }).field;\n            Hawk.server.authenticate(req, credentialsFunc, { payload: 'hola!' }, function (err, credentials, artifacts) {\n\n                expect(err).to.not.exist();\n                expect(credentials.user).to.equal('steve');\n                expect(artifacts.ext).to.equal('some-app-data');\n                done();\n            });\n        });\n    });\n\n    it('generates a header then successfully parse it (app)', function (done) {\n\n        var req = {\n            method: 'GET',\n            url: '/resource/4?filter=a',\n            host: 'example.com',\n            port: 8080\n        };\n\n        credentialsFunc('123456', function (err, credentials) {\n\n            req.authorization = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data', app: 'asd23ased' }).field;\n            Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n\n                expect(err).to.not.exist();\n                expect(credentials.user).to.equal('steve');\n                expect(artifacts.ext).to.equal('some-app-data');\n                expect(artifacts.app).to.equal('asd23ased');\n                done();\n            });\n        });\n    });\n\n    it('generates a header then successfully parse it (app, dlg)', function (done) {\n\n        var req = {\n            method: 'GET',\n            url: '/resource/4?filter=a',\n            host: 'example.com',\n            port: 8080\n        };\n\n        credentialsFunc('123456', function (err, credentials) {\n\n            req.authorization = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data', app: 'asd23ased', dlg: '23434szr3q4d' }).field;\n            Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n\n                expect(err).to.not.exist();\n                expect(credentials.user).to.equal('steve');\n                expect(artifacts.ext).to.equal('some-app-data');\n                expect(artifacts.app).to.equal('asd23ased');\n                expect(artifacts.dlg).to.equal('23434szr3q4d');\n                done();\n            });\n        });\n    });\n\n    it('generates a header then fail authentication due to bad hash', function (done) {\n\n        var req = {\n            method: 'GET',\n            url: '/resource/4?filter=a',\n            host: 'example.com',\n            port: 8080\n        };\n\n        credentialsFunc('123456', function (err, credentials) {\n\n            req.authorization = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, payload: 'hola!', ext: 'some-app-data' }).field;\n            Hawk.server.authenticate(req, credentialsFunc, { payload: 'byebye!' }, function (err, credentials, artifacts) {\n\n                expect(err).to.exist();\n                expect(err.output.payload.message).to.equal('Bad payload hash');\n                done();\n            });\n        });\n    });\n\n    it('generates a header for one resource then fail to authenticate another', function (done) {\n\n        var req = {\n            method: 'GET',\n            url: '/resource/4?filter=a',\n            host: 'example.com',\n            port: 8080\n        };\n\n        credentialsFunc('123456', function (err, credentials) {\n\n            req.authorization = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data' }).field;\n            req.url = '/something/else';\n\n            Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n\n                expect(err).to.exist();\n                expect(credentials).to.exist();\n                done();\n            });\n        });\n    });\n});\n"]}