{"version":3,"sources":["uri.js"],"names":[],"mappings":"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","file":"uri-compiled.js","sourcesContent":["// Load modules\n\nvar Http = require('http');\nvar Url = require('url');\nvar Code = require('code');\nvar Hawk = require('../lib');\nvar Hoek = require('hoek');\nvar Lab = require('lab');\n\n\n// Declare internals\n\nvar internals = {};\n\n\n// Test shortcuts\n\nvar lab = exports.lab = Lab.script();\nvar describe = lab.experiment;\nvar it = lab.test;\nvar expect = Code.expect;\n\n\ndescribe('Uri', function () {\n\n    var credentialsFunc = function (id, callback) {\n\n        var credentials = {\n            id: id,\n            key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n            algorithm: 'sha256',\n            user: 'steve'\n        };\n\n        return callback(null, credentials);\n    };\n\n    it('should generate a bewit then successfully authenticate it', function (done) {\n\n        var req = {\n            method: 'GET',\n            url: '/resource/4?a=1&b=2',\n            host: 'example.com',\n            port: 80\n        };\n\n        credentialsFunc('123456', function (err, credentials) {\n\n            var bewit = Hawk.uri.getBewit('http://example.com/resource/4?a=1&b=2', { credentials: credentials, ttlSec: 60 * 60 * 24 * 365 * 100, ext: 'some-app-data' });\n            req.url += '&bewit=' + bewit;\n\n            Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n\n                expect(err).to.not.exist();\n                expect(credentials.user).to.equal('steve');\n                expect(attributes.ext).to.equal('some-app-data');\n                done();\n            });\n        });\n    });\n\n    it('should generate a bewit then successfully authenticate it (no ext)', function (done) {\n\n        var req = {\n            method: 'GET',\n            url: '/resource/4?a=1&b=2',\n            host: 'example.com',\n            port: 80\n        };\n\n        credentialsFunc('123456', function (err, credentials) {\n\n            var bewit = Hawk.uri.getBewit('http://example.com/resource/4?a=1&b=2', { credentials: credentials, ttlSec: 60 * 60 * 24 * 365 * 100 });\n            req.url += '&bewit=' + bewit;\n\n            Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n\n                expect(err).to.not.exist();\n                expect(credentials.user).to.equal('steve');\n                done();\n            });\n        });\n    });\n\n    it('should successfully authenticate a request (last param)', function (done) {\n\n        var req = {\n            method: 'GET',\n            url: '/resource/4?a=1&b=2&bewit=MTIzNDU2XDQ1MTE0ODQ2MjFcMzFjMmNkbUJFd1NJRVZDOVkva1NFb2c3d3YrdEVNWjZ3RXNmOGNHU2FXQT1cc29tZS1hcHAtZGF0YQ',\n            host: 'example.com',\n            port: 8080\n        };\n\n        Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n\n            expect(err).to.not.exist();\n            expect(credentials.user).to.equal('steve');\n            expect(attributes.ext).to.equal('some-app-data');\n            done();\n        });\n    });\n\n    it('should successfully authenticate a request (first param)', function (done) {\n\n        var req = {\n            method: 'GET',\n            url: '/resource/4?bewit=MTIzNDU2XDQ1MTE0ODQ2MjFcMzFjMmNkbUJFd1NJRVZDOVkva1NFb2c3d3YrdEVNWjZ3RXNmOGNHU2FXQT1cc29tZS1hcHAtZGF0YQ&a=1&b=2',\n            host: 'example.com',\n            port: 8080\n        };\n\n        Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n\n            expect(err).to.not.exist();\n            expect(credentials.user).to.equal('steve');\n            expect(attributes.ext).to.equal('some-app-data');\n            done();\n        });\n    });\n\n    it('should successfully authenticate a request (only param)', function (done) {\n\n        var req = {\n            method: 'GET',\n            url: '/resource/4?bewit=MTIzNDU2XDQ1MTE0ODQ2NDFcZm1CdkNWT3MvcElOTUUxSTIwbWhrejQ3UnBwTmo4Y1VrSHpQd3Q5OXJ1cz1cc29tZS1hcHAtZGF0YQ',\n            host: 'example.com',\n            port: 8080\n        };\n\n        Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n\n            expect(err).to.not.exist();\n            expect(credentials.user).to.equal('steve');\n            expect(attributes.ext).to.equal('some-app-data');\n            done();\n        });\n    });\n\n    it('should fail on multiple authentication', function (done) {\n\n        var req = {\n            method: 'GET',\n            url: '/resource/4?bewit=MTIzNDU2XDQ1MTE0ODQ2NDFcZm1CdkNWT3MvcElOTUUxSTIwbWhrejQ3UnBwTmo4Y1VrSHpQd3Q5OXJ1cz1cc29tZS1hcHAtZGF0YQ',\n            host: 'example.com',\n            port: 8080,\n            authorization: 'Basic asdasdasdasd'\n        };\n\n        Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n\n            expect(err).to.exist();\n            expect(err.output.payload.message).to.equal('Multiple authentications');\n            done();\n        });\n    });\n\n    it('should fail on method other than GET', function (done) {\n\n        credentialsFunc('123456', function (err, credentials) {\n\n            var req = {\n                method: 'POST',\n                url: '/resource/4?filter=a',\n                host: 'example.com',\n                port: 8080\n            };\n\n            var exp = Math.floor(Hawk.utils.now() / 1000) + 60;\n            var ext = 'some-app-data';\n            var mac = Hawk.crypto.calculateMac('bewit', credentials, {\n                timestamp: exp,\n                nonce: '',\n                method: req.method,\n                resource: req.url,\n                host: req.host,\n                port: req.port,\n                ext: ext\n            });\n\n            var bewit = credentials.id + '\\\\' + exp + '\\\\' + mac + '\\\\' + ext;\n\n            req.url += '&bewit=' + Hoek.base64urlEncode(bewit);\n\n            Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n\n                expect(err).to.exist();\n                expect(err.output.payload.message).to.equal('Invalid method');\n                done();\n            });\n        });\n    });\n\n    it('should fail on invalid host header', function (done) {\n\n        var req = {\n            method: 'GET',\n            url: '/resource/4?bewit=MTIzNDU2XDQ1MDk5OTE3MTlcTUE2eWkwRWRwR0pEcWRwb0JkYVdvVDJrL0hDSzA1T0Y3MkhuZlVmVy96Zz1cc29tZS1hcHAtZGF0YQ',\n            headers: {\n                host: 'example.com:something'\n            }\n        };\n\n        Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n\n            expect(err).to.exist();\n            expect(err.output.payload.message).to.equal('Invalid Host header');\n            done();\n        });\n    });\n\n    it('should fail on empty bewit', function (done) {\n\n        var req = {\n            method: 'GET',\n            url: '/resource/4?bewit=',\n            host: 'example.com',\n            port: 8080\n        };\n\n        Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n\n            expect(err).to.exist();\n            expect(err.output.payload.message).to.equal('Empty bewit');\n            expect(err.isMissing).to.not.exist();\n            done();\n        });\n    });\n\n    it('should fail on invalid bewit', function (done) {\n\n        var req = {\n            method: 'GET',\n            url: '/resource/4?bewit=*',\n            host: 'example.com',\n            port: 8080\n        };\n\n        Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n\n            expect(err).to.exist();\n            expect(err.output.payload.message).to.equal('Invalid bewit encoding');\n            expect(err.isMissing).to.not.exist();\n            done();\n        });\n    });\n\n    it('should fail on missing bewit', function (done) {\n\n        var req = {\n            method: 'GET',\n            url: '/resource/4',\n            host: 'example.com',\n            port: 8080\n        };\n\n        Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n\n            expect(err).to.exist();\n            expect(err.output.payload.message).to.not.exist();\n            expect(err.isMissing).to.equal(true);\n            done();\n        });\n    });\n\n    it('should fail on invalid bewit structure', function (done) {\n\n        var req = {\n            method: 'GET',\n            url: '/resource/4?bewit=abc',\n            host: 'example.com',\n            port: 8080\n        };\n\n        Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n\n            expect(err).to.exist();\n            expect(err.output.payload.message).to.equal('Invalid bewit structure');\n            done();\n        });\n    });\n\n    it('should fail on empty bewit attribute', function (done) {\n\n        var req = {\n            method: 'GET',\n            url: '/resource/4?bewit=YVxcY1xk',\n            host: 'example.com',\n            port: 8080\n        };\n\n        Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n\n            expect(err).to.exist();\n            expect(err.output.payload.message).to.equal('Missing bewit attributes');\n            done();\n        });\n    });\n\n    it('should fail on missing bewit id attribute', function (done) {\n\n        var req = {\n            method: 'GET',\n            url: '/resource/4?bewit=XDQ1NTIxNDc2MjJcK0JFbFhQMXhuWjcvd1Nrbm1ldGhlZm5vUTNHVjZNSlFVRHk4NWpTZVJ4VT1cc29tZS1hcHAtZGF0YQ',\n            host: 'example.com',\n            port: 8080\n        };\n\n        Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n\n            expect(err).to.exist();\n            expect(err.output.payload.message).to.equal('Missing bewit attributes');\n            done();\n        });\n    });\n\n    it('should fail on expired access', function (done) {\n\n        var req = {\n            method: 'GET',\n            url: '/resource/4?a=1&b=2&bewit=MTIzNDU2XDEzNTY0MTg1ODNcWk1wZlMwWU5KNHV0WHpOMmRucTRydEk3NXNXTjFjeWVITTcrL0tNZFdVQT1cc29tZS1hcHAtZGF0YQ',\n            host: 'example.com',\n            port: 8080\n        };\n\n        Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n\n            expect(err).to.exist();\n            expect(err.output.payload.message).to.equal('Access expired');\n            done();\n        });\n    });\n\n    it('should fail on credentials function error', function (done) {\n\n        var req = {\n            method: 'GET',\n            url: '/resource/4?bewit=MTIzNDU2XDQ1MDk5OTE3MTlcTUE2eWkwRWRwR0pEcWRwb0JkYVdvVDJrL0hDSzA1T0Y3MkhuZlVmVy96Zz1cc29tZS1hcHAtZGF0YQ',\n            host: 'example.com',\n            port: 8080\n        };\n\n        Hawk.uri.authenticate(req, function (id, callback) {\n\n            callback(Hawk.error.badRequest('Boom'));\n        }, {}, function (err, credentials, attributes) {\n\n            expect(err).to.exist();\n            expect(err.output.payload.message).to.equal('Boom');\n            done();\n        });\n    });\n\n    it('should fail on credentials function error with credentials', function (done) {\n\n        var req = {\n            method: 'GET',\n            url: '/resource/4?bewit=MTIzNDU2XDQ1MDk5OTE3MTlcTUE2eWkwRWRwR0pEcWRwb0JkYVdvVDJrL0hDSzA1T0Y3MkhuZlVmVy96Zz1cc29tZS1hcHAtZGF0YQ',\n            host: 'example.com',\n            port: 8080\n        };\n\n        Hawk.uri.authenticate(req, function (id, callback) {\n\n            callback(Hawk.error.badRequest('Boom'), { some: 'value' });\n        }, {}, function (err, credentials, attributes) {\n\n            expect(err).to.exist();\n            expect(err.output.payload.message).to.equal('Boom');\n            expect(credentials.some).to.equal('value');\n            done();\n        });\n    });\n\n    it('should fail on null credentials function response', function (done) {\n\n        var req = {\n            method: 'GET',\n            url: '/resource/4?bewit=MTIzNDU2XDQ1MDk5OTE3MTlcTUE2eWkwRWRwR0pEcWRwb0JkYVdvVDJrL0hDSzA1T0Y3MkhuZlVmVy96Zz1cc29tZS1hcHAtZGF0YQ',\n            host: 'example.com',\n            port: 8080\n        };\n\n        Hawk.uri.authenticate(req, function (id, callback) {\n\n            callback(null, null);\n        }, {}, function (err, credentials, attributes) {\n\n            expect(err).to.exist();\n            expect(err.output.payload.message).to.equal('Unknown credentials');\n            done();\n        });\n    });\n\n    it('should fail on invalid credentials function response', function (done) {\n\n        var req = {\n            method: 'GET',\n            url: '/resource/4?bewit=MTIzNDU2XDQ1MDk5OTE3MTlcTUE2eWkwRWRwR0pEcWRwb0JkYVdvVDJrL0hDSzA1T0Y3MkhuZlVmVy96Zz1cc29tZS1hcHAtZGF0YQ',\n            host: 'example.com',\n            port: 8080\n        };\n\n        Hawk.uri.authenticate(req, function (id, callback) {\n\n            callback(null, {});\n        }, {}, function (err, credentials, attributes) {\n\n            expect(err).to.exist();\n            expect(err.message).to.equal('Invalid credentials');\n            done();\n        });\n    });\n\n    it('should fail on invalid credentials function response (unknown algorithm)', function (done) {\n\n        var req = {\n            method: 'GET',\n            url: '/resource/4?bewit=MTIzNDU2XDQ1MDk5OTE3MTlcTUE2eWkwRWRwR0pEcWRwb0JkYVdvVDJrL0hDSzA1T0Y3MkhuZlVmVy96Zz1cc29tZS1hcHAtZGF0YQ',\n            host: 'example.com',\n            port: 8080\n        };\n\n        Hawk.uri.authenticate(req, function (id, callback) {\n\n            callback(null, { key: 'xxx', algorithm: 'xxx' });\n        }, {}, function (err, credentials, attributes) {\n\n            expect(err).to.exist();\n            expect(err.message).to.equal('Unknown algorithm');\n            done();\n        });\n    });\n\n    it('should fail on expired access', function (done) {\n\n        var req = {\n            method: 'GET',\n            url: '/resource/4?bewit=MTIzNDU2XDQ1MDk5OTE3MTlcTUE2eWkwRWRwR0pEcWRwb0JkYVdvVDJrL0hDSzA1T0Y3MkhuZlVmVy96Zz1cc29tZS1hcHAtZGF0YQ',\n            host: 'example.com',\n            port: 8080\n        };\n\n        Hawk.uri.authenticate(req, function (id, callback) {\n\n            callback(null, { key: 'xxx', algorithm: 'sha256' });\n        }, {}, function (err, credentials, attributes) {\n\n            expect(err).to.exist();\n            expect(err.output.payload.message).to.equal('Bad mac');\n            done();\n        });\n    });\n\n    describe('getBewit()', function () {\n\n        it('returns a valid bewit value', function (done) {\n\n            var credentials = {\n                id: '123456',\n                key: '2983d45yun89q',\n                algorithm: 'sha256'\n            };\n\n            var bewit = Hawk.uri.getBewit('https://example.com/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: 'xandyandz' });\n            expect(bewit).to.equal('MTIzNDU2XDEzNTY0MjA3MDdca3NjeHdOUjJ0SnBQMVQxekRMTlBiQjVVaUtJVTl0T1NKWFRVZEc3WDloOD1ceGFuZHlhbmR6');\n            done();\n        });\n\n        it('returns a valid bewit value (explicit port)', function (done) {\n\n            var credentials = {\n                id: '123456',\n                key: '2983d45yun89q',\n                algorithm: 'sha256'\n            };\n\n            var bewit = Hawk.uri.getBewit('https://example.com:8080/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: 'xandyandz' });\n            expect(bewit).to.equal('MTIzNDU2XDEzNTY0MjA3MDdcaFpiSjNQMmNLRW80a3kwQzhqa1pBa1J5Q1p1ZWc0V1NOYnhWN3ZxM3hIVT1ceGFuZHlhbmR6');\n            done();\n        });\n\n        it('returns a valid bewit value (null ext)', function (done) {\n\n            var credentials = {\n                id: '123456',\n                key: '2983d45yun89q',\n                algorithm: 'sha256'\n            };\n\n            var bewit = Hawk.uri.getBewit('https://example.com/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: null });\n            expect(bewit).to.equal('MTIzNDU2XDEzNTY0MjA3MDdcSUdZbUxnSXFMckNlOEN4dktQczRKbFdJQStValdKSm91d2dBUmlWaENBZz1c');\n            done();\n        });\n\n        it('returns a valid bewit value (parsed uri)', function (done) {\n\n            var credentials = {\n                id: '123456',\n                key: '2983d45yun89q',\n                algorithm: 'sha256'\n            };\n\n            var bewit = Hawk.uri.getBewit(Url.parse('https://example.com/somewhere/over/the/rainbow'), { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: 'xandyandz' });\n            expect(bewit).to.equal('MTIzNDU2XDEzNTY0MjA3MDdca3NjeHdOUjJ0SnBQMVQxekRMTlBiQjVVaUtJVTl0T1NKWFRVZEc3WDloOD1ceGFuZHlhbmR6');\n            done();\n        });\n\n        it('errors on invalid options', function (done) {\n\n            var credentials = {\n                id: '123456',\n                key: '2983d45yun89q',\n                algorithm: 'sha256'\n            };\n\n            var bewit = Hawk.uri.getBewit('https://example.com/somewhere/over/the/rainbow', 4);\n            expect(bewit).to.equal('');\n            done();\n        });\n\n        it('errors on missing uri', function (done) {\n\n            var credentials = {\n                id: '123456',\n                key: '2983d45yun89q',\n                algorithm: 'sha256'\n            };\n\n            var bewit = Hawk.uri.getBewit('', { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: 'xandyandz' });\n            expect(bewit).to.equal('');\n            done();\n        });\n\n        it('errors on invalid uri', function (done) {\n\n            var credentials = {\n                id: '123456',\n                key: '2983d45yun89q',\n                algorithm: 'sha256'\n            };\n\n            var bewit = Hawk.uri.getBewit(5, { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: 'xandyandz' });\n            expect(bewit).to.equal('');\n            done();\n        });\n\n        it('errors on invalid credentials (id)', function (done) {\n\n            var credentials = {\n                key: '2983d45yun89q',\n                algorithm: 'sha256'\n            };\n\n            var bewit = Hawk.uri.getBewit('https://example.com/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 3000, ext: 'xandyandz' });\n            expect(bewit).to.equal('');\n            done();\n        });\n\n        it('errors on missing credentials', function (done) {\n\n            var bewit = Hawk.uri.getBewit('https://example.com/somewhere/over/the/rainbow', { ttlSec: 3000, ext: 'xandyandz' });\n            expect(bewit).to.equal('');\n            done();\n        });\n\n        it('errors on invalid credentials (key)', function (done) {\n\n            var credentials = {\n                id: '123456',\n                algorithm: 'sha256'\n            };\n\n            var bewit = Hawk.uri.getBewit('https://example.com/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 3000, ext: 'xandyandz' });\n            expect(bewit).to.equal('');\n            done();\n        });\n\n        it('errors on invalid algorithm', function (done) {\n\n            var credentials = {\n                id: '123456',\n                key: '2983d45yun89q',\n                algorithm: 'hmac-sha-0'\n            };\n\n            var bewit = Hawk.uri.getBewit('https://example.com/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 300, ext: 'xandyandz' });\n            expect(bewit).to.equal('');\n            done();\n        });\n\n        it('errors on missing options', function (done) {\n\n            var credentials = {\n                id: '123456',\n                key: '2983d45yun89q',\n                algorithm: 'hmac-sha-0'\n            };\n\n            var bewit = Hawk.uri.getBewit('https://example.com/somewhere/over/the/rainbow');\n            expect(bewit).to.equal('');\n            done();\n        });\n    });\n    describe('authenticateMessage()', function () {\n\n        var credentialsFunc = function (id, callback) {\n\n            var credentials = {\n                id: id,\n                key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n                algorithm: (id === '1' ? 'sha1' : 'sha256'),\n                user: 'steve'\n            };\n\n            return callback(null, credentials);\n        };\n\n        it('should generate an authorization then successfully parse it', function (done) {\n\n            credentialsFunc('123456', function (err, credentials) {\n\n                var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n                expect(auth).to.exist();\n\n                Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, credentialsFunc, {}, function (err, credentials) {\n\n                    expect(err).to.not.exist();\n                    expect(credentials.user).to.equal('steve');\n                    done();\n                });\n            });\n        });\n\n        it('should fail authorization on mismatching host', function (done) {\n\n            credentialsFunc('123456', function (err, credentials) {\n\n                var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n                expect(auth).to.exist();\n\n                Hawk.server.authenticateMessage('example1.com', 8080, 'some message', auth, credentialsFunc, {}, function (err, credentials) {\n\n                    expect(err).to.exist();\n                    expect(err.message).to.equal('Bad mac');\n                    done();\n                });\n            });\n        });\n\n        it('should fail authorization on stale timestamp', function (done) {\n\n            credentialsFunc('123456', function (err, credentials) {\n\n                var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n                expect(auth).to.exist();\n\n                Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, credentialsFunc, { localtimeOffsetMsec: 100000 }, function (err, credentials) {\n\n                    expect(err).to.exist();\n                    expect(err.message).to.equal('Stale timestamp');\n                    done();\n                });\n            });\n        });\n\n        it('overrides timestampSkewSec', function (done) {\n\n            credentialsFunc('123456', function (err, credentials) {\n\n                var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials, localtimeOffsetMsec: 100000 });\n                expect(auth).to.exist();\n\n                Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, credentialsFunc, { timestampSkewSec: 500 }, function (err, credentials) {\n\n                    expect(err).to.not.exist();\n                    done();\n                });\n            });\n        });\n\n        it('should fail authorization on invalid authorization', function (done) {\n\n            credentialsFunc('123456', function (err, credentials) {\n\n                var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n                expect(auth).to.exist();\n                delete auth.id;\n\n                Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, credentialsFunc, {}, function (err, credentials) {\n\n                    expect(err).to.exist();\n                    expect(err.message).to.equal('Invalid authorization');\n                    done();\n                });\n            });\n        });\n\n        it('should fail authorization on bad hash', function (done) {\n\n            credentialsFunc('123456', function (err, credentials) {\n\n                var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n                expect(auth).to.exist();\n\n                Hawk.server.authenticateMessage('example.com', 8080, 'some message1', auth, credentialsFunc, {}, function (err, credentials) {\n\n                    expect(err).to.exist();\n                    expect(err.message).to.equal('Bad message hash');\n                    done();\n                });\n            });\n        });\n\n        it('should fail authorization on nonce error', function (done) {\n\n            credentialsFunc('123456', function (err, credentials) {\n\n                var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n                expect(auth).to.exist();\n\n                Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, credentialsFunc, {\n                    nonceFunc: function (key, nonce, ts, callback) {\n\n                        callback(new Error('kaboom'));\n                    }\n                }, function (err, credentials) {\n\n                    expect(err).to.exist();\n                    expect(err.message).to.equal('Invalid nonce');\n                    done();\n                });\n            });\n        });\n\n        it('should fail authorization on credentials error', function (done) {\n\n            credentialsFunc('123456', function (err, credentials) {\n\n                var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n                expect(auth).to.exist();\n\n                var errFunc = function (id, callback) {\n\n                    callback(new Error('kablooey'));\n                };\n\n                Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, errFunc, {}, function (err, credentials) {\n\n                    expect(err).to.exist();\n                    expect(err.message).to.equal('kablooey');\n                    done();\n                });\n            });\n        });\n\n        it('should fail authorization on missing credentials', function (done) {\n\n            credentialsFunc('123456', function (err, credentials) {\n\n                var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n                expect(auth).to.exist();\n\n                var errFunc = function (id, callback) {\n\n                    callback();\n                };\n\n                Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, errFunc, {}, function (err, credentials) {\n\n                    expect(err).to.exist();\n                    expect(err.message).to.equal('Unknown credentials');\n                    done();\n                });\n            });\n        });\n\n        it('should fail authorization on invalid credentials', function (done) {\n\n            credentialsFunc('123456', function (err, credentials) {\n\n                var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n                expect(auth).to.exist();\n\n                var errFunc = function (id, callback) {\n\n                    callback(null, {});\n                };\n\n                Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, errFunc, {}, function (err, credentials) {\n\n                    expect(err).to.exist();\n                    expect(err.message).to.equal('Invalid credentials');\n                    done();\n                });\n            });\n        });\n\n        it('should fail authorization on invalid credentials algorithm', function (done) {\n\n            credentialsFunc('123456', function (err, credentials) {\n\n                var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n                expect(auth).to.exist();\n\n                var errFunc = function (id, callback) {\n\n                    callback(null, { key: '123', algorithm: '456' });\n                };\n\n                Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, errFunc, {}, function (err, credentials) {\n\n                    expect(err).to.exist();\n                    expect(err.message).to.equal('Unknown algorithm');\n                    done();\n                });\n            });\n        });\n\n        it('should fail on missing host', function (done) {\n\n            credentialsFunc('123456', function (err, credentials) {\n\n                var auth = Hawk.client.message(null, 8080, 'some message', { credentials: credentials });\n                expect(auth).to.not.exist();\n                done();\n            });\n        });\n\n        it('should fail on missing credentials', function (done) {\n\n            var auth = Hawk.client.message('example.com', 8080, 'some message', {});\n            expect(auth).to.not.exist();\n            done();\n        });\n\n        it('should fail on invalid algorithm', function (done) {\n\n            credentialsFunc('123456', function (err, credentials) {\n\n                var creds = Hoek.clone(credentials);\n                creds.algorithm = 'blah';\n                var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: creds });\n                expect(auth).to.not.exist();\n                done();\n            });\n        });\n    });\n});\n\n"]}