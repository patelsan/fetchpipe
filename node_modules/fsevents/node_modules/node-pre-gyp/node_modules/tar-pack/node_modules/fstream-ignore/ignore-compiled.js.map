{"version":3,"sources":["ignore.js"],"names":[],"mappings":"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","file":"ignore-compiled.js","sourcesContent":["// Essentially, this is a fstream.DirReader class, but with a\n// bit of special logic to read the specified sort of ignore files,\n// and a filter that prevents it from picking up anything excluded\n// by those files.\n\nvar Minimatch = require(\"minimatch\").Minimatch\n, fstream = require(\"fstream\")\n, DirReader = fstream.DirReader\n, inherits = require(\"inherits\")\n, path = require(\"path\")\n, fs = require(\"fs\")\n\nmodule.exports = IgnoreReader\n\ninherits(IgnoreReader, DirReader)\n\nfunction IgnoreReader (props) {\n  if (!(this instanceof IgnoreReader)) {\n    return new IgnoreReader(props)\n  }\n\n  // must be a Directory type\n  if (typeof props === \"string\") {\n    props = { path: path.resolve(props) }\n  }\n\n  props.type = \"Directory\"\n  props.Directory = true\n\n  if (!props.ignoreFiles) props.ignoreFiles = [\".ignore\"]\n  this.ignoreFiles = props.ignoreFiles\n\n  this.ignoreRules = null\n\n  // ensure that .ignore files always show up at the top of the list\n  // that way, they can be read before proceeding to handle other\n  // entries in that same folder\n  if (props.sort) {\n    this._sort = props.sort === \"alpha\" ? alphasort : props.sort\n    props.sort = null\n  }\n\n  this.on(\"entries\", function () {\n    // if there are any ignore files in the list, then\n    // pause and add them.\n    // then, filter the list based on our ignoreRules\n\n    var hasIg = this.entries.some(this.isIgnoreFile, this)\n\n    if (!hasIg) return this.filterEntries()\n\n    this.addIgnoreFiles()\n  })\n\n  // we filter entries before we know what they are.\n  // however, directories have to be re-tested against\n  // rules with a \"/\" appended, because \"a/b/\" will only\n  // match if \"a/b\" is a dir, and not otherwise.\n  this.on(\"_entryStat\", function (entry, props) {\n    var t = entry.basename\n    if (!this.applyIgnores(entry.basename,\n                           entry.type === \"Directory\",\n                           entry)) {\n      entry.abort()\n    }\n  }.bind(this))\n\n  DirReader.call(this, props)\n}\n\n\nIgnoreReader.prototype.addIgnoreFiles = function () {\n  if (this._paused) {\n    this.once(\"resume\", this.addIgnoreFiles)\n    return\n  }\n  if (this._ignoreFilesAdded) return\n  this._ignoreFilesAdded = true\n\n  var newIg = this.entries.filter(this.isIgnoreFile, this)\n  , count = newIg.length\n  , errState = null\n\n  if (!count) return\n\n  this.pause()\n\n  var then = function then (er) {\n    if (errState) return\n    if (er) return this.emit(\"error\", errState = er)\n    if (-- count === 0) {\n      this.filterEntries()\n      this.resume()\n    }\n  }.bind(this)\n\n  newIg.forEach(function (ig) {\n    this.addIgnoreFile(ig, then)\n  }, this)\n}\n\n\nIgnoreReader.prototype.isIgnoreFile = function (e) {\n  return e !== \".\" &&\n         e !== \"..\" &&\n         -1 !== this.ignoreFiles.indexOf(e)\n}\n\n\nIgnoreReader.prototype.getChildProps = function (stat) {\n  var props = DirReader.prototype.getChildProps.call(this, stat)\n  props.ignoreFiles = this.ignoreFiles\n\n  // Directories have to be read as IgnoreReaders\n  // otherwise fstream.Reader will create a DirReader instead.\n  if (stat.isDirectory()) {\n    props.type = this.constructor\n  }\n  return props\n}\n\n\nIgnoreReader.prototype.addIgnoreFile = function (e, cb) {\n  // read the file, and then call addIgnoreRules\n  // if there's an error, then tell the cb about it.\n\n  var ig = path.resolve(this.path, e)\n  fs.readFile(ig, function (er, data) {\n    if (er) return cb(er)\n\n    this.emit(\"ignoreFile\", e, data)\n    var rules = this.readRules(data, e)\n    this.addIgnoreRules(rules, e)\n    cb()\n  }.bind(this))\n}\n\n\nIgnoreReader.prototype.readRules = function (buf, e) {\n  return buf.toString().split(/\\r?\\n/)\n}\n\n\n// Override this to do fancier things, like read the\n// \"files\" array from a package.json file or something.\nIgnoreReader.prototype.addIgnoreRules = function (set, e) {\n  // filter out anything obvious\n  set = set.filter(function (s) {\n    s = s.trim()\n    return s && !s.match(/^#/)\n  })\n\n  // no rules to add!\n  if (!set.length) return\n\n  // now get a minimatch object for each one of these.\n  // Note that we need to allow dot files by default, and\n  // not switch the meaning of their exclusion\n  var mmopt = { matchBase: true, dot: true, flipNegate: true }\n  , mm = set.map(function (s) {\n    var m = new Minimatch(s, mmopt)\n    m.ignoreFile = e\n    return m\n  })\n\n  if (!this.ignoreRules) this.ignoreRules = []\n  this.ignoreRules.push.apply(this.ignoreRules, mm)\n}\n\n\nIgnoreReader.prototype.filterEntries = function () {\n  // this exclusion is at the point where we know the list of\n  // entries in the dir, but don't know what they are.  since\n  // some of them *might* be directories, we have to run the\n  // match in dir-mode as well, so that we'll pick up partials\n  // of files that will be included later.  Anything included\n  // at this point will be checked again later once we know\n  // what it is.\n  this.entries = this.entries.filter(function (entry) {\n    // at this point, we don't know if it's a dir or not.\n    return this.applyIgnores(entry) || this.applyIgnores(entry, true)\n  }, this)\n}\n\n\nIgnoreReader.prototype.applyIgnores = function (entry, partial, obj) {\n  var included = true\n\n  // this = /a/b/c\n  // entry = d\n  // parent /a/b sees c/d\n  if (this.parent && this.parent.applyIgnores) {\n    var pt = this.basename + \"/\" + entry\n    included = this.parent.applyIgnores(pt, partial)\n  }\n\n  // Negated Rules\n  // Since we're *ignoring* things here, negating means that a file\n  // is re-included, if it would have been excluded by a previous\n  // rule.  So, negated rules are only relevant if the file\n  // has been excluded.\n  //\n  // Similarly, if a file has been excluded, then there's no point\n  // trying it against rules that have already been applied\n  //\n  // We're using the \"flipnegate\" flag here, which tells minimatch\n  // to set the \"negate\" for our information, but still report\n  // whether the core pattern was a hit or a miss.\n\n  if (!this.ignoreRules) {\n    return included\n  }\n\n  this.ignoreRules.forEach(function (rule) {\n    // negation means inclusion\n    if (rule.negate && included ||\n        !rule.negate && !included) {\n      // unnecessary\n      return\n    }\n\n    // first, match against /foo/bar\n    var match = rule.match(\"/\" + entry)\n\n    if (!match) {\n      // try with the leading / trimmed off the test\n      // eg: foo/bar instead of /foo/bar\n      match = rule.match(entry)\n    }\n\n    // if the entry is a directory, then it will match\n    // with a trailing slash. eg: /foo/bar/ or foo/bar/\n    if (!match && partial) {\n      match = rule.match(\"/\" + entry + \"/\") ||\n              rule.match(entry + \"/\")\n    }\n\n    // When including a file with a negated rule, it's\n    // relevant if a directory partially matches, since\n    // it may then match a file within it.\n    // Eg, if you ignore /a, but !/a/b/c\n    if (!match && rule.negate && partial) {\n      match = rule.match(\"/\" + entry, true) ||\n              rule.match(entry, true)\n    }\n\n    if (match) {\n      included = rule.negate\n    }\n  }, this)\n\n  return included\n}\n\n\nIgnoreReader.prototype.sort = function (a, b) {\n  var aig = this.ignoreFiles.indexOf(a) !== -1\n  , big = this.ignoreFiles.indexOf(b) !== -1\n\n  if (aig && !big) return -1\n  if (big && !aig) return 1\n  return this._sort(a, b)\n}\n\nIgnoreReader.prototype._sort = function (a, b) {\n  return 0\n}\n\nfunction alphasort (a, b) {\n  return a === b ? 0\n       : a.toLowerCase() > b.toLowerCase() ? 1\n       : a.toLowerCase() < b.toLowerCase() ? -1\n       : a > b ? 1\n       : -1\n}\n"]}