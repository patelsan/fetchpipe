{"version":3,"sources":["dir-writer.js"],"names":[],"mappings":"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","file":"dir-writer-compiled.js","sourcesContent":["// It is expected that, when .add() returns false, the consumer\n// of the DirWriter will pause until a \"drain\" event occurs. Note\n// that this is *almost always going to be the case*, unless the\n// thing being written is some sort of unsupported type, and thus\n// skipped over.\n\nmodule.exports = DirWriter\n\nvar fs = require(\"graceful-fs\")\n  , fstream = require(\"../fstream.js\")\n  , Writer = require(\"./writer.js\")\n  , inherits = require(\"inherits\")\n  , mkdir = require(\"mkdirp\")\n  , path = require(\"path\")\n  , collect = require(\"./collect.js\")\n\ninherits(DirWriter, Writer)\n\nfunction DirWriter (props) {\n  var me = this\n  if (!(me instanceof DirWriter)) me.error(\n    \"DirWriter must be called as constructor.\", null, true)\n\n  // should already be established as a Directory type\n  if (props.type !== \"Directory\" || !props.Directory) {\n    me.error(\"Non-directory type \"+ props.type + \" \" +\n                    JSON.stringify(props), null, true)\n  }\n\n  Writer.call(this, props)\n}\n\nDirWriter.prototype._create = function () {\n  var me = this\n  mkdir(me._path, Writer.dirmode, function (er) {\n    if (er) return me.error(er)\n    // ready to start getting entries!\n    me.ready = true\n    me.emit(\"ready\")\n    me._process()\n  })\n}\n\n// a DirWriter has an add(entry) method, but its .write() doesn't\n// do anything.  Why a no-op rather than a throw?  Because this\n// leaves open the door for writing directory metadata for\n// gnu/solaris style dumpdirs.\nDirWriter.prototype.write = function () {\n  return true\n}\n\nDirWriter.prototype.end = function () {\n  this._ended = true\n  this._process()\n}\n\nDirWriter.prototype.add = function (entry) {\n  var me = this\n\n  // console.error(\"\\tadd\", entry._path, \"->\", me._path)\n  collect(entry)\n  if (!me.ready || me._currentEntry) {\n    me._buffer.push(entry)\n    return false\n  }\n\n  // create a new writer, and pipe the incoming entry into it.\n  if (me._ended) {\n    return me.error(\"add after end\")\n  }\n\n  me._buffer.push(entry)\n  me._process()\n\n  return 0 === this._buffer.length\n}\n\nDirWriter.prototype._process = function () {\n  var me = this\n\n  // console.error(\"DW Process p=%j\", me._processing, me.basename)\n\n  if (me._processing) return\n\n  var entry = me._buffer.shift()\n  if (!entry) {\n    // console.error(\"DW Drain\")\n    me.emit(\"drain\")\n    if (me._ended) me._finish()\n    return\n  }\n\n  me._processing = true\n  // console.error(\"DW Entry\", entry._path)\n\n  me.emit(\"entry\", entry)\n\n  // ok, add this entry\n  //\n  // don't allow recursive copying\n  var p = entry\n  do {\n    var pp = p._path || p.path\n    if (pp === me.root._path || pp === me._path ||\n        (pp && pp.indexOf(me._path) === 0)) {\n      // console.error(\"DW Exit (recursive)\", entry.basename, me._path)\n      me._processing = false\n      if (entry._collected) entry.pipe()\n      return me._process()\n    }\n  } while (p = p.parent)\n\n  // console.error(\"DW not recursive\")\n\n  // chop off the entry's root dir, replace with ours\n  var props = { parent: me\n              , root: me.root || me\n              , type: entry.type\n              , depth: me.depth + 1 }\n\n  var p = entry._path || entry.path || entry.props.path\n  if (entry.parent) {\n    p = p.substr(entry.parent._path.length + 1)\n  }\n  // get rid of any ../../ shenanigans\n  props.path = path.join(me.path, path.join(\"/\", p))\n\n  // if i have a filter, the child should inherit it.\n  props.filter = me.filter\n\n  // all the rest of the stuff, copy over from the source.\n  Object.keys(entry.props).forEach(function (k) {\n    if (!props.hasOwnProperty(k)) {\n      props[k] = entry.props[k]\n    }\n  })\n\n  // not sure at this point what kind of writer this is.\n  var child = me._currentChild = new Writer(props)\n  child.on(\"ready\", function () {\n    // console.error(\"DW Child Ready\", child.type, child._path)\n    // console.error(\"  resuming\", entry._path)\n    entry.pipe(child)\n    entry.resume()\n  })\n\n  // XXX Make this work in node.\n  // Long filenames should not break stuff.\n  child.on(\"error\", function (er) {\n    if (child._swallowErrors) {\n      me.warn(er)\n      child.emit(\"end\")\n      child.emit(\"close\")\n    } else {\n      me.emit(\"error\", er)\n    }\n  })\n\n  // we fire _end internally *after* end, so that we don't move on\n  // until any \"end\" listeners have had their chance to do stuff.\n  child.on(\"close\", onend)\n  var ended = false\n  function onend () {\n    if (ended) return\n    ended = true\n    // console.error(\"* DW Child end\", child.basename)\n    me._currentChild = null\n    me._processing = false\n    me._process()\n  }\n}\n"]}