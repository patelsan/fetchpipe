{"version":3,"sources":["write-then-read.js"],"names":[],"mappings":";;AAAA,IAAI,EAAE,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;AACxB,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,IAAI,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC;AAC/B,IAAI,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;;AAEpD,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,CAAA;;;AAGxB,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;;AAEzB,IAAI,GAAG,GAAG,IAAI,CAAC;AACf,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;;AAE3B,IAAI,CAAC,YAAY,EAAE,UAAU,CAAC,EAAE;AAC9B,QAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACf,QAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;AAEf,OAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;AAC5B,SAAK,CAAC,CAAC,CAAC,GAAG,aAAa,GAAG,CAAC,CAAC;AAC7B,MAAE,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;GACvC;;AAED,GAAC,CAAC,GAAG,EAAE,CAAC;CACT,CAAC,CAAA;;AAEF,IAAI,CAAC,YAAY,EAAE,UAAU,CAAC,EAAE;;AAE9B,MAAI,IAAI,GAAG,CAAC,CAAC;AACb,OAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;AAC5B,MAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,UAAS,GAAG,EAAE,IAAI,EAAE;AACxC,UAAI,GAAG,EACL,MAAM,GAAG,CAAC;;AAEZ,QAAE,IAAI,CAAC;AACP,UAAI,IAAI,KAAK,GAAG,EAAE;AAChB,SAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAClB,SAAC,CAAC,GAAG,EAAE,CAAA;OACR;KACF,CAAC,CAAC;GACJ;CACF,CAAC,CAAC;;AAEH,IAAI,CAAC,SAAS,EAAE,UAAU,CAAC,EAAE;AAC3B,QAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACf,GAAC,CAAC,GAAG,EAAE,CAAC;CACT,CAAC,CAAC","file":"write-then-read-compiled.js","sourcesContent":["var fs = require('../');\nvar rimraf = require('rimraf');\nvar mkdirp = require('mkdirp');\nvar test = require('tap').test;\nvar p = require('path').resolve(__dirname, 'files');\n\nprocess.chdir(__dirname)\n\n// Make sure to reserve the stderr fd\nprocess.stderr.write('');\n\nvar num = 4097;\nvar paths = new Array(num);\n\ntest('make files', function (t) {\n  rimraf.sync(p);\n  mkdirp.sync(p);\n\n  for (var i = 0; i < num; ++i) {\n    paths[i] = 'files/file-' + i;\n    fs.writeFileSync(paths[i], 'content');\n  }\n\n  t.end();\n})\n\ntest('read files', function (t) {\n  // now read them\n  var done = 0;\n  for (var i = 0; i < num; ++i) {\n    fs.readFile(paths[i], function(err, data) {\n      if (err)\n        throw err;\n\n      ++done;\n      if (done === num) {\n        t.pass('success');\n        t.end()\n      }\n    });\n  }\n});\n\ntest('cleanup', function (t) {\n  rimraf.sync(p);\n  t.end();\n});\n"]}