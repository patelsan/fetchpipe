{"version":3,"sources":["extended-header.js"],"names":[],"mappings":"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","file":"extended-header-compiled.js","sourcesContent":["// An Entry consisting of:\n//\n// \"%d %s=%s\\n\", <length>, <keyword>, <value>\n//\n// The length is a decimal number, and includes itself and the \\n\n// \\0 does not terminate anything.  Only the length terminates the string.\n// Numeric values are decimal strings.\n\nmodule.exports = ExtendedHeader\n\nvar Entry = require(\"./entry.js\")\n  , inherits = require(\"inherits\")\n  , tar = require(\"../tar.js\")\n  , numeric = tar.numeric\n  , keyTrans = { \"SCHILY.dev\": \"dev\"\n               , \"SCHILY.ino\": \"ino\"\n               , \"SCHILY.nlink\": \"nlink\" }\n\nfunction ExtendedHeader () {\n  Entry.apply(this, arguments)\n  this.on(\"data\", this._parse)\n  this.fields = {}\n  this._position = 0\n  this._fieldPos = 0\n  this._state = SIZE\n  this._sizeBuf = []\n  this._keyBuf = []\n  this._valBuf = []\n  this._size = -1\n  this._key = \"\"\n}\n\ninherits(ExtendedHeader, Entry)\nExtendedHeader.prototype._parse = parse\n\nvar s = 0\n  , states = ExtendedHeader.states = {}\n  , SIZE = states.SIZE = s++\n  , KEY  = states.KEY  = s++\n  , VAL  = states.VAL  = s++\n  , ERR  = states.ERR  = s++\n\nObject.keys(states).forEach(function (s) {\n  states[states[s]] = states[s]\n})\n\nstates[s] = null\n\n// char code values for comparison\nvar _0 = \"0\".charCodeAt(0)\n  , _9 = \"9\".charCodeAt(0)\n  , point = \".\".charCodeAt(0)\n  , a = \"a\".charCodeAt(0)\n  , Z = \"Z\".charCodeAt(0)\n  , a = \"a\".charCodeAt(0)\n  , z = \"z\".charCodeAt(0)\n  , space = \" \".charCodeAt(0)\n  , eq = \"=\".charCodeAt(0)\n  , cr = \"\\n\".charCodeAt(0)\n\nfunction parse (c) {\n  if (this._state === ERR) return\n\n  for ( var i = 0, l = c.length\n      ; i < l\n      ; this._position++, this._fieldPos++, i++) {\n    // console.error(\"top of loop, size=\"+this._size)\n\n    var b = c[i]\n\n    if (this._size >= 0 && this._fieldPos > this._size) {\n      error(this, \"field exceeds length=\"+this._size)\n      return\n    }\n\n    switch (this._state) {\n      case ERR: return\n\n      case SIZE:\n        // console.error(\"parsing size, b=%d, rest=%j\", b, c.slice(i).toString())\n        if (b === space) {\n          this._state = KEY\n          // this._fieldPos = this._sizeBuf.length\n          this._size = parseInt(new Buffer(this._sizeBuf).toString(), 10)\n          this._sizeBuf.length = 0\n          continue\n        }\n        if (b < _0 || b > _9) {\n          error(this, \"expected [\" + _0 + \"..\" + _9 + \"], got \" + b)\n          return\n        }\n        this._sizeBuf.push(b)\n        continue\n\n      case KEY:\n        // can be any char except =, not > size.\n        if (b === eq) {\n          this._state = VAL\n          this._key = new Buffer(this._keyBuf).toString()\n          if (keyTrans[this._key]) this._key = keyTrans[this._key]\n          this._keyBuf.length = 0\n          continue\n        }\n        this._keyBuf.push(b)\n        continue\n\n      case VAL:\n        // field must end with cr\n        if (this._fieldPos === this._size - 1) {\n          // console.error(\"finished with \"+this._key)\n          if (b !== cr) {\n            error(this, \"expected \\\\n at end of field\")\n            return\n          }\n          var val = new Buffer(this._valBuf).toString()\n          if (numeric[this._key]) {\n            val = parseFloat(val)\n          }\n          this.fields[this._key] = val\n\n          this._valBuf.length = 0\n          this._state = SIZE\n          this._size = -1\n          this._fieldPos = -1\n          continue\n        }\n        this._valBuf.push(b)\n        continue\n    }\n  }\n}\n\nfunction error (me, msg) {\n  msg = \"invalid header: \" + msg\n      + \"\\nposition=\" + me._position\n      + \"\\nfield position=\" + me._fieldPos\n\n  me.error(msg)\n  me.state = ERR\n}\n"]}