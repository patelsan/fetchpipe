{"version":3,"sources":["buffer-entry.js"],"names":[],"mappings":";;;;;;;;;AAOA,MAAM,CAAC,OAAO,GAAG,WAAW,CAAA;;AAE5B,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC;IAC9B,KAAK,GAAG,OAAO,CAAC,YAAY,CAAC,CAAA;;AAEjC,SAAS,WAAW,GAAI;AACtB,OAAK,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAA;AAC5B,MAAI,CAAC,OAAO,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;AAC1C,MAAI,CAAC,OAAO,GAAG,CAAC,CAAA;AAChB,MAAI,CAAC,IAAI,GAAG,EAAE,CAAA;AACd,MAAI,CAAC,EAAE,CAAC,KAAK,EAAE,YAAY;AACzB,QAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;GACjD,CAAC,CAAA;CACH;;AAED,QAAQ,CAAC,WAAW,EAAE,KAAK,CAAC,CAAA;;;AAG5B,WAAW,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,CAAC,EAAE;AACzC,GAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAA;AAClC,MAAI,CAAC,OAAO,IAAI,CAAC,CAAC,MAAM,CAAA;AACxB,OAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;CACpC,CAAA","file":"buffer-entry-compiled.js","sourcesContent":["// just like the Entry class, but it buffers the contents\n//\n// XXX It would be good to set a maximum BufferEntry filesize,\n// since it eats up memory.  In normal operation,\n// these are only for long filenames or link names, which are\n// rarely very big.\n\nmodule.exports = BufferEntry\n\nvar inherits = require(\"inherits\")\n  , Entry = require(\"./entry.js\")\n\nfunction BufferEntry () {\n  Entry.apply(this, arguments)\n  this._buffer = new Buffer(this.props.size)\n  this._offset = 0\n  this.body = \"\"\n  this.on(\"end\", function () {\n    this.body = this._buffer.toString().slice(0, -1)\n  })\n}\n\ninherits(BufferEntry, Entry)\n\n// collect the bytes as they come in.\nBufferEntry.prototype.write = function (c) {\n  c.copy(this._buffer, this._offset)\n  this._offset += c.length\n  Entry.prototype.write.call(this, c)\n}\n"]}