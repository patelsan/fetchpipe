{"version":3,"sources":["entry.js"],"names":[],"mappings":";;;;;;;;AAMA,MAAM,CAAC,OAAO,GAAG,KAAK,CAAA;;AAEtB,IAAI,SAAS,GAAG,OAAO,CAAC,aAAa,CAAC;IAClC,GAAG,GAAG,OAAO,CAAC,QAAQ,CAAC;IACvB,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE;IAC7B,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM;IACjC,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC;IAC9B,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAA;;AAEzC,SAAS,KAAK,CAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE;AACxC,QAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;AACjB,MAAI,CAAC,QAAQ,GAAG,IAAI,CAAA;AACpB,MAAI,CAAC,QAAQ,GAAG,IAAI,CAAA;;AAEpB,MAAI,CAAC,UAAU,GAAG,KAAK,CAAA;AACvB,MAAI,CAAC,OAAO,GAAG,KAAK,CAAA;AACpB,MAAI,CAAC,QAAQ,GAAG,KAAK,CAAA;AACrB,MAAI,CAAC,OAAO,GAAG,KAAK,CAAA;AACpB,MAAI,CAAC,MAAM,GAAG,KAAK,CAAA;AACnB,MAAI,CAAC,UAAU,GAAG,CAAC,CAAA;AACnB,MAAI,CAAC,MAAM,GAAG,KAAK,CAAA;AACnB,MAAI,CAAC,MAAM,GAAG,EAAE,CAAA;AAChB,MAAI,CAAC,MAAM,GAAG,CAAC,CAAA;AACf,MAAI,CAAC,SAAS,GAAG,CAAC,CAAA;;AAElB,MAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;;AAElC,MAAI,CAAC,KAAK,GAAG,EAAE,CAAA;AACf,MAAI,CAAC,OAAO,GAAG,MAAM,CAAA;AACrB,MAAI,CAAC,SAAS,GAAG,QAAQ,IAAI,EAAE,CAAA;;;;AAI/B,MAAI,CAAC,OAAO,GAAG,EAAE,CAAA;AACjB,MAAI,EAAE,GAAG,IAAI,CAAA;AACb,QAAM,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;AAC7C,MAAE,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAA;GAC1B,CAAC,CAAA;;AAEF,MAAI,CAAC,SAAS,EAAE,CAAA;CACjB;;AAED,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAA;;AAEvB,KAAK,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,CAAC,EAAE;AACnC,MAAI,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,qBAAqB,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;AAC/D,MAAI,IAAI,CAAC,UAAU,KAAK,CAAC,EAAE;AACzB,QAAI,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAA;GACrC;;;;AAID,MAAI,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE;AAC9B,KAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAA;GAChC;AACD,MAAI,CAAC,UAAU,IAAI,CAAC,CAAC,MAAM,CAAA;;;AAG3B,MAAI,EAAE,GAAG,IAAI,CAAC,SAAS,CAAA;AACvB,MAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;AACnB,MAAI,CAAC,SAAS,EAAG,CAAA;;AAEjB,MAAI,CAAC,KAAK,EAAE,CAAA;;;AAGZ,MAAI,IAAI,CAAC,OAAO,IAAI,EAAE,GAAG,CAAC,EAAE;AAC1B,QAAI,CAAC,UAAU,GAAG,IAAI,CAAA;AACtB,WAAO,KAAK,CAAA;GACb;;AAED,SAAO,IAAI,CAAA;CACZ,CAAA;;AAED,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG,UAAU,CAAC,EAAE;AACjC,MAAI,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;AACpB,MAAI,CAAC,OAAO,GAAG,IAAI,CAAA;AACnB,MAAI,CAAC,KAAK,EAAE,CAAA;CACb,CAAA;;AAED,KAAK,CAAC,SAAS,CAAC,KAAK,GAAG,YAAY;AAClC,MAAI,CAAC,OAAO,GAAG,IAAI,CAAA;AACnB,MAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;CACnB,CAAA;;AAED,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,YAAY;;AAEnC,MAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;AACnB,MAAI,CAAC,OAAO,GAAG,KAAK,CAAA;AACpB,MAAI,CAAC,KAAK,EAAE,CAAA;AACZ,SAAO,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAA;CACxC,CAAA;;;AAGD,KAAK,CAAC,SAAS,CAAC,KAAK,GAAG,YAAY;;;AAGlC,MAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,EAAE,OAAM;;;;AAIxD,MAAI,CAAC,QAAQ,GAAG,IAAI,CAAA;;;AAGpB,SAAO,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AACpD,QAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAG,CAAC,CAAA;AACvC,QAAI,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;GACzB;;;AAGD,MAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,EAAE;AACjC,QAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAA;AACrD,QAAI,IAAI,CAAC,UAAU,EAAE;AACnB,UAAI,CAAC,UAAU,GAAG,KAAK,CAAA;AACvB,UAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;KACnB;AACD,QAAI,IAAI,CAAC,OAAO,EAAE;AAChB,UAAI,CAAC,MAAM,GAAG,IAAI,CAAA;AAClB,UAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;KACjB;GACF;;;;AAID,MAAI,GAAG,GAAG,IAAI,CAAC,YAAY,CAAA;AAC3B,MAAI,IAAI,CAAC,SAAS,GAAG,GAAG,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;AAC3C,OAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAA;AAChC,QAAI,CAAC,MAAM,IAAI,GAAG,CAAA;AAClB,QAAI,CAAC,SAAS,IAAI,GAAG,CAAA;AACrB,QAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;GACrC;;AAED,MAAI,CAAC,QAAQ,GAAG,KAAK,CAAA;CACtB,CAAA;;AAED,KAAK,CAAC,SAAS,CAAC,SAAS,GAAG,YAAY;;AAEtC,MAAI,MAAM,GAAG,IAAI,CAAC,OAAO;MACrB,QAAQ,GAAG,IAAI,CAAC,SAAS;MACzB,MAAM,GAAG,IAAI,CAAC,OAAO;MACrB,KAAK,GAAG,IAAI,CAAC,KAAK,CAAA;;;AAGtB,MAAI,MAAM,GAAG,GAAG,CAAC,MAAM,CAAA;AACvB,OAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC,EAAG,EAAE;AACxC,QAAI,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC;QACjB,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,CAAA;AACvB,QAAI,OAAO,GAAG,KAAK,WAAW,EAAE,KAAK,CAAC,KAAK,CAAC,GAAG,GAAG,CAAA;GACnD;;;;AAID,GAAC,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;AACvC,UAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;AAClC,UAAI,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;KACjD,CAAC,CAAA;GACH,CAAC,CAGD;;;AAAA,GAAC,MAAM,EAAE,UAAU,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;AACzC,QAAI,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;AAC3B,WAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;KACnC;GACF,CAAC,CAID;;;AAAA,GAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;AAChD,QAAI,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;AAC3B,WAAK,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAA;KACrC;GACF,CAAC,CAAA;;;AAGF,MAAI,IAAI,CAAA;AACR,UAAQ,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC;AAC3B,SAAK,SAAS,CAAC;AACf,SAAK,gBAAgB;AACnB,UAAI,GAAG,MAAM,CAAA;AACb,YAAK;;AAAA,AAEP,SAAK,YAAY;AACf,UAAI,GAAG,WAAW,CAAA;AAClB,YAAK;;AAAA,AAEP,SAAK,SAAS;AACZ,UAAI,GAAG,SAAS,CAAA;AAChB,YAAK;;AAAA,AAEP,SAAK,MAAM,CAAC;AACZ,SAAK,cAAc,CAAC;AACpB,SAAK,iBAAiB,CAAC;AACvB,SAAK,aAAa,CAAC;AACnB,SAAK,WAAW,CAAC;AACjB,SAAK,MAAM,CAAC;AACZ;AACE,UAAI,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;AAAA,GAC/B;;AAED,MAAI,CAAC,IAAI,GAAG,IAAI,CAAA;AAChB,MAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAA;AACtB,MAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAA;;;AAGtB,MAAI,CAAC,UAAU,GAAG,KAAK,CAAC,IAAI,CAAA;CAC7B,CAAA;;;;AAID,KAAK,CAAC,SAAS,CAAC,KAAK,GAAG,YAAU;AAChC,MAAI,CAAC,MAAM,GAAG,IAAI,CAAA;CACnB,CAAA;;AAED,KAAK,CAAC,SAAS,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAA;AACnC,KAAK,CAAC,SAAS,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAA","file":"entry-compiled.js","sourcesContent":["// A passthrough read/write stream that sets its properties\n// based on a header, extendedHeader, and globalHeader\n//\n// Can be either a file system object of some sort, or\n// a pax/ustar metadata entry.\n\nmodule.exports = Entry\n\nvar TarHeader = require(\"./header.js\")\n  , tar = require(\"../tar\")\n  , assert = require(\"assert\").ok\n  , Stream = require(\"stream\").Stream\n  , inherits = require(\"inherits\")\n  , fstream = require(\"fstream\").Abstract\n\nfunction Entry (header, extended, global) {\n  Stream.call(this)\n  this.readable = true\n  this.writable = true\n\n  this._needDrain = false\n  this._paused = false\n  this._reading = false\n  this._ending = false\n  this._ended = false\n  this._remaining = 0\n  this._abort = false\n  this._queue = []\n  this._index = 0\n  this._queueLen = 0\n\n  this._read = this._read.bind(this)\n\n  this.props = {}\n  this._header = header\n  this._extended = extended || {}\n\n  // globals can change throughout the course of\n  // a file parse operation.  Freeze it at its current state.\n  this._global = {}\n  var me = this\n  Object.keys(global || {}).forEach(function (g) {\n    me._global[g] = global[g]\n  })\n\n  this._setProps()\n}\n\ninherits(Entry, Stream)\n\nEntry.prototype.write = function (c) {\n  if (this._ending) this.error(\"write() after end()\", null, true)\n  if (this._remaining === 0) {\n    this.error(\"invalid bytes past eof\")\n  }\n\n  // often we'll get a bunch of \\0 at the end of the last write,\n  // since chunks will always be 512 bytes when reading a tarball.\n  if (c.length > this._remaining) {\n    c = c.slice(0, this._remaining)\n  }\n  this._remaining -= c.length\n\n  // put it on the stack.\n  var ql = this._queueLen\n  this._queue.push(c)\n  this._queueLen ++\n\n  this._read()\n\n  // either paused, or buffered\n  if (this._paused || ql > 0) {\n    this._needDrain = true\n    return false\n  }\n\n  return true\n}\n\nEntry.prototype.end = function (c) {\n  if (c) this.write(c)\n  this._ending = true\n  this._read()\n}\n\nEntry.prototype.pause = function () {\n  this._paused = true\n  this.emit(\"pause\")\n}\n\nEntry.prototype.resume = function () {\n  // console.error(\"    Tar Entry resume\", this.path)\n  this.emit(\"resume\")\n  this._paused = false\n  this._read()\n  return this._queueLen - this._index > 1\n}\n\n  // This is bound to the instance\nEntry.prototype._read = function () {\n  // console.error(\"    Tar Entry _read\", this.path)\n\n  if (this._paused || this._reading || this._ended) return\n\n  // set this flag so that event handlers don't inadvertently\n  // get multiple _read() calls running.\n  this._reading = true\n\n  // have any data to emit?\n  while (this._index < this._queueLen && !this._paused) {\n    var chunk = this._queue[this._index ++]\n    this.emit(\"data\", chunk)\n  }\n\n  // check if we're drained\n  if (this._index >= this._queueLen) {\n    this._queue.length = this._queueLen = this._index = 0\n    if (this._needDrain) {\n      this._needDrain = false\n      this.emit(\"drain\")\n    }\n    if (this._ending) {\n      this._ended = true\n      this.emit(\"end\")\n    }\n  }\n\n  // if the queue gets too big, then pluck off whatever we can.\n  // this should be fairly rare.\n  var mql = this._maxQueueLen\n  if (this._queueLen > mql && this._index > 0) {\n    mql = Math.min(this._index, mql)\n    this._index -= mql\n    this._queueLen -= mql\n    this._queue = this._queue.slice(mql)\n  }\n\n  this._reading = false\n}\n\nEntry.prototype._setProps = function () {\n  // props = extended->global->header->{}\n  var header = this._header\n    , extended = this._extended\n    , global = this._global\n    , props = this.props\n\n  // first get the values from the normal header.\n  var fields = tar.fields\n  for (var f = 0; fields[f] !== null; f ++) {\n    var field = fields[f]\n      , val = header[field]\n    if (typeof val !== \"undefined\") props[field] = val\n  }\n\n  // next, the global header for this file.\n  // numeric values, etc, will have already been parsed.\n  ;[global, extended].forEach(function (p) {\n    Object.keys(p).forEach(function (f) {\n      if (typeof p[f] !== \"undefined\") props[f] = p[f]\n    })\n  })\n\n  // no nulls allowed in path or linkpath\n  ;[\"path\", \"linkpath\"].forEach(function (p) {\n    if (props.hasOwnProperty(p)) {\n      props[p] = props[p].split(\"\\0\")[0]\n    }\n  })\n\n\n  // set date fields to be a proper date\n  ;[\"mtime\", \"ctime\", \"atime\"].forEach(function (p) {\n    if (props.hasOwnProperty(p)) {\n      props[p] = new Date(props[p] * 1000)\n    }\n  })\n\n  // set the type so that we know what kind of file to create\n  var type\n  switch (tar.types[props.type]) {\n    case \"OldFile\":\n    case \"ContiguousFile\":\n      type = \"File\"\n      break\n\n    case \"GNUDumpDir\":\n      type = \"Directory\"\n      break\n\n    case undefined:\n      type = \"Unknown\"\n      break\n\n    case \"Link\":\n    case \"SymbolicLink\":\n    case \"CharacterDevice\":\n    case \"BlockDevice\":\n    case \"Directory\":\n    case \"FIFO\":\n    default:\n      type = tar.types[props.type]\n  }\n\n  this.type = type\n  this.path = props.path\n  this.size = props.size\n\n  // size is special, since it signals when the file needs to end.\n  this._remaining = props.size\n}\n\n// the parser may not call write if _abort is true. \n// useful for skipping data from some files quickly.\nEntry.prototype.abort = function(){\n  this._abort = true\n}\n\nEntry.prototype.warn = fstream.warn\nEntry.prototype.error = fstream.error\n"]}