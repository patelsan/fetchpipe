{"version":3,"sources":["parse.js"],"names":[],"mappings":"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","file":"parse-compiled.js","sourcesContent":["\n// A writable stream.\n// It emits \"entry\" events, which provide a readable stream that has\n// header info attached.\n\nmodule.exports = Parse.create = Parse\n\nvar stream = require(\"stream\")\n  , Stream = stream.Stream\n  , BlockStream = require(\"block-stream\")\n  , tar = require(\"../tar.js\")\n  , TarHeader = require(\"./header.js\")\n  , Entry = require(\"./entry.js\")\n  , BufferEntry = require(\"./buffer-entry.js\")\n  , ExtendedHeader = require(\"./extended-header.js\")\n  , assert = require(\"assert\").ok\n  , inherits = require(\"inherits\")\n  , fstream = require(\"fstream\")\n\n// reading a tar is a lot like reading a directory\n// However, we're actually not going to run the ctor,\n// since it does a stat and various other stuff.\n// This inheritance gives us the pause/resume/pipe\n// behavior that is desired.\ninherits(Parse, fstream.Reader)\n\nfunction Parse () {\n  var me = this\n  if (!(me instanceof Parse)) return new Parse()\n\n  // doesn't apply fstream.Reader ctor?\n  // no, becasue we don't want to stat/etc, we just\n  // want to get the entry/add logic from .pipe()\n  Stream.apply(me)\n\n  me.writable = true\n  me.readable = true\n  me._stream = new BlockStream(512)\n  me.position = 0\n  me._ended = false\n\n  me._stream.on(\"error\", function (e) {\n    me.emit(\"error\", e)\n  })\n\n  me._stream.on(\"data\", function (c) {\n    me._process(c)\n  })\n\n  me._stream.on(\"end\", function () {\n    me._streamEnd()\n  })\n\n  me._stream.on(\"drain\", function () {\n    me.emit(\"drain\")\n  })\n}\n\n// overridden in Extract class, since it needs to\n// wait for its DirWriter part to finish before\n// emitting \"end\"\nParse.prototype._streamEnd = function () {\n  var me = this\n  if (!me._ended || me._entry) me.error(\"unexpected eof\")\n  me.emit(\"end\")\n}\n\n// a tar reader is actually a filter, not just a readable stream.\n// So, you should pipe a tarball stream into it, and it needs these\n// write/end methods to do that.\nParse.prototype.write = function (c) {\n  if (this._ended) {\n    // gnutar puts a LOT of nulls at the end.\n    // you can keep writing these things forever.\n    // Just ignore them.\n    for (var i = 0, l = c.length; i > l; i ++) {\n      if (c[i] !== 0) return this.error(\"write() after end()\")\n    }\n    return\n  }\n  return this._stream.write(c)\n}\n\nParse.prototype.end = function (c) {\n  this._ended = true\n  return this._stream.end(c)\n}\n\n// don't need to do anything, since we're just\n// proxying the data up from the _stream.\n// Just need to override the parent's \"Not Implemented\"\n// error-thrower.\nParse.prototype._read = function () {}\n\nParse.prototype._process = function (c) {\n  assert(c && c.length === 512, \"block size should be 512\")\n\n  // one of three cases.\n  // 1. A new header\n  // 2. A part of a file/extended header\n  // 3. One of two or more EOF null blocks\n\n  if (this._entry) {\n    var entry = this._entry\n    if(!entry._abort) entry.write(c)\n    else {\n      entry._remaining -= c.length\n      if(entry._remaining < 0) entry._remaining = 0\n    }\n    if (entry._remaining === 0) {\n      entry.end()\n      this._entry = null\n    }\n  } else {\n    // either zeroes or a header\n    var zero = true\n    for (var i = 0; i < 512 && zero; i ++) {\n      zero = c[i] === 0\n    }\n\n    // eof is *at least* 2 blocks of nulls, and then the end of the\n    // file.  you can put blocks of nulls between entries anywhere,\n    // so appending one tarball to another is technically valid.\n    // ending without the eof null blocks is not allowed, however.\n    if (zero) {\n      if (this._eofStarted)\n        this._ended = true\n      this._eofStarted = true\n    } else {\n      this._eofStarted = false\n      this._startEntry(c)\n    }\n  }\n\n  this.position += 512\n}\n\n// take a header chunk, start the right kind of entry.\nParse.prototype._startEntry = function (c) {\n  var header = new TarHeader(c)\n    , self = this\n    , entry\n    , ev\n    , EntryType\n    , onend\n    , meta = false\n\n  if (null === header.size || !header.cksumValid) {\n    var e = new Error(\"invalid tar file\")\n    e.header = header\n    e.tar_file_offset = this.position\n    e.tar_block = this.position / 512\n    return this.emit(\"error\", e)\n  }\n\n  switch (tar.types[header.type]) {\n    case \"File\":\n    case \"OldFile\":\n    case \"Link\":\n    case \"SymbolicLink\":\n    case \"CharacterDevice\":\n    case \"BlockDevice\":\n    case \"Directory\":\n    case \"FIFO\":\n    case \"ContiguousFile\":\n    case \"GNUDumpDir\":\n      // start a file.\n      // pass in any extended headers\n      // These ones consumers are typically most interested in.\n      EntryType = Entry\n      ev = \"entry\"\n      break\n\n    case \"GlobalExtendedHeader\":\n      // extended headers that apply to the rest of the tarball\n      EntryType = ExtendedHeader\n      onend = function () {\n        self._global = self._global || {}\n        Object.keys(entry.fields).forEach(function (k) {\n          self._global[k] = entry.fields[k]\n        })\n      }\n      ev = \"globalExtendedHeader\"\n      meta = true\n      break\n\n    case \"ExtendedHeader\":\n    case \"OldExtendedHeader\":\n      // extended headers that apply to the next entry\n      EntryType = ExtendedHeader\n      onend = function () {\n        self._extended = entry.fields\n      }\n      ev = \"extendedHeader\"\n      meta = true\n      break\n\n    case \"NextFileHasLongLinkpath\":\n      // set linkpath=<contents> in extended header\n      EntryType = BufferEntry\n      onend = function () {\n        self._extended = self._extended || {}\n        self._extended.linkpath = entry.body\n      }\n      ev = \"longLinkpath\"\n      meta = true\n      break\n\n    case \"NextFileHasLongPath\":\n    case \"OldGnuLongPath\":\n      // set path=<contents> in file-extended header\n      EntryType = BufferEntry\n      onend = function () {\n        self._extended = self._extended || {}\n        self._extended.path = entry.body\n      }\n      ev = \"longPath\"\n      meta = true\n      break\n\n    default:\n      // all the rest we skip, but still set the _entry\n      // member, so that we can skip over their data appropriately.\n      // emit an event to say that this is an ignored entry type?\n      EntryType = Entry\n      ev = \"ignoredEntry\"\n      break\n  }\n\n  var global, extended\n  if (meta) {\n    global = extended = null\n  } else {\n    var global = this._global\n    var extended = this._extended\n\n    // extendedHeader only applies to one entry, so once we start\n    // an entry, it's over.\n    this._extended = null\n  }\n  entry = new EntryType(header, extended, global)\n  entry.meta = meta\n\n  // only proxy data events of normal files.\n  if (!meta) {\n    entry.on(\"data\", function (c) {\n      me.emit(\"data\", c)\n    })\n  }\n\n  if (onend) entry.on(\"end\", onend)\n\n  this._entry = entry\n  var me = this\n\n  entry.on(\"pause\", function () {\n    me.pause()\n  })\n\n  entry.on(\"resume\", function () {\n    me.resume()\n  })\n\n  if (this.listeners(\"*\").length) {\n    this.emit(\"*\", ev, entry)\n  }\n\n  this.emit(ev, entry)\n\n  // Zero-byte entry.  End immediately.\n  if (entry.props.size === 0) {\n    entry.end()\n    this._entry = null\n  }\n}\n"]}