{"version":3,"sources":["nopad.js"],"names":[],"mappings":";;AAAA,IAAI,WAAW,GAAG,OAAO,CAAC,KAAK,CAAC,CAAA;AAChC,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAA;;AAGxB,GAAG,CAAC,IAAI,CAAC,yBAAyB,EAAE,UAAU,CAAC,EAAE;AAC/C,MAAI,CAAC,GAAG,IAAI,WAAW,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAA;AAC5C,GAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;;AAET,GAAC,CAAC,EAAE,CAAC,MAAM,EAAE,UAAU,CAAC,EAAE;AACxB,KAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,kBAAkB,CAAC,CAAA;GACjD,CAAC,CAAA;;AAEF,GAAC,CAAC,EAAE,CAAC,KAAK,EAAE,YAAY;AAAE,KAAC,CAAC,GAAG,EAAE,CAAA;GAAE,CAAC,CAAA;;AAEpC,GAAC,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;AACxB,GAAC,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;AACxB,GAAC,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;AACxB,GAAC,CAAC,GAAG,EAAE,CAAA;CACR,CAAC,CAAA;;AAEF,GAAG,CAAC,IAAI,CAAC,wBAAwB,EAAE,UAAU,CAAC,EAAE;AAC9C,MAAI,CAAC,GAAG,IAAI,WAAW,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAA;AAC5C,GAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;;AAET,MAAI,KAAK,GAAG,IAAI,CAAA;AAChB,GAAC,CAAC,EAAE,CAAC,MAAM,EAAE,UAAU,CAAC,EAAE;AACxB,QAAI,KAAK,EAAE;AACT,WAAK,GAAG,KAAK,CAAA;AACb,OAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,kBAAkB,EAAE,aAAa,CAAC,CAAA;KACzD,MAAM;AACL,OAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAA;KAC9B;GACF,CAAC,CAAA;;AAEF,GAAC,CAAC,EAAE,CAAC,KAAK,EAAE,YAAY;AAAE,KAAC,CAAC,GAAG,EAAE,CAAA;GAAE,CAAC,CAAA;;AAEpC,GAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAA;CACtC,CAAC,CAAA;;AAEF,GAAG,CAAC,IAAI,CAAC,sBAAsB,EAAE,UAAU,CAAC,EAAE;AAC5C,MAAI,CAAC,GAAG,IAAI,WAAW,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAA;AAC5C,GAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;;AAET,MAAI,KAAK,GAAG,IAAI,CAAA;AAChB,GAAC,CAAC,EAAE,CAAC,MAAM,EAAE,UAAU,CAAC,EAAE;AACxB,QAAI,KAAK,EAAE;AACT,WAAK,GAAG,KAAK,CAAA;AACb,OAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,kBAAkB,EAAE,aAAa,CAAC,CAAA;KACzD,MAAM;AACL,OAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,GAAG,CAAC,CAAA;KAC3B;GACF,CAAC,CAAA;;AAEF,GAAC,CAAC,EAAE,CAAC,KAAK,EAAE,YAAY;AAAE,KAAC,CAAC,GAAG,EAAE,CAAA;GAAE,CAAC,CAAA;;AAEpC,GAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,mBAAmB,CAAC,CAAC,CAAA;CACvC,CAAC,CAAA","file":"nopad-compiled.js","sourcesContent":["var BlockStream = require(\"../\")\nvar tap = require(\"tap\")\n\n\ntap.test(\"don't pad, small writes\", function (t) {\n  var f = new BlockStream(16, { nopad: true })\n  t.plan(1)\n\n  f.on(\"data\", function (c) {\n    t.equal(c.toString(), \"abc\", \"should get 'abc'\")\n  })\n\n  f.on(\"end\", function () { t.end() })\n\n  f.write(new Buffer(\"a\"))\n  f.write(new Buffer(\"b\"))\n  f.write(new Buffer(\"c\"))\n  f.end()\n})\n\ntap.test(\"don't pad, exact write\", function (t) {\n  var f = new BlockStream(16, { nopad: true })\n  t.plan(1)\n\n  var first = true\n  f.on(\"data\", function (c) {\n    if (first) {\n      first = false\n      t.equal(c.toString(), \"abcdefghijklmnop\", \"first chunk\")\n    } else {\n      t.fail(\"should only get one\")\n    }\n  })\n\n  f.on(\"end\", function () { t.end() })\n\n  f.end(new Buffer(\"abcdefghijklmnop\"))\n})\n\ntap.test(\"don't pad, big write\", function (t) {\n  var f = new BlockStream(16, { nopad: true })\n  t.plan(2)\n\n  var first = true\n  f.on(\"data\", function (c) {\n    if (first) {\n      first = false\n      t.equal(c.toString(), \"abcdefghijklmnop\", \"first chunk\")\n    } else {\n      t.equal(c.toString(), \"q\")\n    }\n  })\n\n  f.on(\"end\", function () { t.end() })\n\n  f.end(new Buffer(\"abcdefghijklmnopq\"))\n})\n"]}