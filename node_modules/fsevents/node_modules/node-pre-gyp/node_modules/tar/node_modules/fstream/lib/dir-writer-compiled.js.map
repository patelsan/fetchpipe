{"version":3,"sources":["dir-writer.js"],"names":[],"mappings":"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","file":"dir-writer-compiled.js","sourcesContent":["// It is expected that, when .add() returns false, the consumer\n// of the DirWriter will pause until a \"drain\" event occurs. Note\n// that this is *almost always going to be the case*, unless the\n// thing being written is some sort of unsupported type, and thus\n// skipped over.\n\nmodule.exports = DirWriter\n\nvar Writer = require('./writer.js')\nvar inherits = require('inherits')\nvar mkdir = require('mkdirp')\nvar path = require('path')\nvar collect = require('./collect.js')\n\ninherits(DirWriter, Writer)\n\nfunction DirWriter (props) {\n  var self = this\n  if (!(self instanceof DirWriter)) {\n    self.error('DirWriter must be called as constructor.', null, true)\n  }\n\n  // should already be established as a Directory type\n  if (props.type !== 'Directory' || !props.Directory) {\n    self.error('Non-directory type ' + props.type + ' ' +\n      JSON.stringify(props), null, true)\n  }\n\n  Writer.call(this, props)\n}\n\nDirWriter.prototype._create = function () {\n  var self = this\n  mkdir(self._path, Writer.dirmode, function (er) {\n    if (er) return self.error(er)\n    // ready to start getting entries!\n    self.ready = true\n    self.emit('ready')\n    self._process()\n  })\n}\n\n// a DirWriter has an add(entry) method, but its .write() doesn't\n// do anything.  Why a no-op rather than a throw?  Because this\n// leaves open the door for writing directory metadata for\n// gnu/solaris style dumpdirs.\nDirWriter.prototype.write = function () {\n  return true\n}\n\nDirWriter.prototype.end = function () {\n  this._ended = true\n  this._process()\n}\n\nDirWriter.prototype.add = function (entry) {\n  var self = this\n\n  // console.error('\\tadd', entry._path, '->', self._path)\n  collect(entry)\n  if (!self.ready || self._currentEntry) {\n    self._buffer.push(entry)\n    return false\n  }\n\n  // create a new writer, and pipe the incoming entry into it.\n  if (self._ended) {\n    return self.error('add after end')\n  }\n\n  self._buffer.push(entry)\n  self._process()\n\n  return this._buffer.length === 0\n}\n\nDirWriter.prototype._process = function () {\n  var self = this\n\n  // console.error('DW Process p=%j', self._processing, self.basename)\n\n  if (self._processing) return\n\n  var entry = self._buffer.shift()\n  if (!entry) {\n    // console.error(\"DW Drain\")\n    self.emit('drain')\n    if (self._ended) self._finish()\n    return\n  }\n\n  self._processing = true\n  // console.error(\"DW Entry\", entry._path)\n\n  self.emit('entry', entry)\n\n  // ok, add this entry\n  //\n  // don't allow recursive copying\n  var p = entry\n  var pp\n  do {\n    pp = p._path || p.path\n    if (pp === self.root._path || pp === self._path ||\n      (pp && pp.indexOf(self._path) === 0)) {\n      // console.error('DW Exit (recursive)', entry.basename, self._path)\n      self._processing = false\n      if (entry._collected) entry.pipe()\n      return self._process()\n    }\n    p = p.parent\n  } while (p)\n\n  // console.error(\"DW not recursive\")\n\n  // chop off the entry's root dir, replace with ours\n  var props = {\n    parent: self,\n    root: self.root || self,\n    type: entry.type,\n    depth: self.depth + 1\n  }\n\n  pp = entry._path || entry.path || entry.props.path\n  if (entry.parent) {\n    pp = pp.substr(entry.parent._path.length + 1)\n  }\n  // get rid of any ../../ shenanigans\n  props.path = path.join(self.path, path.join('/', pp))\n\n  // if i have a filter, the child should inherit it.\n  props.filter = self.filter\n\n  // all the rest of the stuff, copy over from the source.\n  Object.keys(entry.props).forEach(function (k) {\n    if (!props.hasOwnProperty(k)) {\n      props[k] = entry.props[k]\n    }\n  })\n\n  // not sure at this point what kind of writer this is.\n  var child = self._currentChild = new Writer(props)\n  child.on('ready', function () {\n    // console.error(\"DW Child Ready\", child.type, child._path)\n    // console.error(\"  resuming\", entry._path)\n    entry.pipe(child)\n    entry.resume()\n  })\n\n  // XXX Make this work in node.\n  // Long filenames should not break stuff.\n  child.on('error', function (er) {\n    if (child._swallowErrors) {\n      self.warn(er)\n      child.emit('end')\n      child.emit('close')\n    } else {\n      self.emit('error', er)\n    }\n  })\n\n  // we fire _end internally *after* end, so that we don't move on\n  // until any \"end\" listeners have had their chance to do stuff.\n  child.on('close', onend)\n  var ended = false\n  function onend () {\n    if (ended) return\n    ended = true\n    // console.error(\"* DW Child end\", child.basename)\n    self._currentChild = null\n    self._processing = false\n    self._process()\n  }\n}\n"]}