{"version":3,"sources":["link-writer.js"],"names":[],"mappings":"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","file":"link-writer-compiled.js","sourcesContent":["module.exports = LinkWriter\n\nvar fs = require('graceful-fs')\nvar Writer = require('./writer.js')\nvar inherits = require('inherits')\nvar path = require('path')\nvar rimraf = require('rimraf')\n\ninherits(LinkWriter, Writer)\n\nfunction LinkWriter (props) {\n  var self = this\n  if (!(self instanceof LinkWriter)) {\n    throw new Error('LinkWriter must be called as constructor.')\n  }\n\n  // should already be established as a Link type\n  if (!((props.type === 'Link' && props.Link) ||\n    (props.type === 'SymbolicLink' && props.SymbolicLink))) {\n    throw new Error('Non-link type ' + props.type)\n  }\n\n  if (props.linkpath === '') props.linkpath = '.'\n  if (!props.linkpath) {\n    self.error('Need linkpath property to create ' + props.type)\n  }\n\n  Writer.call(this, props)\n}\n\nLinkWriter.prototype._create = function () {\n  // console.error(\" LW _create\")\n  var self = this\n  var hard = self.type === 'Link' || process.platform === 'win32'\n  var link = hard ? 'link' : 'symlink'\n  var lp = hard ? path.resolve(self.dirname, self.linkpath) : self.linkpath\n\n  // can only change the link path by clobbering\n  // For hard links, let's just assume that's always the case, since\n  // there's no good way to read them if we don't already know.\n  if (hard) return clobber(self, lp, link)\n\n  fs.readlink(self._path, function (er, p) {\n    // only skip creation if it's exactly the same link\n    if (p && p === lp) return finish(self)\n    clobber(self, lp, link)\n  })\n}\n\nfunction clobber (self, lp, link) {\n  rimraf(self._path, function (er) {\n    if (er) return self.error(er)\n    create(self, lp, link)\n  })\n}\n\nfunction create (self, lp, link) {\n  fs[link](lp, self._path, function (er) {\n    // if this is a hard link, and we're in the process of writing out a\n    // directory, it's very possible that the thing we're linking to\n    // doesn't exist yet (especially if it was intended as a symlink),\n    // so swallow ENOENT errors here and just soldier in.\n    // Additionally, an EPERM or EACCES can happen on win32 if it's trying\n    // to make a link to a directory.  Again, just skip it.\n    // A better solution would be to have fs.symlink be supported on\n    // windows in some nice fashion.\n    if (er) {\n      if ((er.code === 'ENOENT' ||\n        er.code === 'EACCES' ||\n        er.code === 'EPERM') && process.platform === 'win32') {\n        self.ready = true\n        self.emit('ready')\n        self.emit('end')\n        self.emit('close')\n        self.end = self._finish = function () {}\n      } else return self.error(er)\n    }\n    finish(self)\n  })\n}\n\nfunction finish (self) {\n  self.ready = true\n  self.emit('ready')\n  if (self._ended && !self._finished) self._finish()\n}\n\nLinkWriter.prototype.end = function () {\n  // console.error(\"LW finish in end\")\n  this._ended = true\n  if (this.ready) {\n    this._finished = true\n    this._finish()\n  }\n}\n"]}