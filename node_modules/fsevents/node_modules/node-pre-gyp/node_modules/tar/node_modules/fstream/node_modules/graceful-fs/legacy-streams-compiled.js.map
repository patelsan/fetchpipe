{"version":3,"sources":["legacy-streams.js"],"names":[],"mappings":"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","file":"legacy-streams-compiled.js","sourcesContent":["var Stream = require('stream').Stream\n\nmodule.exports = legacy\n\nfunction legacy (fs) {\n  return {\n    ReadStream: ReadStream,\n    WriteStream: WriteStream\n  }\n\n  function ReadStream (path, options) {\n    if (!(this instanceof ReadStream)) return new ReadStream(path, options);\n\n    Stream.call(this);\n\n    var self = this;\n\n    this.path = path;\n    this.fd = null;\n    this.readable = true;\n    this.paused = false;\n\n    this.flags = 'r';\n    this.mode = 438; /*=0666*/\n    this.bufferSize = 64 * 1024;\n\n    options = options || {};\n\n    // Mixin options into this\n    var keys = Object.keys(options);\n    for (var index = 0, length = keys.length; index < length; index++) {\n      var key = keys[index];\n      this[key] = options[key];\n    }\n\n    if (this.encoding) this.setEncoding(this.encoding);\n\n    if (this.start !== undefined) {\n      if ('number' !== typeof this.start) {\n        throw TypeError('start must be a Number');\n      }\n      if (this.end === undefined) {\n        this.end = Infinity;\n      } else if ('number' !== typeof this.end) {\n        throw TypeError('end must be a Number');\n      }\n\n      if (this.start > this.end) {\n        throw new Error('start must be <= end');\n      }\n\n      this.pos = this.start;\n    }\n\n    if (this.fd !== null) {\n      process.nextTick(function() {\n        self._read();\n      });\n      return;\n    }\n\n    fs.open(this.path, this.flags, this.mode, function (err, fd) {\n      if (err) {\n        self.emit('error', err);\n        self.readable = false;\n        return;\n      }\n\n      self.fd = fd;\n      self.emit('open', fd);\n      self._read();\n    })\n  }\n\n  function WriteStream (path, options) {\n    if (!(this instanceof WriteStream)) return new WriteStream(path, options);\n\n    Stream.call(this);\n\n    this.path = path;\n    this.fd = null;\n    this.writable = true;\n\n    this.flags = 'w';\n    this.encoding = 'binary';\n    this.mode = 438; /*=0666*/\n    this.bytesWritten = 0;\n\n    options = options || {};\n\n    // Mixin options into this\n    var keys = Object.keys(options);\n    for (var index = 0, length = keys.length; index < length; index++) {\n      var key = keys[index];\n      this[key] = options[key];\n    }\n\n    if (this.start !== undefined) {\n      if ('number' !== typeof this.start) {\n        throw TypeError('start must be a Number');\n      }\n      if (this.start < 0) {\n        throw new Error('start must be >= zero');\n      }\n\n      this.pos = this.start;\n    }\n\n    this.busy = false;\n    this._queue = [];\n\n    if (this.fd === null) {\n      this._open = fs.open;\n      this._queue.push([this._open, this.path, this.flags, this.mode, undefined]);\n      this.flush();\n    }\n  }\n}\n"]}