{"version":3,"sources":["00-setup-fixtures.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAcA,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC;IACtB,aAAa,GAAG,OAAO,CAAC,eAAe,CAAC;IACxC,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC;IAC1B,IAAI,GAAG,GAAG,CAAC,IAAI;IACf,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAA;;AAExB,IAAI,CAAC,gBAAgB,EAAE,UAAU,CAAC,EAAE;AAClC,QAAM,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,UAAU,CAAC,EAAE,UAAU,EAAE,EAAE;AACxD,KAAC,CAAC,OAAO,CAAC,EAAE,EAAE,oBAAoB,CAAC,CAAA;AACnC,KAAC,CAAC,GAAG,EAAE,CAAA;GACR,CAAC,CAAA;CACH,CAAC,CAAA;;AAEF,IAAI,CAAC,WAAW,EAAE,UAAU,CAAC,EAAE;AAC7B,QAAM,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC,EAAE,UAAU,EAAE,EAAE;AACnD,KAAC,CAAC,OAAO,CAAC,EAAE,EAAE,eAAe,CAAC,CAAA;AAC9B,KAAC,CAAC,GAAG,EAAE,CAAA;GACR,CAAC,CAAA;CACH,CAAC,CAAA;;AAEF,IAAI,CAAC,kBAAkB,EAAE,UAAU,CAAC,EAAE;AACpC,MAAI,CAAC,GAAG,aAAa,CAAC,KAAK,CAAC,KAAK,EACL,CAAC,MAAM,EAAE,cAAc,CAAC,EACxB,EAAE,GAAG,EAAE,SAAS,EAAE,CAAC,CAAA;;AAE/C,GAAC,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;AAC7B,GAAC,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;AAC7B,WAAS,QAAQ,CAAE,KAAK,EAAE;AACxB,WAAO,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;GAC5B;;AAED,GAAC,CAAC,EAAE,CAAC,MAAM,EAAE,UAAU,IAAI,EAAE;AAC3B,KAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,qCAAqC,CAAC,CAAA;AACvD,QAAI,IAAI,EAAE;AACR,OAAC,CAAC,OAAO,CAAC,6DAA6D,CAAC,CAAA;KACzE;AACD,KAAC,CAAC,GAAG,EAAE,CAAA;GACR,CAAC,CAAA;CACH,CAAC,CAAA","file":"00-setup-fixtures-compiled.js","sourcesContent":["// the fixtures have some weird stuff that is painful\n// to include directly in the repo for various reasons.\n//\n// So, unpack the fixtures with the system tar first.\n//\n// This means, of course, that it'll only work if you\n// already have a tar implementation, and some of them\n// will not properly unpack the fixtures anyway.\n//\n// But, since usually those tests will fail on Windows\n// and other systems with less capable filesystems anyway,\n// at least this way we don't cause inconveniences by\n// merely cloning the repo or installing the package.\n\nvar tap = require(\"tap\")\n, child_process = require(\"child_process\")\n, rimraf = require(\"rimraf\")\n, test = tap.test\n, path = require(\"path\")\n\ntest(\"clean fixtures\", function (t) {\n  rimraf(path.resolve(__dirname, \"fixtures\"), function (er) {\n    t.ifError(er, \"rimraf ./fixtures/\")\n    t.end()\n  })\n})\n\ntest(\"clean tmp\", function (t) {\n  rimraf(path.resolve(__dirname, \"tmp\"), function (er) {\n    t.ifError(er, \"rimraf ./tmp/\")\n    t.end()\n  })\n})\n\ntest(\"extract fixtures\", function (t) {\n  var c = child_process.spawn(\"tar\"\n                             ,[\"xzvf\", \"fixtures.tgz\"]\n                             ,{ cwd: __dirname })\n\n  c.stdout.on(\"data\", errwrite)\n  c.stderr.on(\"data\", errwrite)\n  function errwrite (chunk) {\n    process.stderr.write(chunk)\n  }\n\n  c.on(\"exit\", function (code) {\n    t.equal(code, 0, \"extract fixtures should exit with 0\")\n    if (code) {\n      t.comment(\"Note, all tests from here on out will fail because of this.\")\n    }\n    t.end()\n  })\n})\n"]}