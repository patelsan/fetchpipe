{"version":3,"sources":["test.js"],"names":[],"mappings":"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","file":"test-compiled.js","sourcesContent":["\nvar hasBinary = require('./');\nvar assert = require('better-assert');\nvar fs = require('fs');\n\nvar start = new Date();\n\ndescribe('has-binarydata', function(){\n\n  it('should work with buffer', function(){\n    assert(hasBinary(fs.readFileSync('./test.js')));\n  });\n\n  it('should work with an array that does not contain binary', function() {\n    var arr = [1, 'cool', 2];\n    assert(!hasBinary(arr));\n  });\n\n  it('should work with an array that contains a buffer', function() {\n    var arr = [1, new Buffer('asdfasdf', 'utf8'), 2];\n    assert(hasBinary(arr));\n  });\n\n  it('should work with an object that does not contain binary', function() {\n    var ob = {a: 'a', b: [], c: 1234};\n    assert(!hasBinary(ob));\n  });\n\n  it('should work with an object that contains a buffer', function() {\n    var ob = {a: 'a', b: new Buffer('abc'), c: 1234};\n    assert(hasBinary(ob));\n  });\n\n  it('should work with null', function() {\n    assert(!hasBinary(null));\n  });\n\n  it('should work with undefined', function() {\n    assert(!hasBinary(undefined));\n  });\n\n  it('should work with a complex object that contains undefined and no binary', function() {\n    var ob = {\n      x: ['a', 'b', 123],\n      y: undefined,\n      z: {a: 'x', b: 'y', c: 3, d: null},\n      w: []\n    };\n    assert(!hasBinary(ob));\n  });\n\n  it('should work with a complex object that contains undefined and binary', function() {\n    var ob = {\n      x: ['a', 'b', 123],\n      y: undefined,\n      z: {a: 'x', b: 'y', c: 3, d: null},\n      w: [],\n      bin: new Buffer('xxx')\n    };\n    assert(hasBinary(ob));\n  });\n\n  it('should handle a very large json object with no binary', function(done) {\n    this.timeout();\n    fs.readFile(__dirname + '/fixtures/big.json', function(err, data) {\n      if (err) {\n        console.log(err);\n        assert(false);\n      }\n      data = JSON.parse(data);\n      assert(!hasBinary(data));\n      done();\n    });\n  });\n\n  it('should handle a very large json object with binary', function(done) {\n    this.timeout();\n    fs.readFile(__dirname + '/fixtures/big.json', function(err, data) {\n      if (err) {\n        console.log(err);\n        assert(false);\n      }\n      var ob = JSON.parse(data);\n      ob.bin = {bin: {bin: {bin: new Buffer('abc')}}};\n      assert(hasBinary(ob));\n      done();\n    });\n  });\n\n  if (global.ArrayBuffer) {\n      it('should work with an ArrayBuffer', function() {\n        assert(hasBinary(new ArrayBuffer()));\n      });\n  }\n\n  if (global.Blob) {\n     it('should work with a Blob', function() {\n        assert(hasBinary(new Blob()));\n     });\n  }\n\n  it('should print the test time', function() {\n    var end = new Date();\n    var diff = end - start;\n    console.log('\\ntest time: ' + diff + ' ms');\n  });\n\n});\n"]}