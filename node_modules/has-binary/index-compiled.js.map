{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAKA,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;;;;;;AAMjC,MAAM,CAAC,OAAO,GAAG,SAAS,CAAC;;;;;;;;;;;AAW3B,SAAS,SAAS,CAAC,IAAI,EAAE;;AAEvB,WAAS,UAAU,CAAC,GAAG,EAAE;AACvB,QAAI,CAAC,GAAG,EAAE,OAAO,KAAK,CAAC;;AAEvB,QAAK,AAAC,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,IAC5C,MAAM,CAAC,WAAW,IAAI,GAAG,YAAY,WAAW,AAAC,IACjD,MAAM,CAAC,IAAI,IAAI,GAAG,YAAY,IAAI,AAAC,IACnC,MAAM,CAAC,IAAI,IAAI,GAAG,YAAY,IAAI,AAAC,EACnC;AACJ,aAAO,IAAI,CAAC;KACb;;AAED,QAAI,OAAO,CAAC,GAAG,CAAC,EAAE;AAChB,WAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACjC,YAAI,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;AACpB,iBAAO,IAAI,CAAC;SACf;OACJ;KACF,MAAM,IAAI,GAAG,IAAI,QAAQ,IAAI,OAAO,GAAG,EAAE;AACxC,UAAI,GAAG,CAAC,MAAM,EAAE;AACd,WAAG,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC;OACpB;;AAED,WAAK,IAAI,GAAG,IAAI,GAAG,EAAE;AACnB,YAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;AAC1E,iBAAO,IAAI,CAAC;SACb;OACF;KACF;;AAED,WAAO,KAAK,CAAC;GACd;;AAED,SAAO,UAAU,CAAC,IAAI,CAAC,CAAC;CACzB","file":"index-compiled.js","sourcesContent":["\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Right now only Buffer and ArrayBuffer are supported..\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary(data) {\n\n  function _hasBinary(obj) {\n    if (!obj) return false;\n\n    if ( (global.Buffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer) ||\n         (global.Blob && obj instanceof Blob) ||\n         (global.File && obj instanceof File)\n        ) {\n      return true;\n    }\n\n    if (isArray(obj)) {\n      for (var i = 0; i < obj.length; i++) {\n          if (_hasBinary(obj[i])) {\n              return true;\n          }\n      }\n    } else if (obj && 'object' == typeof obj) {\n      if (obj.toJSON) {\n        obj = obj.toJSON();\n      }\n\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  return _hasBinary(data);\n}\n"]}