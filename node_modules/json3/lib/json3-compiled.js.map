{"version":3,"sources":["json3.js"],"names":[],"mappings":"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","file":"json3-compiled.js","sourcesContent":["/*! JSON v3.2.6 | http://bestiejs.github.io/json3 | Copyright 2012-2013, Kit Cambridge | http://kit.mit-license.org */\n;(function (window) {\n  // Convenience aliases.\n  var getClass = {}.toString, isProperty, forEach, undef;\n\n  // Detect the `define` function exposed by asynchronous module loaders. The\n  // strict `define` check is necessary for compatibility with `r.js`.\n  var isLoader = typeof define === \"function\" && define.amd;\n\n  // Detect native implementations.\n  var nativeJSON = typeof JSON == \"object\" && JSON;\n\n  // Set up the JSON 3 namespace, preferring the CommonJS `exports` object if\n  // available.\n  var JSON3 = typeof exports == \"object\" && exports && !exports.nodeType && exports;\n\n  if (JSON3 && nativeJSON) {\n    // Explicitly delegate to the native `stringify` and `parse`\n    // implementations in CommonJS environments.\n    JSON3.stringify = nativeJSON.stringify;\n    JSON3.parse = nativeJSON.parse;\n  } else {\n    // Export for web browsers, JavaScript engines, and asynchronous module\n    // loaders, using the global `JSON` object if available.\n    JSON3 = window.JSON = nativeJSON || {};\n  }\n\n  // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\n  var isExtended = new Date(-3509827334573292);\n  try {\n    // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\n    // results for certain dates in Opera >= 10.53.\n    isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&\n      // Safari < 2.0.2 stores the internal millisecond time value correctly,\n      // but clips the values returned by the date methods to the range of\n      // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\n      isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\n  } catch (exception) {}\n\n  // Internal: Determines whether the native `JSON.stringify` and `parse`\n  // implementations are spec-compliant. Based on work by Ken Snyder.\n  function has(name) {\n    if (has[name] !== undef) {\n      // Return cached feature test result.\n      return has[name];\n    }\n\n    var isSupported;\n    if (name == \"bug-string-char-index\") {\n      // IE <= 7 doesn't support accessing string characters using square\n      // bracket notation. IE 8 only supports this for primitives.\n      isSupported = \"a\"[0] != \"a\";\n    } else if (name == \"json\") {\n      // Indicates whether both `JSON.stringify` and `JSON.parse` are\n      // supported.\n      isSupported = has(\"json-stringify\") && has(\"json-parse\");\n    } else {\n      var value, serialized = '{\"a\":[1,true,false,null,\"\\\\u0000\\\\b\\\\n\\\\f\\\\r\\\\t\"]}';\n      // Test `JSON.stringify`.\n      if (name == \"json-stringify\") {\n        var stringify = JSON3.stringify, stringifySupported = typeof stringify == \"function\" && isExtended;\n        if (stringifySupported) {\n          // A test function object with a custom `toJSON` method.\n          (value = function () {\n            return 1;\n          }).toJSON = value;\n          try {\n            stringifySupported =\n              // Firefox 3.1b1 and b2 serialize string, number, and boolean\n              // primitives as object literals.\n              stringify(0) === \"0\" &&\n              // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\n              // literals.\n              stringify(new Number()) === \"0\" &&\n              stringify(new String()) == '\"\"' &&\n              // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\n              // does not define a canonical JSON representation (this applies to\n              // objects with `toJSON` properties as well, *unless* they are nested\n              // within an object or array).\n              stringify(getClass) === undef &&\n              // IE 8 serializes `undefined` as `\"undefined\"`. Safari <= 5.1.7 and\n              // FF 3.1b3 pass this test.\n              stringify(undef) === undef &&\n              // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\n              // respectively, if the value is omitted entirely.\n              stringify() === undef &&\n              // FF 3.1b1, 2 throw an error if the given value is not a number,\n              // string, array, object, Boolean, or `null` literal. This applies to\n              // objects with custom `toJSON` methods as well, unless they are nested\n              // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\n              // methods entirely.\n              stringify(value) === \"1\" &&\n              stringify([value]) == \"[1]\" &&\n              // Prototype <= 1.6.1 serializes `[undefined]` as `\"[]\"` instead of\n              // `\"[null]\"`.\n              stringify([undef]) == \"[null]\" &&\n              // YUI 3.0.0b1 fails to serialize `null` literals.\n              stringify(null) == \"null\" &&\n              // FF 3.1b1, 2 halts serialization if an array contains a function:\n              // `[1, true, getClass, 1]` serializes as \"[1,true,],\". FF 3.1b3\n              // elides non-JSON values from objects and arrays, unless they\n              // define custom `toJSON` methods.\n              stringify([undef, getClass, null]) == \"[null,null,null]\" &&\n              // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\n              // where character escape codes are expected (e.g., `\\b` => `\\u0008`).\n              stringify({ \"a\": [value, true, false, null, \"\\x00\\b\\n\\f\\r\\t\"] }) == serialized &&\n              // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\n              stringify(null, value) === \"1\" &&\n              stringify([1, 2], null, 1) == \"[\\n 1,\\n 2\\n]\" &&\n              // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly\n              // serialize extended years.\n              stringify(new Date(-8.64e15)) == '\"-271821-04-20T00:00:00.000Z\"' &&\n              // The milliseconds are optional in ES 5, but required in 5.1.\n              stringify(new Date(8.64e15)) == '\"+275760-09-13T00:00:00.000Z\"' &&\n              // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative\n              // four-digit years instead of six-digit years. Credits: @Yaffle.\n              stringify(new Date(-621987552e5)) == '\"-000001-01-01T00:00:00.000Z\"' &&\n              // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond\n              // values less than 1000. Credits: @Yaffle.\n              stringify(new Date(-1)) == '\"1969-12-31T23:59:59.999Z\"';\n          } catch (exception) {\n            stringifySupported = false;\n          }\n        }\n        isSupported = stringifySupported;\n      }\n      // Test `JSON.parse`.\n      if (name == \"json-parse\") {\n        var parse = JSON3.parse;\n        if (typeof parse == \"function\") {\n          try {\n            // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\n            // Conforming implementations should also coerce the initial argument to\n            // a string prior to parsing.\n            if (parse(\"0\") === 0 && !parse(false)) {\n              // Simple parsing test.\n              value = parse(serialized);\n              var parseSupported = value[\"a\"].length == 5 && value[\"a\"][0] === 1;\n              if (parseSupported) {\n                try {\n                  // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\n                  parseSupported = !parse('\"\\t\"');\n                } catch (exception) {}\n                if (parseSupported) {\n                  try {\n                    // FF 4.0 and 4.0.1 allow leading `+` signs and leading\n                    // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\n                    // certain octal literals.\n                    parseSupported = parse(\"01\") !== 1;\n                  } catch (exception) {}\n                }\n                if (parseSupported) {\n                  try {\n                    // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\n                    // points. These environments, along with FF 3.1b1 and 2,\n                    // also allow trailing commas in JSON objects and arrays.\n                    parseSupported = parse(\"1.\") !== 1;\n                  } catch (exception) {}\n                }\n              }\n            }\n          } catch (exception) {\n            parseSupported = false;\n          }\n        }\n        isSupported = parseSupported;\n      }\n    }\n    return has[name] = !!isSupported;\n  }\n\n  if (!has(\"json\")) {\n    // Common `[[Class]]` name aliases.\n    var functionClass = \"[object Function]\";\n    var dateClass = \"[object Date]\";\n    var numberClass = \"[object Number]\";\n    var stringClass = \"[object String]\";\n    var arrayClass = \"[object Array]\";\n    var booleanClass = \"[object Boolean]\";\n\n    // Detect incomplete support for accessing string characters by index.\n    var charIndexBuggy = has(\"bug-string-char-index\");\n\n    // Define additional utility methods if the `Date` methods are buggy.\n    if (!isExtended) {\n      var floor = Math.floor;\n      // A mapping between the months of the year and the number of days between\n      // January 1st and the first of the respective month.\n      var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n      // Internal: Calculates the number of days between the Unix epoch and the\n      // first day of the given month.\n      var getDay = function (year, month) {\n        return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\n      };\n    }\n\n    // Internal: Determines if a property is a direct property of the given\n    // object. Delegates to the native `Object#hasOwnProperty` method.\n    if (!(isProperty = {}.hasOwnProperty)) {\n      isProperty = function (property) {\n        var members = {}, constructor;\n        if ((members.__proto__ = null, members.__proto__ = {\n          // The *proto* property cannot be set multiple times in recent\n          // versions of Firefox and SeaMonkey.\n          \"toString\": 1\n        }, members).toString != getClass) {\n          // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but\n          // supports the mutable *proto* property.\n          isProperty = function (property) {\n            // Capture and break the object's prototype chain (see section 8.6.2\n            // of the ES 5.1 spec). The parenthesized expression prevents an\n            // unsafe transformation by the Closure Compiler.\n            var original = this.__proto__, result = property in (this.__proto__ = null, this);\n            // Restore the original prototype chain.\n            this.__proto__ = original;\n            return result;\n          };\n        } else {\n          // Capture a reference to the top-level `Object` constructor.\n          constructor = members.constructor;\n          // Use the `constructor` property to simulate `Object#hasOwnProperty` in\n          // other environments.\n          isProperty = function (property) {\n            var parent = (this.constructor || constructor).prototype;\n            return property in this && !(property in parent && this[property] === parent[property]);\n          };\n        }\n        members = null;\n        return isProperty.call(this, property);\n      };\n    }\n\n    // Internal: A set of primitive types used by `isHostType`.\n    var PrimitiveTypes = {\n      'boolean': 1,\n      'number': 1,\n      'string': 1,\n      'undefined': 1\n    };\n\n    // Internal: Determines if the given object `property` value is a\n    // non-primitive.\n    var isHostType = function (object, property) {\n      var type = typeof object[property];\n      return type == 'object' ? !!object[property] : !PrimitiveTypes[type];\n    };\n\n    // Internal: Normalizes the `for...in` iteration algorithm across\n    // environments. Each enumerated key is yielded to a `callback` function.\n    forEach = function (object, callback) {\n      var size = 0, Properties, members, property;\n\n      // Tests for bugs in the current environment's `for...in` algorithm. The\n      // `valueOf` property inherits the non-enumerable flag from\n      // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\n      (Properties = function () {\n        this.valueOf = 0;\n      }).prototype.valueOf = 0;\n\n      // Iterate over a new instance of the `Properties` class.\n      members = new Properties();\n      for (property in members) {\n        // Ignore all properties inherited from `Object.prototype`.\n        if (isProperty.call(members, property)) {\n          size++;\n        }\n      }\n      Properties = members = null;\n\n      // Normalize the iteration algorithm.\n      if (!size) {\n        // A list of non-enumerable properties inherited from `Object.prototype`.\n        members = [\"valueOf\", \"toString\", \"toLocaleString\", \"propertyIsEnumerable\", \"isPrototypeOf\", \"hasOwnProperty\", \"constructor\"];\n        // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\n        // properties.\n        forEach = function (object, callback) {\n          var isFunction = getClass.call(object) == functionClass, property, length;\n          var hasProperty = !isFunction && typeof object.constructor != 'function' && isHostType(object, 'hasOwnProperty') ? object.hasOwnProperty : isProperty;\n          for (property in object) {\n            // Gecko <= 1.0 enumerates the `prototype` property of functions under\n            // certain conditions; IE does not.\n            if (!(isFunction && property == \"prototype\") && hasProperty.call(object, property)) {\n              callback(property);\n            }\n          }\n          // Manually invoke the callback for each non-enumerable property.\n          for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));\n        };\n      } else if (size == 2) {\n        // Safari <= 2.0.4 enumerates shadowed properties twice.\n        forEach = function (object, callback) {\n          // Create a set of iterated properties.\n          var members = {}, isFunction = getClass.call(object) == functionClass, property;\n          for (property in object) {\n            // Store each property name to prevent double enumeration. The\n            // `prototype` property of functions is not enumerated due to cross-\n            // environment inconsistencies.\n            if (!(isFunction && property == \"prototype\") && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {\n              callback(property);\n            }\n          }\n        };\n      } else {\n        // No bugs detected; use the standard `for...in` algorithm.\n        forEach = function (object, callback) {\n          var isFunction = getClass.call(object) == functionClass, property, isConstructor;\n          for (property in object) {\n            if (!(isFunction && property == \"prototype\") && isProperty.call(object, property) && !(isConstructor = property === \"constructor\")) {\n              callback(property);\n            }\n          }\n          // Manually invoke the callback for the `constructor` property due to\n          // cross-environment inconsistencies.\n          if (isConstructor || isProperty.call(object, (property = \"constructor\"))) {\n            callback(property);\n          }\n        };\n      }\n      return forEach(object, callback);\n    };\n\n    // Public: Serializes a JavaScript `value` as a JSON string. The optional\n    // `filter` argument may specify either a function that alters how object and\n    // array members are serialized, or an array of strings and numbers that\n    // indicates which properties should be serialized. The optional `width`\n    // argument may be either a string or number that specifies the indentation\n    // level of the output.\n    if (!has(\"json-stringify\")) {\n      // Internal: A map of control characters and their escaped equivalents.\n      var Escapes = {\n        92: \"\\\\\\\\\",\n        34: '\\\\\"',\n        8: \"\\\\b\",\n        12: \"\\\\f\",\n        10: \"\\\\n\",\n        13: \"\\\\r\",\n        9: \"\\\\t\"\n      };\n\n      // Internal: Converts `value` into a zero-padded string such that its\n      // length is at least equal to `width`. The `width` must be <= 6.\n      var leadingZeroes = \"000000\";\n      var toPaddedString = function (width, value) {\n        // The `|| 0` expression is necessary to work around a bug in\n        // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== \"0\"`.\n        return (leadingZeroes + (value || 0)).slice(-width);\n      };\n\n      // Internal: Double-quotes a string `value`, replacing all ASCII control\n      // characters (characters with code unit values between 0 and 31) with\n      // their escaped equivalents. This is an implementation of the\n      // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\n      var unicodePrefix = \"\\\\u00\";\n      var quote = function (value) {\n        var result = '\"', index = 0, length = value.length, isLarge = length > 10 && charIndexBuggy, symbols;\n        if (isLarge) {\n          symbols = value.split(\"\");\n        }\n        for (; index < length; index++) {\n          var charCode = value.charCodeAt(index);\n          // If the character is a control character, append its Unicode or\n          // shorthand escape sequence; otherwise, append the character as-is.\n          switch (charCode) {\n            case 8: case 9: case 10: case 12: case 13: case 34: case 92:\n              result += Escapes[charCode];\n              break;\n            default:\n              if (charCode < 32) {\n                result += unicodePrefix + toPaddedString(2, charCode.toString(16));\n                break;\n              }\n              result += isLarge ? symbols[index] : charIndexBuggy ? value.charAt(index) : value[index];\n          }\n        }\n        return result + '\"';\n      };\n\n      // Internal: Recursively serializes an object. Implements the\n      // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\n      var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {\n        var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\n        try {\n          // Necessary for host object support.\n          value = object[property];\n        } catch (exception) {}\n        if (typeof value == \"object\" && value) {\n          className = getClass.call(value);\n          if (className == dateClass && !isProperty.call(value, \"toJSON\")) {\n            if (value > -1 / 0 && value < 1 / 0) {\n              // Dates are serialized according to the `Date#toJSON` method\n              // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\n              // for the ISO 8601 date time string format.\n              if (getDay) {\n                // Manually compute the year, month, date, hours, minutes,\n                // seconds, and milliseconds if the `getUTC*` methods are\n                // buggy. Adapted from @Yaffle's `date-shim` project.\n                date = floor(value / 864e5);\n                for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);\n                for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);\n                date = 1 + date - getDay(year, month);\n                // The `time` value specifies the time within the day (see ES\n                // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\n                // to compute `A modulo B`, as the `%` operator does not\n                // correspond to the `modulo` operation for negative numbers.\n                time = (value % 864e5 + 864e5) % 864e5;\n                // The hours, minutes, seconds, and milliseconds are obtained by\n                // decomposing the time within the day. See section 15.9.1.10.\n                hours = floor(time / 36e5) % 24;\n                minutes = floor(time / 6e4) % 60;\n                seconds = floor(time / 1e3) % 60;\n                milliseconds = time % 1e3;\n              } else {\n                year = value.getUTCFullYear();\n                month = value.getUTCMonth();\n                date = value.getUTCDate();\n                hours = value.getUTCHours();\n                minutes = value.getUTCMinutes();\n                seconds = value.getUTCSeconds();\n                milliseconds = value.getUTCMilliseconds();\n              }\n              // Serialize extended years correctly.\n              value = (year <= 0 || year >= 1e4 ? (year < 0 ? \"-\" : \"+\") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) +\n                \"-\" + toPaddedString(2, month + 1) + \"-\" + toPaddedString(2, date) +\n                // Months, dates, hours, minutes, and seconds should have two\n                // digits; milliseconds should have three.\n                \"T\" + toPaddedString(2, hours) + \":\" + toPaddedString(2, minutes) + \":\" + toPaddedString(2, seconds) +\n                // Milliseconds are optional in ES 5.0, but required in 5.1.\n                \".\" + toPaddedString(3, milliseconds) + \"Z\";\n            } else {\n              value = null;\n            }\n          } else if (typeof value.toJSON == \"function\" && ((className != numberClass && className != stringClass && className != arrayClass) || isProperty.call(value, \"toJSON\"))) {\n            // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the\n            // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\n            // ignores all `toJSON` methods on these objects unless they are\n            // defined directly on an instance.\n            value = value.toJSON(property);\n          }\n        }\n        if (callback) {\n          // If a replacement function was provided, call it to obtain the value\n          // for serialization.\n          value = callback.call(object, property, value);\n        }\n        if (value === null) {\n          return \"null\";\n        }\n        className = getClass.call(value);\n        if (className == booleanClass) {\n          // Booleans are represented literally.\n          return \"\" + value;\n        } else if (className == numberClass) {\n          // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\n          // `\"null\"`.\n          return value > -1 / 0 && value < 1 / 0 ? \"\" + value : \"null\";\n        } else if (className == stringClass) {\n          // Strings are double-quoted and escaped.\n          return quote(\"\" + value);\n        }\n        // Recursively serialize objects and arrays.\n        if (typeof value == \"object\") {\n          // Check for cyclic structures. This is a linear search; performance\n          // is inversely proportional to the number of unique nested objects.\n          for (length = stack.length; length--;) {\n            if (stack[length] === value) {\n              // Cyclic structures cannot be serialized by `JSON.stringify`.\n              throw TypeError();\n            }\n          }\n          // Add the object to the stack of traversed objects.\n          stack.push(value);\n          results = [];\n          // Save the current indentation level and indent one additional level.\n          prefix = indentation;\n          indentation += whitespace;\n          if (className == arrayClass) {\n            // Recursively serialize array elements.\n            for (index = 0, length = value.length; index < length; index++) {\n              element = serialize(index, value, callback, properties, whitespace, indentation, stack);\n              results.push(element === undef ? \"null\" : element);\n            }\n            result = results.length ? (whitespace ? \"[\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"]\" : (\"[\" + results.join(\",\") + \"]\")) : \"[]\";\n          } else {\n            // Recursively serialize object members. Members are selected from\n            // either a user-specified list of property names, or the object\n            // itself.\n            forEach(properties || value, function (property) {\n              var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\n              if (element !== undef) {\n                // According to ES 5.1 section 15.12.3: \"If `gap` {whitespace}\n                // is not the empty string, let `member` {quote(property) + \":\"}\n                // be the concatenation of `member` and the `space` character.\"\n                // The \"`space` character\" refers to the literal space\n                // character, not the `space` {width} argument provided to\n                // `JSON.stringify`.\n                results.push(quote(property) + \":\" + (whitespace ? \" \" : \"\") + element);\n              }\n            });\n            result = results.length ? (whitespace ? \"{\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"}\" : (\"{\" + results.join(\",\") + \"}\")) : \"{}\";\n          }\n          // Remove the object from the traversed object stack.\n          stack.pop();\n          return result;\n        }\n      };\n\n      // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\n      JSON3.stringify = function (source, filter, width) {\n        var whitespace, callback, properties, className;\n        if (typeof filter == \"function\" || typeof filter == \"object\" && filter) {\n          if ((className = getClass.call(filter)) == functionClass) {\n            callback = filter;\n          } else if (className == arrayClass) {\n            // Convert the property names array into a makeshift set.\n            properties = {};\n            for (var index = 0, length = filter.length, value; index < length; value = filter[index++], ((className = getClass.call(value)), className == stringClass || className == numberClass) && (properties[value] = 1));\n          }\n        }\n        if (width) {\n          if ((className = getClass.call(width)) == numberClass) {\n            // Convert the `width` to an integer and create a string containing\n            // `width` number of space characters.\n            if ((width -= width % 1) > 0) {\n              for (whitespace = \"\", width > 10 && (width = 10); whitespace.length < width; whitespace += \" \");\n            }\n          } else if (className == stringClass) {\n            whitespace = width.length <= 10 ? width : width.slice(0, 10);\n          }\n        }\n        // Opera <= 7.54u2 discards the values associated with empty string keys\n        // (`\"\"`) only if they are used directly within an object member list\n        // (e.g., `!(\"\" in { \"\": 1})`).\n        return serialize(\"\", (value = {}, value[\"\"] = source, value), callback, properties, whitespace, \"\", []);\n      };\n    }\n\n    // Public: Parses a JSON source string.\n    if (!has(\"json-parse\")) {\n      var fromCharCode = String.fromCharCode;\n\n      // Internal: A map of escaped control characters and their unescaped\n      // equivalents.\n      var Unescapes = {\n        92: \"\\\\\",\n        34: '\"',\n        47: \"/\",\n        98: \"\\b\",\n        116: \"\\t\",\n        110: \"\\n\",\n        102: \"\\f\",\n        114: \"\\r\"\n      };\n\n      // Internal: Stores the parser state.\n      var Index, Source;\n\n      // Internal: Resets the parser state and throws a `SyntaxError`.\n      var abort = function() {\n        Index = Source = null;\n        throw SyntaxError();\n      };\n\n      // Internal: Returns the next token, or `\"$\"` if the parser has reached\n      // the end of the source string. A token may be a string, number, `null`\n      // literal, or Boolean literal.\n      var lex = function () {\n        var source = Source, length = source.length, value, begin, position, isSigned, charCode;\n        while (Index < length) {\n          charCode = source.charCodeAt(Index);\n          switch (charCode) {\n            case 9: case 10: case 13: case 32:\n              // Skip whitespace tokens, including tabs, carriage returns, line\n              // feeds, and space characters.\n              Index++;\n              break;\n            case 123: case 125: case 91: case 93: case 58: case 44:\n              // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\n              // the current position.\n              value = charIndexBuggy ? source.charAt(Index) : source[Index];\n              Index++;\n              return value;\n            case 34:\n              // `\"` delimits a JSON string; advance to the next character and\n              // begin parsing the string. String tokens are prefixed with the\n              // sentinel `@` character to distinguish them from punctuators and\n              // end-of-string tokens.\n              for (value = \"@\", Index++; Index < length;) {\n                charCode = source.charCodeAt(Index);\n                if (charCode < 32) {\n                  // Unescaped ASCII control characters (those with a code unit\n                  // less than the space character) are not permitted.\n                  abort();\n                } else if (charCode == 92) {\n                  // A reverse solidus (`\\`) marks the beginning of an escaped\n                  // control character (including `\"`, `\\`, and `/`) or Unicode\n                  // escape sequence.\n                  charCode = source.charCodeAt(++Index);\n                  switch (charCode) {\n                    case 92: case 34: case 47: case 98: case 116: case 110: case 102: case 114:\n                      // Revive escaped control characters.\n                      value += Unescapes[charCode];\n                      Index++;\n                      break;\n                    case 117:\n                      // `\\u` marks the beginning of a Unicode escape sequence.\n                      // Advance to the first character and validate the\n                      // four-digit code point.\n                      begin = ++Index;\n                      for (position = Index + 4; Index < position; Index++) {\n                        charCode = source.charCodeAt(Index);\n                        // A valid sequence comprises four hexdigits (case-\n                        // insensitive) that form a single hexadecimal value.\n                        if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {\n                          // Invalid Unicode escape sequence.\n                          abort();\n                        }\n                      }\n                      // Revive the escaped character.\n                      value += fromCharCode(\"0x\" + source.slice(begin, Index));\n                      break;\n                    default:\n                      // Invalid escape sequence.\n                      abort();\n                  }\n                } else {\n                  if (charCode == 34) {\n                    // An unescaped double-quote character marks the end of the\n                    // string.\n                    break;\n                  }\n                  charCode = source.charCodeAt(Index);\n                  begin = Index;\n                  // Optimize for the common case where a string is valid.\n                  while (charCode >= 32 && charCode != 92 && charCode != 34) {\n                    charCode = source.charCodeAt(++Index);\n                  }\n                  // Append the string as-is.\n                  value += source.slice(begin, Index);\n                }\n              }\n              if (source.charCodeAt(Index) == 34) {\n                // Advance to the next character and return the revived string.\n                Index++;\n                return value;\n              }\n              // Unterminated string.\n              abort();\n            default:\n              // Parse numbers and literals.\n              begin = Index;\n              // Advance past the negative sign, if one is specified.\n              if (charCode == 45) {\n                isSigned = true;\n                charCode = source.charCodeAt(++Index);\n              }\n              // Parse an integer or floating-point value.\n              if (charCode >= 48 && charCode <= 57) {\n                // Leading zeroes are interpreted as octal literals.\n                if (charCode == 48 && ((charCode = source.charCodeAt(Index + 1)), charCode >= 48 && charCode <= 57)) {\n                  // Illegal octal literal.\n                  abort();\n                }\n                isSigned = false;\n                // Parse the integer component.\n                for (; Index < length && ((charCode = source.charCodeAt(Index)), charCode >= 48 && charCode <= 57); Index++);\n                // Floats cannot contain a leading decimal point; however, this\n                // case is already accounted for by the parser.\n                if (source.charCodeAt(Index) == 46) {\n                  position = ++Index;\n                  // Parse the decimal component.\n                  for (; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                  if (position == Index) {\n                    // Illegal trailing decimal.\n                    abort();\n                  }\n                  Index = position;\n                }\n                // Parse exponents. The `e` denoting the exponent is\n                // case-insensitive.\n                charCode = source.charCodeAt(Index);\n                if (charCode == 101 || charCode == 69) {\n                  charCode = source.charCodeAt(++Index);\n                  // Skip past the sign following the exponent, if one is\n                  // specified.\n                  if (charCode == 43 || charCode == 45) {\n                    Index++;\n                  }\n                  // Parse the exponential component.\n                  for (position = Index; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                  if (position == Index) {\n                    // Illegal empty exponent.\n                    abort();\n                  }\n                  Index = position;\n                }\n                // Coerce the parsed value to a JavaScript number.\n                return +source.slice(begin, Index);\n              }\n              // A negative sign may only precede numbers.\n              if (isSigned) {\n                abort();\n              }\n              // `true`, `false`, and `null` literals.\n              if (source.slice(Index, Index + 4) == \"true\") {\n                Index += 4;\n                return true;\n              } else if (source.slice(Index, Index + 5) == \"false\") {\n                Index += 5;\n                return false;\n              } else if (source.slice(Index, Index + 4) == \"null\") {\n                Index += 4;\n                return null;\n              }\n              // Unrecognized token.\n              abort();\n          }\n        }\n        // Return the sentinel `$` character if the parser has reached the end\n        // of the source string.\n        return \"$\";\n      };\n\n      // Internal: Parses a JSON `value` token.\n      var get = function (value) {\n        var results, hasMembers;\n        if (value == \"$\") {\n          // Unexpected end of input.\n          abort();\n        }\n        if (typeof value == \"string\") {\n          if ((charIndexBuggy ? value.charAt(0) : value[0]) == \"@\") {\n            // Remove the sentinel `@` character.\n            return value.slice(1);\n          }\n          // Parse object and array literals.\n          if (value == \"[\") {\n            // Parses a JSON array, returning a new JavaScript array.\n            results = [];\n            for (;; hasMembers || (hasMembers = true)) {\n              value = lex();\n              // A closing square bracket marks the end of the array literal.\n              if (value == \"]\") {\n                break;\n              }\n              // If the array literal contains elements, the current token\n              // should be a comma separating the previous element from the\n              // next.\n              if (hasMembers) {\n                if (value == \",\") {\n                  value = lex();\n                  if (value == \"]\") {\n                    // Unexpected trailing `,` in array literal.\n                    abort();\n                  }\n                } else {\n                  // A `,` must separate each array element.\n                  abort();\n                }\n              }\n              // Elisions and leading commas are not permitted.\n              if (value == \",\") {\n                abort();\n              }\n              results.push(get(value));\n            }\n            return results;\n          } else if (value == \"{\") {\n            // Parses a JSON object, returning a new JavaScript object.\n            results = {};\n            for (;; hasMembers || (hasMembers = true)) {\n              value = lex();\n              // A closing curly brace marks the end of the object literal.\n              if (value == \"}\") {\n                break;\n              }\n              // If the object literal contains members, the current token\n              // should be a comma separator.\n              if (hasMembers) {\n                if (value == \",\") {\n                  value = lex();\n                  if (value == \"}\") {\n                    // Unexpected trailing `,` in object literal.\n                    abort();\n                  }\n                } else {\n                  // A `,` must separate each object member.\n                  abort();\n                }\n              }\n              // Leading commas are not permitted, object property names must be\n              // double-quoted strings, and a `:` must separate each property\n              // name and value.\n              if (value == \",\" || typeof value != \"string\" || (charIndexBuggy ? value.charAt(0) : value[0]) != \"@\" || lex() != \":\") {\n                abort();\n              }\n              results[value.slice(1)] = get(lex());\n            }\n            return results;\n          }\n          // Unexpected token encountered.\n          abort();\n        }\n        return value;\n      };\n\n      // Internal: Updates a traversed object member.\n      var update = function(source, property, callback) {\n        var element = walk(source, property, callback);\n        if (element === undef) {\n          delete source[property];\n        } else {\n          source[property] = element;\n        }\n      };\n\n      // Internal: Recursively traverses a parsed JSON object, invoking the\n      // `callback` function for each value. This is an implementation of the\n      // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\n      var walk = function (source, property, callback) {\n        var value = source[property], length;\n        if (typeof value == \"object\" && value) {\n          // `forEach` can't be used to traverse an array in Opera <= 8.54\n          // because its `Object#hasOwnProperty` implementation returns `false`\n          // for array indices (e.g., `![1, 2, 3].hasOwnProperty(\"0\")`).\n          if (getClass.call(value) == arrayClass) {\n            for (length = value.length; length--;) {\n              update(value, length, callback);\n            }\n          } else {\n            forEach(value, function (property) {\n              update(value, property, callback);\n            });\n          }\n        }\n        return callback.call(source, property, value);\n      };\n\n      // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\n      JSON3.parse = function (source, callback) {\n        var result, value;\n        Index = 0;\n        Source = \"\" + source;\n        result = get(lex());\n        // If a JSON string contains multiple tokens, it is invalid.\n        if (lex() != \"$\") {\n          abort();\n        }\n        // Reset the parser state.\n        Index = Source = null;\n        return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[\"\"] = result, value), \"\", callback) : result;\n      };\n    }\n  }\n\n  // Export for asynchronous module loaders.\n  if (isLoader) {\n    define(function () {\n      return JSON3;\n    });\n  }\n}(this));\n"]}