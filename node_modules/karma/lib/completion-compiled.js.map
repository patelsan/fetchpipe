{"version":3,"sources":["completion.js"],"names":[],"mappings":"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","file":"completion-compiled.js","sourcesContent":["var CUSTOM = ['']\nvar BOOLEAN = false\n\nvar options = {\n  start: {\n    '--port': CUSTOM,\n    '--auto-watch': BOOLEAN,\n    '--no-auto-watch': BOOLEAN,\n    '--log-level': ['disable', 'debug', 'info', 'warn', 'error'],\n    '--colors': BOOLEAN,\n    '--no-colors': BOOLEAN,\n    '--reporters': ['dots', 'progress'],\n    '--no-reporters': BOOLEAN,\n    '--browsers': ['Chrome', 'ChromeCanary', 'Firefox', 'PhantomJS', 'Safari', 'Opera'],\n    '--no-browsers': BOOLEAN,\n    '--single-run': BOOLEAN,\n    '--no-single-run': BOOLEAN,\n    '--help': BOOLEAN\n  },\n  init: {\n    '--log-level': ['disable', 'debug', 'info', 'warn', 'error'],\n    '--colors': BOOLEAN,\n    '--no-colors': BOOLEAN,\n    '--help': BOOLEAN\n  },\n  run: {\n    '--no-refresh': BOOLEAN,\n    '--port': CUSTOM,\n    '--help': BOOLEAN\n  }\n}\n\nvar parseEnv = function (argv, env) {\n  var words = argv.slice(5)\n\n  return {\n    words: words,\n    count: parseInt(env.COMP_CWORD, 10),\n    last: words[words.length - 1],\n    prev: words[words.length - 2]\n  }\n}\n\nvar opositeWord = function (word) {\n  if (word.charAt(0) !== '-') {\n    return null\n  }\n\n  return word.substr(0, 5) === '--no-' ? '--' + word.substr(5) : '--no-' + word.substr(2)\n}\n\nvar sendCompletionNoOptions = function () {}\n\nvar sendCompletion = function (possibleWords, env) {\n  var regexp = new RegExp('^' + env.last)\n  var filteredWords = possibleWords.filter(function (word) {\n    return regexp.test(word) && env.words.indexOf(word) === -1 &&\n      env.words.indexOf(opositeWord(word)) === -1\n  })\n\n  if (!filteredWords.length) {\n    return sendCompletionNoOptions(env)\n  }\n\n  filteredWords.forEach(function (word) {\n    console.log(word)\n  })\n}\n\nvar glob = require('glob')\nvar globOpts = {\n  mark: true,\n  nocase: true\n}\n\nvar sendCompletionFiles = function (env) {\n  glob(env.last + '*', globOpts, function (err, files) {\n    if (err) return console.error(err)\n\n    if (files.length === 1 && files[0].charAt(files[0].length - 1) === '/') {\n      sendCompletionFiles({last: files[0]})\n    } else {\n      console.log(files.join('\\n'))\n    }\n  })\n}\n\nvar sendCompletionConfirmLast = function (env) {\n  console.log(env.last)\n}\n\nvar complete = function (env) {\n  if (env.count === 1) {\n    if (env.words[0].charAt(0) === '-') {\n      return sendCompletion(['--help', '--version'], env)\n    }\n\n    return sendCompletion(Object.keys(options), env)\n  }\n\n  if (env.count === 2 && env.words[1].charAt(0) !== '-') {\n    // complete files (probably karma.conf.js)\n    return sendCompletionFiles(env)\n  }\n\n  var cmdOptions = options[env.words[0]]\n  var previousOption = cmdOptions[env.prev]\n\n  if (!cmdOptions) {\n    // no completion, wrong command\n    return sendCompletionNoOptions()\n  }\n\n  if (previousOption === CUSTOM && env.last) {\n    // custom value with already filled something\n    return sendCompletionConfirmLast(env)\n  }\n\n  if (previousOption) {\n    // custom options\n    return sendCompletion(previousOption, env)\n  }\n\n  return sendCompletion(Object.keys(cmdOptions), env)\n}\n\nvar completion = function () {\n  if (process.argv[3] === '--') {\n    return complete(parseEnv(process.argv, process.env))\n  }\n\n  // just print out the karma-completion.sh\n  var fs = require('fs')\n  var path = require('path')\n\n  fs.readFile(path.resolve(__dirname, '../karma-completion.sh'), 'utf8', function (err, data) {\n    if (err) return console.error(err)\n\n    process.stdout.write(data)\n    process.stdout.on('error', function (error) {\n      // Darwin is a real dick sometimes.\n      //\n      // This is necessary because the \"source\" or \".\" program in\n      // bash on OS X closes its file argument before reading\n      // from it, meaning that you get exactly 1 write, which will\n      // work most of the time, and will always raise an EPIPE.\n      //\n      // Really, one should not be tossing away EPIPE errors, or any\n      // errors, so casually.  But, without this, `. <(karma completion)`\n      // can never ever work on OS X.\n      if (error.errno === 'EPIPE') {\n        error = null\n      }\n    })\n  })\n}\n\n// PUBLIC API\nexports.completion = completion\n\n// for testing\nexports.opositeWord = opositeWord\nexports.sendCompletion = sendCompletion\nexports.complete = complete\n"]}