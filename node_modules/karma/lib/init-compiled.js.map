{"version":3,"sources":["init.js"],"names":[],"mappings":"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","file":"init-compiled.js","sourcesContent":["var readline = require('readline')\nvar path = require('path')\nvar glob = require('glob')\nvar mm = require('minimatch')\nvar exec = require('child_process').exec\n\nvar helper = require('./helper')\nvar logger = require('./logger')\nvar constant = require('./constants')\n\nvar log = logger.create('init')\n\nvar StateMachine = require('./init/state_machine')\nvar COLOR_SCHEME = require('./init/color_schemes')\nvar formatters = require('./init/formatters')\n\n// TODO(vojta): coverage\n// TODO(vojta): html preprocessors\n// TODO(vojta): SauceLabs\n// TODO(vojta): BrowserStack\n\nvar logQueue = []\nvar printLogQueue = function () {\n  while (logQueue.length) {\n    logQueue.shift()()\n  }\n}\n\nvar NODE_MODULES_DIR = path.resolve(__dirname, '../..')\n\n// Karma is not in node_modules, probably a symlink,\n// use current working dir.\nif (!/node_modules$/.test(NODE_MODULES_DIR)) {\n  NODE_MODULES_DIR = path.resolve('node_modules')\n}\n\nvar installPackage = function (pkgName) {\n  // Do not install if already installed.\n  try {\n    require(NODE_MODULES_DIR + '/' + pkgName)\n    return\n  } catch (e) {}\n\n  log.debug('Missing plugin \"%s\". Installing...', pkgName)\n\n  var options = {\n    cwd: path.resolve(NODE_MODULES_DIR, '..')\n  }\n\n  exec('npm install ' + pkgName + ' --save-dev', options, function (err, stdout, stderr) {\n    // Put the logs into the queue and print them after answering current question.\n    // Otherwise the log would clobber the interactive terminal.\n    logQueue.push(function () {\n      if (!err) {\n        log.debug('%s successfully installed.', pkgName)\n      } else if (/is not in the npm registry/.test(stderr)) {\n        log.warn('Failed to install \"%s\". It is not in the NPM registry!\\n' +\n          '  Please install it manually.', pkgName)\n      } else if (/Error: EACCES/.test(stderr)) {\n        log.warn('Failed to install \"%s\". No permissions to write in %s!\\n' +\n          '  Please install it manually.', pkgName, options.cwd)\n      } else {\n        log.warn('Failed to install \"%s\"\\n  Please install it manually.', pkgName)\n      }\n    })\n  })\n}\n\nvar validatePattern = function (pattern) {\n  if (!glob.sync(pattern).length) {\n    log.warn('There is no file matching this pattern.\\n')\n  }\n}\n\nvar validateBrowser = function (name) {\n  // TODO(vojta): check if the path resolves to a binary\n  installPackage('karma-' + name.toLowerCase().replace('canary', '') + '-launcher')\n}\n\nvar validateFramework = function (name) {\n  installPackage('karma-' + name)\n}\n\nvar validateRequireJs = function (useRequire) {\n  if (useRequire) {\n    validateFramework('requirejs')\n  }\n}\n\nvar questions = [{\n  id: 'framework',\n  question: 'Which testing framework do you want to use ?',\n  hint: 'Press tab to list possible options. Enter to move to the next question.',\n  options: ['jasmine', 'mocha', 'qunit', 'nodeunit', 'nunit', ''],\n  validate: validateFramework\n}, {\n  id: 'requirejs',\n  question: 'Do you want to use Require.js ?',\n  hint: 'This will add Require.js plugin.\\n' +\n    'Press tab to list possible options. Enter to move to the next question.',\n  options: ['no', 'yes'],\n  validate: validateRequireJs,\n  boolean: true\n}, {\n  id: 'browsers',\n  question: 'Do you want to capture any browsers automatically ?',\n  hint: 'Press tab to list possible options. Enter empty string to move to the next question.',\n  options: ['Chrome', 'ChromeCanary', 'Firefox', 'Safari', 'PhantomJS', 'Opera', 'IE', ''],\n  validate: validateBrowser,\n  multiple: true\n}, {\n  id: 'files',\n  question: 'What is the location of your source and test files ?',\n  hint: 'You can use glob patterns, eg. \"js/*.js\" or \"test/**/*Spec.js\".\\n' +\n    'Enter empty string to move to the next question.',\n  multiple: true,\n  validate: validatePattern\n}, {\n  id: 'exclude',\n  question: 'Should any of the files included by the previous patterns be excluded ?',\n  hint: 'You can use glob patterns, eg. \"**/*.swp\".\\n' +\n    'Enter empty string to move to the next question.',\n  multiple: true,\n  validate: validatePattern\n}, {\n  id: 'generateTestMain',\n  question: 'Do you wanna generate a bootstrap file for RequireJS?',\n  hint: 'This will generate test-main.js/coffee that configures RequireJS and starts the tests.',\n  options: ['no', 'yes'],\n  boolean: true,\n  condition: function (answers) {\n    return answers.requirejs\n  }\n}, {\n  id: 'includedFiles',\n  question: 'Which files do you want to include with <script> tag ?',\n  hint: 'This should be a script that bootstraps your test by configuring Require.js and ' +\n    'kicking __karma__.start(), probably your test-main.js file.\\n' +\n    'Enter empty string to move to the next question.',\n  multiple: true,\n  validate: validatePattern,\n  condition: function (answers) {\n    return answers.requirejs && !answers.generateTestMain\n  }\n}, {\n  id: 'autoWatch',\n  question: 'Do you want Karma to watch all the files and run the tests on change ?',\n  hint: 'Press tab to list possible options.',\n  options: ['yes', 'no'],\n  boolean: true\n}]\n\nvar getBasePath = function (configFilePath, cwd) {\n  var configParts = path.dirname(configFilePath).split(path.sep)\n  var cwdParts = cwd.split(path.sep)\n  var base = []\n\n  while (configParts.length && configParts[0] === cwdParts[0]) {\n    configParts.shift()\n    cwdParts.shift()\n  }\n\n  while (configParts.length) {\n    var part = configParts.shift()\n    if (part === '..') {\n      base.unshift(cwdParts.pop())\n    } else if (part !== '.') {\n      base.unshift('..')\n    }\n  }\n\n  return base.join(path.sep)\n}\n\nvar processAnswers = function (answers, basePath, testMainFile) {\n  var processedAnswers = {\n    basePath: basePath,\n    files: answers.files,\n    onlyServedFiles: [],\n    exclude: answers.exclude,\n    autoWatch: answers.autoWatch,\n    generateTestMain: answers.generateTestMain,\n    browsers: answers.browsers,\n    frameworks: [],\n    preprocessors: {}\n  }\n\n  if (answers.framework) {\n    processedAnswers.frameworks.push(answers.framework)\n  }\n\n  if (answers.requirejs) {\n    processedAnswers.frameworks.push('requirejs')\n    processedAnswers.files = answers.includedFiles || []\n    processedAnswers.onlyServedFiles = answers.files\n\n    if (answers.generateTestMain) {\n      processedAnswers.files.push(testMainFile)\n    }\n  }\n\n  var allPatterns = answers.files.concat(answers.includedFiles || [])\n  if (allPatterns.some(function (pattern) {\n    return mm(pattern, '**/*.coffee')\n  })) {\n    installPackage('karma-coffee-preprocessor')\n    processedAnswers.preprocessors['**/*.coffee'] = ['coffee']\n  }\n\n  return processedAnswers\n}\n\nexports.init = function (config) {\n  var useColors = true\n  var logLevel = constant.LOG_INFO\n  var colorScheme = COLOR_SCHEME.ON\n\n  if (helper.isDefined(config.colors)) {\n    colorScheme = config.colors ? COLOR_SCHEME.ON : COLOR_SCHEME.OFF\n    useColors = config.colors\n  }\n\n  if (helper.isDefined(config.logLevel)) {\n    logLevel = config.logLevel\n  }\n\n  logger.setup(logLevel, useColors)\n\n  // need to be registered before creating readlineInterface\n  process.stdin.on('keypress', function (s, key) {\n    sm.onKeypress(key)\n  })\n\n  var rli = readline.createInterface(process.stdin, process.stdout)\n  var sm = new StateMachine(rli, colorScheme)\n\n  rli.on('line', sm.onLine.bind(sm))\n\n  // clean colors\n  rli.on('SIGINT', function () {\n    sm.kill()\n    process.exit(0)\n  })\n\n  sm.on('next_question', printLogQueue)\n\n  sm.process(questions, function (answers) {\n    var cwd = process.cwd()\n    var configFile = config.configFile || 'karma.conf.js'\n    var isCoffee = path.extname(configFile) === '.coffee'\n    var testMainFile = isCoffee ? 'test-main.coffee' : 'test-main.js'\n    var formatter = formatters.createForPath(configFile)\n    var processedAnswers = processAnswers(answers, getBasePath(configFile, cwd), testMainFile)\n    var configFilePath = path.resolve(cwd, configFile)\n    var testMainFilePath = path.resolve(cwd, testMainFile)\n\n    if (isCoffee) {\n      installPackage('coffee-script')\n    }\n\n    if (processedAnswers.generateTestMain) {\n      formatter.writeRequirejsConfigFile(testMainFilePath)\n      console.log(colorScheme.success(\n        'RequireJS bootstrap file generated at \"' + testMainFilePath + '\".\\n'\n      ))\n    }\n\n    formatter.writeConfigFile(configFilePath, processedAnswers)\n    console.log(colorScheme.success('Config file generated at \"' + configFilePath + '\".\\n'))\n  })\n}\n"]}