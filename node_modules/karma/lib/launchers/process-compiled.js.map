{"version":3,"sources":["process.js"],"names":[],"mappings":"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","file":"process-compiled.js","sourcesContent":["var path = require('path')\nvar log = require('../logger').create('launcher')\nvar env = process.env\n\nvar ProcessLauncher = function (spawn, tempDir, timer) {\n  var self = this\n  var onExitCallback\n  var killTimeout = 2000\n\n  this._tempDir = tempDir.getPath('/karma-' + this.id.toString())\n\n  this.on('start', function (url) {\n    tempDir.create(self._tempDir)\n    self._start(url)\n  })\n\n  this.on('kill', function (done) {\n    if (!self._process) {\n      return process.nextTick(done)\n    }\n\n    onExitCallback = done\n    self._process.kill()\n    self._killTimer = timer.setTimeout(self._onKillTimeout, killTimeout)\n  })\n\n  this._start = function (url) {\n    self._execCommand(self._getCommand(), self._getOptions(url))\n  }\n\n  this._getCommand = function () {\n    return env[self.ENV_CMD] || self.DEFAULT_CMD[process.platform]\n  }\n\n  this._getOptions = function (url) {\n    return [url]\n  }\n\n  // Normalize the command, remove quotes (spawn does not like them).\n  this._normalizeCommand = function (cmd) {\n    if (cmd.charAt(0) === cmd.charAt(cmd.length - 1) && '\\'`\"'.indexOf(cmd.charAt(0)) !== -1) {\n      cmd = cmd.substring(1, cmd.length - 1)\n      log.warn('The path should not be quoted.\\n  Normalized the path to %s', cmd)\n    }\n\n    return path.normalize(cmd)\n  }\n\n  this._execCommand = function (cmd, args) {\n    if (!cmd) {\n      log.error('No binary for %s browser on your platform.\\n  ' +\n        'Please, set \"%s\" env variable.', self.name, self.ENV_CMD)\n\n      // disable restarting\n      self._retryLimit = -1\n\n      return self._clearTempDirAndReportDone('no binary')\n    }\n\n    cmd = this._normalizeCommand(cmd)\n\n    log.debug(cmd + ' ' + args.join(' '))\n    self._process = spawn(cmd, args)\n\n    var errorOutput = ''\n\n    self._process.on('exit', function (code) {\n      self._onProcessExit(code, errorOutput)\n    })\n\n    self._process.on('error', function (err) {\n      if (err.code === 'ENOENT') {\n        self._retryLimit = -1\n        errorOutput = 'Can not find the binary ' + cmd + '\\n\\t' +\n          'Please set env variable ' + self.ENV_CMD\n      } else {\n        errorOutput += err.toString()\n      }\n    })\n  }\n\n  this._onProcessExit = function (code, errorOutput) {\n    log.debug('Process %s exited with code %d', self.name, code)\n\n    var error = null\n\n    if (self.state === self.STATE_BEING_CAPTURED) {\n      log.error('Cannot start %s\\n\\t%s', self.name, errorOutput)\n      error = 'cannot start'\n    }\n\n    if (self.state === self.STATE_CAPTURED) {\n      log.error('%s crashed.\\n\\t%s', self.name, errorOutput)\n      error = 'crashed'\n    }\n\n    self._process = null\n    if (self._killTimer) {\n      timer.clearTimeout(self._killTimer)\n      self._killTimer = null\n    }\n    self._clearTempDirAndReportDone(error)\n  }\n\n  this._clearTempDirAndReportDone = function (error) {\n    tempDir.remove(self._tempDir, function () {\n      self._done(error)\n      if (onExitCallback) {\n        onExitCallback()\n        onExitCallback = null\n      }\n    })\n  }\n\n  this._onKillTimeout = function () {\n    if (self.state !== self.STATE_BEING_KILLED) {\n      return\n    }\n\n    log.warn('%s was not killed in %d ms, sending SIGKILL.', self.name, killTimeout)\n    self._process.kill('SIGKILL')\n\n    // NOTE: https://github.com/karma-runner/karma/pull/1184\n    // NOTE: SIGKILL is just a signal.  Processes should never ignore it, but they can.\n    // If a process gets into a state where it doesn't respond in a reasonable amout of time\n    // Karma should warn, and continue as though the kill succeeded.\n    // This a certainly suboptimal, but it is better than having the test harness hang waiting\n    // for a zombie child process to exit.\n    self._killTimer = timer.setTimeout(function () {\n      log.warn('%s was not killed by SIGKILL in %d ms, continuing.', self.name, killTimeout)\n      self._onProcessExit(-1, '')\n    }, killTimeout)\n  }\n}\n\nProcessLauncher.decoratorFactory = function (timer) {\n  return function (launcher) {\n    ProcessLauncher.call(launcher, require('child_process').spawn, require('../temp_dir'), timer)\n  }\n}\n\nmodule.exports = ProcessLauncher\n"]}