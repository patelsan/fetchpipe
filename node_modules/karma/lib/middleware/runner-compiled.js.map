{"version":3,"sources":["runner.js"],"names":[],"mappings":"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","file":"runner-compiled.js","sourcesContent":["/**\n * Runner middleware is reponsible for communication with `karma run`.\n *\n * It basically triggers a test run and streams stdout back.\n */\n\nvar path = require('path')\nvar helper = require('../helper')\nvar log = require('../logger').create()\nvar constant = require('../constants')\nvar json = require('body-parser').json()\n\n// TODO(vojta): disable when single-run mode\nvar createRunnerMiddleware = function (emitter, fileList, capturedBrowsers, reporter, executor,\n  /* config.protocol */ protocol, /* config.hostname */ hostname, /* config.port */\n  port, /* config.urlRoot */ urlRoot, config) {\n  return function (request, response, next) {\n    if (request.url !== '/__run__' && request.url !== urlRoot + 'run') {\n      return next()\n    }\n\n    log.debug('Execution (fired by runner)')\n    response.writeHead(200)\n\n    if (!capturedBrowsers.length) {\n      var url = protocol + '//' + hostname + ':' + port + urlRoot\n\n      return response.end('No captured browser, open ' + url + '\\n')\n    }\n\n    json(request, response, function () {\n      if (!capturedBrowsers.areAllReady([])) {\n        response.write('Waiting for previous execution...\\n')\n      }\n\n      emitter.once('run_start', function () {\n        var responseWrite = response.write.bind(response)\n\n        reporter.addAdapter(responseWrite)\n\n        // clean up, close runner response\n        emitter.once('run_complete', function (browsers, results) {\n          reporter.removeAdapter(responseWrite)\n          response.end(constant.EXIT_CODE + results.exitCode)\n        })\n      })\n\n      var data = request.body\n      log.debug('Setting client.args to ', data.args)\n      config.client.args = data.args\n\n      var fullRefresh = true\n\n      if (helper.isArray(data.changedFiles)) {\n        data.changedFiles.forEach(function (filepath) {\n          fileList.changeFile(path.resolve(config.basePath, filepath))\n          fullRefresh = false\n        })\n      }\n\n      if (helper.isArray(data.addedFiles)) {\n        data.addedFiles.forEach(function (filepath) {\n          fileList.addFile(path.resolve(config.basePath, filepath))\n          fullRefresh = false\n        })\n      }\n\n      if (helper.isArray(data.removedFiles)) {\n        data.removedFiles.forEach(function (filepath) {\n          fileList.removeFile(path.resolve(config.basePath, filepath))\n          fullRefresh = false\n        })\n      }\n\n      if (fullRefresh && data.refresh !== false) {\n        log.debug('Refreshing all the files / patterns')\n        fileList.refresh().then(function () {\n          // Wait for the file list refresh to complete before starting test run,\n          // otherwise the context.html generation might not see new/updated files.\n          if (!config.autoWatch) {\n            executor.schedule()\n          }\n        })\n      } else {\n        executor.schedule()\n      }\n    })\n  }\n}\n\ncreateRunnerMiddleware.$inject = ['emitter', 'fileList', 'capturedBrowsers', 'reporter', 'executor',\n  'config.protocol', 'config.hostname', 'config.port', 'config.urlRoot', 'config']\n\n// PUBLIC API\nexports.create = createRunnerMiddleware\n"]}