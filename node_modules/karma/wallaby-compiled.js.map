{"version":3,"sources":["wallaby.js"],"names":[],"mappings":";;AAAA,MAAM,CAAC,OAAO,GAAG,YAAY;AAC3B,SAAO;AACL,SAAK,EAAE,CACL;AACE,aAAO,EAAE,cAAc;AACvB,gBAAU,EAAE,KAAK;KAClB,EACD;AACE,aAAO,EAAE,eAAe;AACxB,gBAAU,EAAE,KAAK;KAClB,EACD,aAAa,EACb,mBAAmB,EACnB,gCAAgC,CACjC;;AAED,SAAK,EAAE,CACL,4BAA4B,CAC7B;;AAED,aAAS,EAAE,mBAAU,CAAC,EAAE;AACtB,UAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,UAAI,KAAK,GAAG,CAAC,CAAC,aAAa,CAAC;;AAE5B,WAAK,CAAC,KAAK,CAAC,EAAE,CAAC,aAAa,EAAE,YAAY;;;AAGxC,YAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC7B,YAAI,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;AAC9B,aAAK,CAAC,QAAQ,GAAG,UAAU,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,UAAU,EAAE;AAC/D,eAAK,GAAG,KAAK,IAAI,EAAE,CAAC;AACpB,iBAAO,GAAG,OAAO,IAAI,EAAE,CAAC;AACxB,iBAAO,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;AAC7B,iBAAO,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;AAC3B,iBAAO,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;AAC7B,iBAAO,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;AACrC,iBAAO,QAAQ,CAAC,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;SACvD,CAAC;;;AAGF,eAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,yBAAyB,CAAC,CAAC,CAAC;OAC9D,CAAC,CAAC;KACJ;;AAED,OAAG,EAAE;AACH,UAAI,EAAE,MAAM;KACb;GACF,CAAC;CACH,CAAC","file":"wallaby-compiled.js","sourcesContent":["module.exports = function () {\n  return {\n    files: [\n      {\n        pattern: 'package.json',\n        instrument: false\n      },\n      {\n        pattern: 'config.tpl.js',\n        instrument: false\n      },\n      'lib/**/*.js',\n      'test/unit/**/*.js',\n      'test/unit/mocha-globals.coffee'\n    ],\n\n    tests: [\n      'test/unit/**/*.spec.coffee'\n    ],\n\n    bootstrap: function (w) {\n      var path = require('path');\n      var mocha = w.testFramework;\n\n      mocha.suite.on('pre-require', function () {\n\n        // always passing wallaby.js globals to mocks.loadFile\n        var mocks = require('mocks');\n        var loadFile = mocks.loadFile;\n        mocks.loadFile = function (filePath, mocks, globals, mockNested) {\n          mocks = mocks || {};\n          globals = globals || {};\n          globals.$_$wp = global.$_$wp;\n          globals.$_$w = global.$_$w;\n          globals.$_$wf = global.$_$wf;\n          globals.$_$tracer = global.$_$tracer;\n          return loadFile(filePath, mocks, globals, mockNested);\n        };\n\n        // loading mocha-globals for each run\n        require(path.join(process.cwd(), 'test/unit/mocha-globals'));\n      });\n    },\n\n    env: {\n      type: 'node'\n    }\n  };\n};"]}