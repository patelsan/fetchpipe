{"version":3,"sources":["dateFile.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;AACb,IAAI,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC;IACjC,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC;IAC/B,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC;IACxB,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC;IACtB,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC;IAClB,GAAG,GAAG,EAAE,CAAC,GAAG,IAAI,IAAI;IACpB,SAAS,GAAG,EAAE,CAAC;;;AAGjB,OAAO,CAAC,EAAE,CAAC,MAAM,EAAE,YAAW;AAC5B,WAAS,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE;AAChC,QAAI,CAAC,GAAG,EAAE,CAAC;GACZ,CAAC,CAAC;CACJ,CAAC,CAAC;;;;;;;;;;AAUH,SAAS,QAAQ,CAAC,QAAQ,EAAE,OAAO,EAAE,oBAAoB,EAAE,MAAM,EAAE,cAAc,EAAE;AACjF,QAAM,GAAG,MAAM,IAAI,OAAO,CAAC,WAAW,CAAC;;AAEvC,MAAI,OAAO,GAAG,IAAI,OAAO,CAAC,qBAAqB,CAC7C,QAAQ,EACR,OAAO,EACP,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,CAC/C,CAAC;AACF,WAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;;AAExB,SAAO,UAAS,QAAQ,EAAE;AACxB,WAAO,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,cAAc,CAAC,GAAG,GAAG,EAAE,MAAM,CAAC,CAAC;GAC/D,CAAC;CAEH;;AAED,SAAS,SAAS,CAAC,MAAM,EAAE,OAAO,EAAE;AAClC,MAAI,MAAM,CAAC;;AAEX,MAAI,MAAM,CAAC,MAAM,EAAE;AACjB,UAAM,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;GAC5D;;AAED,MAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE;AAChC,UAAM,CAAC,oBAAoB,GAAG,KAAK,CAAC;GACrC;;AAED,MAAI,OAAO,IAAI,OAAO,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;AAC9C,UAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;GAC3D;;AAED,SAAO,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,oBAAoB,EAAE,MAAM,EAAE,MAAM,CAAC,cAAc,CAAC,CAAC;CAC9G;;AAED,SAAS,QAAQ,CAAC,EAAE,EAAE;AACpB,OAAK,CAAC,IAAI,CAAC,SAAS,EAAE,UAAS,IAAI,EAAE,IAAI,EAAE;AACzC,QAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,OAAO,CAAC,EAAE;AAC7B,UAAI,CAAC,IAAI,CAAC,OAAO,EAAE,YAAW;AAC5B,YAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;OAChB,CAAC,CAAC;KACJ,MAAM;AACL,UAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;KAChB;GACF,EAAE,EAAE,CAAC,CAAC;CACR;;AAED,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC5B,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC;AAC9B,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC","file":"dateFile-compiled.js","sourcesContent":["\"use strict\";\nvar streams = require('../streams')\n, layouts = require('../layouts')\n, async = require('async')\n, path = require('path')\n, os = require('os')\n, eol = os.EOL || '\\n'\n, openFiles = [];\n\n//close open files on process exit.\nprocess.on('exit', function() {\n  openFiles.forEach(function (file) {\n    file.end();\n  });\n});\n\n/**\n * File appender that rolls files according to a date pattern.\n * @filename base filename.\n * @pattern the format that will be added to the end of filename when rolling,\n *          also used to check when to roll files - defaults to '.yyyy-MM-dd'\n * @layout layout function for log messages - defaults to basicLayout\n * @timezoneOffset optional timezone offset in minutes - defaults to system local\n */\nfunction appender(filename, pattern, alwaysIncludePattern, layout, timezoneOffset) {\n  layout = layout || layouts.basicLayout;\n\n  var logFile = new streams.DateRollingFileStream(\n    filename,\n    pattern,\n    { alwaysIncludePattern: alwaysIncludePattern }\n  );\n  openFiles.push(logFile);\n\n  return function(logEvent) {\n    logFile.write(layout(logEvent, timezoneOffset) + eol, \"utf8\");\n  };\n\n}\n\nfunction configure(config, options) {\n  var layout;\n\n  if (config.layout) {\n    layout = layouts.layout(config.layout.type, config.layout);\n  }\n\n  if (!config.alwaysIncludePattern) {\n    config.alwaysIncludePattern = false;\n  }\n\n  if (options && options.cwd && !config.absolute) {\n    config.filename = path.join(options.cwd, config.filename);\n  }\n\n  return appender(config.filename, config.pattern, config.alwaysIncludePattern, layout, config.timezoneOffset);\n}\n\nfunction shutdown(cb) {\n  async.each(openFiles, function(file, done) {\n    if (!file.write(eol, \"utf-8\")) {\n      file.once('drain', function() {\n        file.end(done);\n      });\n    } else {\n      file.end(done);\n    }\n  }, cb);\n}\n\nexports.appender = appender;\nexports.configure = configure;\nexports.shutdown = shutdown;\n"]}