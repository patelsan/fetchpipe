{"version":3,"sources":["file.js"],"names":[],"mappings":"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","file":"file-compiled.js","sourcesContent":["\"use strict\";\nvar layouts = require('../layouts')\n, async = require('async')\n, path = require('path')\n, fs = require('fs')\n, streams = require('../streams')\n, os = require('os')\n, eol = os.EOL || '\\n'\n, openFiles = []\n, levels = require('../levels');\n\n//close open files on process exit.\nprocess.on('exit', function() {\n  openFiles.forEach(function (file) {\n    file.end();\n  });\n});\n\n/**\n * File Appender writing the logs to a text file. Supports rolling of logs by size.\n *\n * @param file file log messages will be written to\n * @param layout a function that takes a logevent and returns a string \n *   (defaults to basicLayout).\n * @param logSize - the maximum size (in bytes) for a log file, \n *   if not provided then logs won't be rotated.\n * @param numBackups - the number of log files to keep after logSize \n *   has been reached (default 5)\n * @param compress - flag that controls log file compression\n * @param timezoneOffset - optional timezone offset in minutes (default system local)\n */\nfunction fileAppender (file, layout, logSize, numBackups, compress, timezoneOffset) {\n  var bytesWritten = 0;\n  file = path.normalize(file);\n  layout = layout || layouts.basicLayout;\n  numBackups = numBackups === undefined ? 5 : numBackups;\n  //there has to be at least one backup if logSize has been specified\n  numBackups = numBackups === 0 ? 1 : numBackups;\n\n  function openTheStream(file, fileSize, numFiles) {\n    var stream;\n    if (fileSize) {\n      stream = new streams.RollingFileStream(\n        file,\n        fileSize,\n        numFiles,\n        { \"compress\": compress }\n      );\n    } else {\n      stream = fs.createWriteStream(\n        file, \n        { encoding: \"utf8\", \n          mode: parseInt('0644', 8), \n          flags: 'a' }\n      );\n    }\n    stream.on(\"error\", function (err) {\n      console.error(\"log4js.fileAppender - Writing to file %s, error happened \", file, err);\n    });\n    return stream;\n  }\n\n  var logFile = openTheStream(file, logSize, numBackups);\n  \n  // push file to the stack of open handlers\n  openFiles.push(logFile);\n\n  return function(loggingEvent) {\n    logFile.write(layout(loggingEvent, timezoneOffset) + eol, \"utf8\");\n  };\n\n}\n\nfunction configure(config, options) {\n  var layout;\n  if (config.layout) {\n    layout = layouts.layout(config.layout.type, config.layout);\n  }\n\n  if (options && options.cwd && !config.absolute) {\n    config.filename = path.join(options.cwd, config.filename);\n  }\n\n  return fileAppender(config.filename, layout, config.maxLogSize, config.backups, config.compress, config.timezoneOffset);\n}\n\nfunction shutdown(cb) {\n  async.each(openFiles, function(file, done) {\n    if (!file.write(eol, \"utf-8\")) {\n      file.once('drain', function() {\n        file.end(done);\n      });\n    } else {\n      file.end(done);\n    }\n  }, cb);\n}  \n\nexports.appender = fileAppender;\nexports.configure = configure;\nexports.shutdown = shutdown;\n"]}