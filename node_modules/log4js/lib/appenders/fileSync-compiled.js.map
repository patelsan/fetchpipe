{"version":3,"sources":["fileSync.js"],"names":[],"mappings":"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","file":"fileSync-compiled.js","sourcesContent":["\"use strict\";\nvar debug = require('../debug')('fileSync')\n, layouts = require('../layouts')\n, path = require('path')\n, fs = require('fs')\n, streams = require('../streams')\n, os = require('os')\n, eol = os.EOL || '\\n'\n;\n\nfunction RollingFileSync (filename, size, backups, options) {\n  debug(\"In RollingFileStream\");\n\n  function throwErrorIfArgumentsAreNotValid() {\n    if (!filename || !size || size <= 0) {\n      throw new Error(\"You must specify a filename and file size\");\n    }\n  }\n  \n  throwErrorIfArgumentsAreNotValid();\n  \n  this.filename = filename;\n  this.size = size;\n  this.backups = backups || 1;\n  this.options = options || { encoding: 'utf8', mode: parseInt('0644', 8), flags: 'a' };\n  this.currentSize = 0;\n  \n  function currentFileSize(file) {\n    var fileSize = 0;\n    try {\n      fileSize = fs.statSync(file).size;\n    } catch (e) {\n      // file does not exist\n      fs.appendFileSync(filename, '');\n    }\n    return fileSize;\n  }\n\n  this.currentSize = currentFileSize(this.filename);\n}\n\nRollingFileSync.prototype.shouldRoll = function() {\n  debug(\"should roll with current size %d, and max size %d\", this.currentSize, this.size);\n  return this.currentSize >= this.size;\n};\n\nRollingFileSync.prototype.roll = function(filename) {\n  var that = this,\n  nameMatcher = new RegExp('^' + path.basename(filename));\n  \n  function justTheseFiles (item) {\n    return nameMatcher.test(item);\n  }\n  \n  function index(filename_) {\n    return parseInt(filename_.substring((path.basename(filename) + '.').length), 10) || 0;\n  }\n  \n  function byIndex(a, b) {\n    if (index(a) > index(b)) {\n      return 1;\n    } else if (index(a) < index(b) ) {\n      return -1;\n    } else {\n      return 0;\n    }\n  }\n\n  function increaseFileIndex (fileToRename) {\n    var idx = index(fileToRename);\n    debug('Index of ' + fileToRename + ' is ' + idx);\n    if (idx < that.backups) {\n      //on windows, you can get a EEXIST error if you rename a file to an existing file\n      //so, we'll try to delete the file we're renaming to first\n      try {\n        fs.unlinkSync(filename + '.' + (idx+1));\n      } catch(e) {\n        //ignore err: if we could not delete, it's most likely that it doesn't exist\n      }\n      \n      debug('Renaming ' + fileToRename + ' -> ' + filename + '.' + (idx+1));\n      fs.renameSync(path.join(path.dirname(filename), fileToRename), filename + '.' + (idx + 1));\n    }\n  }\n\n  function renameTheFiles() {\n    //roll the backups (rename file.n to file.n+1, where n <= numBackups)\n    debug(\"Renaming the old files\");\n    \n    var files = fs.readdirSync(path.dirname(filename));\n    files.filter(justTheseFiles).sort(byIndex).reverse().forEach(increaseFileIndex);\n  }\n\n  debug(\"Rolling, rolling, rolling\");\n  renameTheFiles();\n};\n\nRollingFileSync.prototype.write = function(chunk, encoding) {\n  var that = this;\n  \n  \n  function writeTheChunk() {\n    debug(\"writing the chunk to the file\");\n    that.currentSize += chunk.length;\n    fs.appendFileSync(that.filename, chunk);\n  }\n\n  debug(\"in write\");\n  \n\n  if (this.shouldRoll()) {\n    this.currentSize = 0;\n    this.roll(this.filename);\n  }\n  \n  writeTheChunk();\n};\n\n\n/**\n * File Appender writing the logs to a text file. Supports rolling of logs by size.\n *\n * @param file file log messages will be written to\n * @param layout a function that takes a logevent and returns a string \n *   (defaults to basicLayout).\n * @param logSize - the maximum size (in bytes) for a log file, \n *   if not provided then logs won't be rotated.\n * @param numBackups - the number of log files to keep after logSize \n *   has been reached (default 5)\n * @param timezoneOffset - optional timezone offset in minutes\n *   (default system local)\n */\nfunction fileAppender (file, layout, logSize, numBackups, timezoneOffset) {\n  debug(\"fileSync appender created\");\n  var bytesWritten = 0;\n  file = path.normalize(file);\n  layout = layout || layouts.basicLayout;\n  numBackups = numBackups === undefined ? 5 : numBackups;\n  //there has to be at least one backup if logSize has been specified\n  numBackups = numBackups === 0 ? 1 : numBackups;\n\n  function openTheStream(file, fileSize, numFiles) {\n    var stream;\n    \n    if (fileSize) {\n      stream = new RollingFileSync(\n        file,\n        fileSize,\n        numFiles\n      );\n    } else {\n      stream = (function(f) {\n        // create file if it doesn't exist\n        if (!fs.existsSync(f))\n            fs.appendFileSync(f, '');\n        \n        return {\n            write: function(data) {\n                fs.appendFileSync(f, data);\n            }\n        };\n      })(file);\n    }\n\n    return stream;\n  }\n\n  var logFile = openTheStream(file, logSize, numBackups);\n  \n  return function(loggingEvent) {\n    logFile.write(layout(loggingEvent, timezoneOffset) + eol);\n  };\n}\n\nfunction configure(config, options) {\n  var layout;\n  if (config.layout) {\n    layout = layouts.layout(config.layout.type, config.layout);\n  }\n\n  if (options && options.cwd && !config.absolute) {\n    config.filename = path.join(options.cwd, config.filename);\n  }\n\n  return fileAppender(config.filename, layout, config.maxLogSize, config.backups, config.timezoneOffset);\n}\n\nexports.appender = fileAppender;\nexports.configure = configure;\n"]}