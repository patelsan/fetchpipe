{"version":3,"sources":["loggly.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;AACb,IAAI,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC;IACjC,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC;IAC1B,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC;IAClB,WAAW,GAAG,OAAO,CAAC,wBAAwB,CAAC;;;;;;;;;;;;;AAcjD,SAAS,cAAc,CAAC,MAAM,EAAE,MAAM,EAAE;AACvC,MAAI,MAAM,GAAG,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;AACxC,MAAG,CAAC,MAAM,EAAE,MAAM,GAAG,WAAW,CAAC;;AAEjC,SAAO,UAAS,YAAY,EAAE;AAC9B,QAAI,GAAG,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;AAC/B,UAAM,CAAC,GAAG,CAAC;AACV,SAAG,EAAE,GAAG;AACR,WAAK,EAAE,YAAY,CAAC,KAAK,CAAC,QAAQ;AAClC,cAAQ,EAAE,YAAY,CAAC,YAAY;AACnC,cAAQ,EAAE,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE;KAClC,CAAC,CAAC;GACF,CAAA;CACF;;AAED,SAAS,SAAS,CAAC,MAAM,EAAE;AAC1B,MAAI,MAAM,CAAC;AACX,MAAI,MAAM,CAAC,MAAM,EAAE;AAClB,UAAM,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;GAC3D;AACD,SAAO,cAAc,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;CACtC;;AAED,OAAO,CAAC,IAAI,GAAQ,QAAQ,CAAC;AAC7B,OAAO,CAAC,QAAQ,GAAI,cAAc,CAAC;AACnC,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC","file":"loggly-compiled.js","sourcesContent":["'use strict';\nvar layouts = require('../layouts')\n, loggly = require('loggly')\n, os = require('os')\n, passThrough = layouts.messagePassThroughLayout;\n\n\n/**\n * Loggly Appender. Sends logging events to Loggly using node-loggly \n *\n * @param config object with loggly configuration data\n * {\n *   token: 'your-really-long-input-token',\n *   subdomain: 'your-subdomain',\n *   tags: ['loggly-tag1', 'loggly-tag2', .., 'loggly-tagn'] \n * }\n * @param layout a function that takes a logevent and returns a string (defaults to objectLayout).\n */\nfunction logglyAppender(config, layout) {\n\tvar client = loggly.createClient(config);\n  if(!layout) layout = passThrough;\n\n  return function(loggingEvent) {\n\t\tvar msg = layout(loggingEvent);\n\t\tclient.log({\n\t\t\tmsg: msg,\n\t\t\tlevel: loggingEvent.level.levelStr,\n\t\t\tcategory: loggingEvent.categoryName,\n\t\t\thostname: os.hostname().toString(),\n\t\t});\n  }\n}\n\nfunction configure(config) {\n\tvar layout;\n\tif (config.layout) {\n\t\tlayout = layouts.layout(config.layout.type, config.layout);\n\t}\n\treturn logglyAppender(config, layout);\n}\n\nexports.name      = 'loggly';\nexports.appender  = logglyAppender;\nexports.configure = configure;\n"]}