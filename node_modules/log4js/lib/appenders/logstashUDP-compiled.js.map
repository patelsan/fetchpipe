{"version":3,"sources":["logstashUDP.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;AACb,IAAI,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC;IACjC,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC;IACxB,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;;AAEzB,SAAS,WAAW,CAAE,MAAM,EAAE,MAAM,EAAE;AACpC,MAAI,GAAG,GAAG,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;AACrC,MAAI,IAAI,GAAG,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC;AAC7D,QAAM,GAAG,MAAM,IAAI,OAAO,CAAC,cAAc,CAAC;AAC1C,MAAG,CAAC,MAAM,CAAC,MAAM,EAAE;AACjB,UAAM,CAAC,MAAM,GAAG,EAAE,CAAC;GACpB;AACD,SAAO,UAAS,YAAY,EAAE;AAC5B,QAAI,UAAU,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;AACtC,QAAI,MAAM,GAAG,EAAE,CAAC;AAChB,SAAI,IAAI,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE;AAC1B,YAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;KAC9B;AACD,UAAM,CAAC,OAAO,CAAC,GAAG,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC;AAC9C,QAAI,SAAS,GAAG;AACd,kBAAY,EAAE,AAAC,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAE,WAAW,EAAE;AAC9D,UAAI,EAAE,IAAI;AACV,aAAO,EAAE,UAAU;AACnB,YAAM,EAAE,MAAM;KACf,CAAC;AACF,WAAO,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;GACnD,CAAC;CACH;;AAED,SAAS,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE;AAC3C,MAAI,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;AACnD,KAAG,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,UAAS,GAAG,EAAE,KAAK,EAAE;AAClE,QAAG,GAAG,EAAE;AACN,aAAO,CAAC,KAAK,CACX,sCAAsC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CACtE,CAAC;KACH;GACF,CAAC,CAAC;CACJ;;AAED,SAAS,SAAS,CAAC,MAAM,EAAE;AACzB,MAAI,MAAM,CAAC;AACX,MAAI,MAAM,CAAC,MAAM,EAAE;AACjB,UAAM,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;GAC5D;AACD,SAAO,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;CACpC;;AAED,OAAO,CAAC,QAAQ,GAAG,WAAW,CAAC;AAC/B,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC","file":"logstashUDP-compiled.js","sourcesContent":["\"use strict\";\nvar layouts = require('../layouts')\n, dgram = require('dgram')\n, util = require('util');\n\nfunction logstashUDP (config, layout) {\n  var udp = dgram.createSocket('udp4');\n  var type = config.logType ? config.logType : config.category;\n  layout = layout || layouts.colouredLayout;\n  if(!config.fields) {\n    config.fields = {};\n  }\n  return function(loggingEvent) {\n    var logMessage = layout(loggingEvent);\n    var fields = {};\n    for(var i in config.fields) {\n      fields[i] = config.fields[i];\n    }\n    fields['level'] = loggingEvent.level.levelStr;\n    var logObject = {\n      '@timestamp': (new Date(loggingEvent.startTime)).toISOString(),\n      type: type,\n      message: logMessage,\n      fields: fields\n    };\n    sendLog(udp, config.host, config.port, logObject);\n  };\n}\n\nfunction sendLog(udp, host, port, logObject) {\n  var buffer = new Buffer(JSON.stringify(logObject));\n  udp.send(buffer, 0, buffer.length, port, host, function(err, bytes) {\n    if(err) {\n      console.error(\n        \"log4js.logstashUDP - %s:%p Error: %s\", host, port, util.inspect(err)\n      );\n    }\n  });\n}\n\nfunction configure(config) {\n  var layout;\n  if (config.layout) {\n    layout = layouts.layout(config.layout.type, config.layout);\n  }\n  return logstashUDP(config, layout);\n}\n\nexports.appender = logstashUDP;\nexports.configure = configure;\n"]}