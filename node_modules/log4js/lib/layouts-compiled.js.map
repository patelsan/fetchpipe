{"version":3,"sources":["layouts.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;AACb,IAAI,UAAU,GAAG,OAAO,CAAC,eAAe,CAAC;IACvC,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC;IAClB,GAAG,GAAG,EAAE,CAAC,GAAG,IAAI,IAAI;IACpB,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC;IACtB,iBAAiB,GAAG,SAAS;IAC7B,YAAY,GAAG;AACf,sBAAoB,EAAE,8BAAW;AAAE,WAAO,wBAAwB,CAAC;GAAE;AACrE,SAAO,EAAE,iBAAW;AAAE,WAAO,WAAW,CAAC;GAAE;AAC3C,WAAS,EAAE,mBAAW;AAAE,WAAO,cAAc,CAAC;GAAE;AAChD,YAAU,EAAE,oBAAW;AAAE,WAAO,cAAc,CAAC;GAAE;AACjD,WAAS,EAAE,iBAAU,MAAM,EAAE;AAC3B,WAAO,aAAa,CAAC,MAAM,IAAI,MAAM,CAAC,OAAO,EAAE,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC;GAC1E;CACD;IACC,OAAO,GAAG;AACV,KAAG,EAAE,MAAM;AACX,OAAK,EAAE,MAAM;AACb,OAAK,EAAE,MAAM;AACb,MAAI,EAAE,OAAO;AACb,MAAI,EAAE,QAAQ;AACd,OAAK,EAAE,KAAK;AACZ,OAAK,EAAE,SAAS;AAChB,KAAG,EAAE,MAAM;CACZ,CAAC;;AAEF,SAAS,qBAAqB,CAAC,KAAK,EAAE;AACpC,SAAO,KAAK,CAAC,GAAG,CAAC,UAAS,IAAI,EAAE;AAC9B,QAAI,AAAC,IAAI,YAAY,KAAK,IAAK,IAAI,CAAC,KAAK,EAAE;AACzC,aAAO,EAAE,OAAO,EAAE,mBAAW;AAAE,iBAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;SAAE,EAAE,CAAC;KAClF,MAAM;AACL,aAAO,IAAI,CAAC;KACb;GACF,CAAC,CAAC;CACJ;;AAED,SAAS,aAAa,CAAC,OAAO,EAAE;AAC9B,MAAI,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,OAAO,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACpF,SAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC;CAC7D;;AAED,IAAI,MAAM,GAAG;;AAEX,QAAM,EAAQ,CAAC,CAAC,EAAG,EAAE,CAAC;AACtB,UAAQ,EAAM,CAAC,CAAC,EAAG,EAAE,CAAC;AACtB,aAAW,EAAG,CAAC,CAAC,EAAG,EAAE,CAAC;AACtB,WAAS,EAAK,CAAC,CAAC,EAAG,EAAE,CAAC;;AAEtB,SAAO,EAAO,CAAC,EAAE,EAAE,EAAE,CAAC;AACtB,QAAM,EAAQ,CAAC,EAAE,EAAE,EAAE,CAAC;AACtB,SAAO,EAAO,CAAC,EAAE,EAAE,EAAE,CAAC;;AAEtB,QAAM,EAAQ,CAAC,EAAE,EAAE,EAAE,CAAC;AACtB,QAAM,EAAQ,CAAC,EAAE,EAAE,EAAE,CAAC;AACtB,SAAO,EAAO,CAAC,EAAE,EAAE,EAAE,CAAC;AACtB,WAAS,EAAK,CAAC,EAAE,EAAE,EAAE,CAAC;AACtB,OAAK,EAAS,CAAC,EAAE,EAAE,EAAE,CAAC;AACtB,UAAQ,EAAM,CAAC,EAAE,EAAE,EAAE,CAAC;CACvB,CAAC;;AAEF,SAAS,aAAa,CAAC,KAAK,EAAE;AAC5B,SAAO,KAAK,GAAG,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;CACtD;AACD,SAAS,WAAW,CAAC,KAAK,EAAE;AAC1B,SAAO,KAAK,GAAG,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;CACtD;;;;AAID,SAAS,QAAQ,CAAE,GAAG,EAAE,KAAK,EAAE;AAC7B,SAAO,aAAa,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;CACxD;;AAED,SAAS,yBAAyB,CAAC,YAAY,EAAE,MAAM,EAAE,cAAc,EAAE;AACvE,MAAI,MAAM,GAAG,QAAQ,CACnB,aAAa,CACX,iBAAiB,EACf,UAAU,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,EAAE,cAAc,CAAC,EAC3D,YAAY,CAAC,KAAK,EAClB,YAAY,CAAC,YAAY,CAC5B,EACC,MAAM,CACT,CAAC;AACF,SAAO,MAAM,CAAC;CACf;;;;;;;;;;;AAWD,SAAS,WAAW,CAAE,YAAY,EAAE,cAAc,EAAE;AAClD,SAAO,yBAAyB,CAAC,YAAY,EAAE,SAAS,EAAE,cAAc,CAAC,GAAG,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;CAC9G;;;;;;AAMD,SAAS,cAAc,CAAE,YAAY,EAAE,cAAc,EAAE;AACrD,SAAO,yBAAyB,CAC9B,YAAY,EACZ,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,EACtC,cAAc,CACf,GAAG,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;CACtC;;AAED,SAAS,wBAAwB,CAAE,YAAY,EAAE;AAC/C,SAAO,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;CACzC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCD,SAAS,aAAa,CAAE,OAAO,EAAE,MAAM,EAAE,cAAc,EAAE;AACvD,MAAI,uBAAuB,GAAI,iBAAiB,CAAC;AACjD,MAAI,KAAK,GAAG,oEAAoE,CAAC;;AAEjF,SAAO,GAAG,OAAO,IAAI,uBAAuB,CAAC;;AAE7C,WAAS,YAAY,CAAC,YAAY,EAAE,SAAS,EAAE;AAC7C,QAAI,UAAU,GAAG,YAAY,CAAC,YAAY,CAAC;AAC3C,QAAI,SAAS,EAAE;AACb,UAAI,SAAS,GAAG,QAAQ,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;AACxC,UAAI,cAAc,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC3C,UAAI,SAAS,GAAG,cAAc,CAAC,MAAM,EAAE;AACrC,kBAAU,GAAG,cAAc,CAAC,KAAK,CAAC,cAAc,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;OAChF;KACF;AACD,WAAO,UAAU,CAAC;GACnB;;AAED,WAAS,YAAY,CAAC,YAAY,EAAE,SAAS,EAAE;AAC7C,QAAI,MAAM,GAAG,UAAU,CAAC,cAAc,CAAC;AACvC,QAAI,SAAS,EAAE;AACb,YAAM,GAAG,SAAS,CAAC;;AAEnB,UAAI,MAAM,IAAI,SAAS,EAAE;AACvB,cAAM,GAAG,UAAU,CAAC,cAAc,CAAC;OACpC,MAAM,IAAI,MAAM,IAAI,wBAAwB,EAAE;AAC7C,cAAM,GAAG,UAAU,CAAC,6BAA6B,CAAC;OACnD,MAAM,IAAI,MAAM,IAAI,UAAU,EAAE;AAC/B,cAAM,GAAG,UAAU,CAAC,mBAAmB,CAAC;OACzC,MAAM,IAAI,MAAM,IAAI,MAAM,EAAE;AAC3B,cAAM,GAAG,UAAU,CAAC,eAAe,CAAC;OACrC;KACF;;AAED,WAAO,UAAU,CAAC,QAAQ,CAAC,MAAM,EAAE,YAAY,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;GAC5E;;AAED,WAAS,QAAQ,GAAG;AAClB,WAAO,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC;GACjC;;AAED,WAAS,aAAa,CAAC,YAAY,EAAE;AACnC,WAAO,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;GACzC;;AAED,WAAS,SAAS,GAAG;AACnB,WAAO,GAAG,CAAC;GACZ;;AAED,WAAS,QAAQ,CAAC,YAAY,EAAE;AAC9B,WAAO,YAAY,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;GACtC;;AAED,WAAS,SAAS,CAAC,YAAY,EAAE;AAC/B,WAAO,UAAU,CAAC,QAAQ,CAAC,UAAU,EAAE,YAAY,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;GAChF;;AAED,WAAS,WAAW,CAAC,YAAY,EAAE;AACjC,WAAO,aAAa,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;GAC9D;;AAED,WAAS,SAAS,CAAC,YAAY,EAAE;AAC/B,WAAO,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;GAC5D;;AAED,WAAS,OAAO,GAAG;AACjB,WAAO,GAAG,CAAC;GACZ;;AAED,WAAS,GAAG,CAAC,YAAY,EAAE;AACzB,QAAI,YAAY,IAAI,YAAY,CAAC,GAAG,EAAE;AACpC,aAAO,YAAY,CAAC,GAAG,CAAC;KACzB,MAAM;AACL,aAAO,OAAO,CAAC,GAAG,CAAC;KACpB;GACF;;AAED,WAAS,WAAW,CAAC,YAAY,EAAE,SAAS,EAAE;AAC5C,QAAI,YAAY,CAAC,OAAO,IAAI,SAAS,EAAE;AACrC,aAAO,SAAS,CACb,OAAO,CAAC,IAAI,EAAE,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAC1C,OAAO,CAAC,IAAI,EAAE,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAC1C,OAAO,CAAC,IAAI,EAAE,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;KACjD,MAAM,IAAI,YAAY,CAAC,OAAO,EAAE;AAC/B,aAAO,YAAY,CAAC,OAAO,CAAC,MAAM,GAAC,GAAG,GAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC;KACpE,MAAM;AACL,aAAO,GAAG,EAAE,CAAC;KACd;GACF;;AAED,WAAS,WAAW,CAAC,YAAY,EAAE,SAAS,EAAE;AAC5C,QAAI,OAAO,MAAM,CAAC,SAAS,CAAC,AAAC,KAAK,WAAW,EAAE;AAC7C,UAAI,OAAO,MAAM,CAAC,SAAS,CAAC,AAAC,KAAK,UAAU,EAAE;AAC5C,eAAO,MAAM,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,CAAC;OACxC,MAAM;AACL,eAAO,MAAM,CAAC,SAAS,CAAC,CAAC;OAC1B;KACF;AACD,WAAO,IAAI,CAAC;GACb;;AAED,MAAI,SAAS,GAAG;AACd,OAAG,EAAE,YAAY;AACjB,OAAG,EAAE,YAAY;AACjB,OAAG,EAAE,QAAQ;AACb,OAAG,EAAE,aAAa;AAClB,OAAG,EAAE,SAAS;AACd,OAAG,EAAE,QAAQ;AACb,OAAG,EAAE,SAAS;AACd,OAAG,EAAE,WAAW;AAChB,OAAG,EAAE,SAAS;AACd,OAAG,EAAE,WAAW;AAChB,OAAG,EAAE,GAAG;AACR,OAAG,EAAE,OAAO;AACZ,OAAG,EAAE,WAAW;GACjB,CAAC;;AAEF,WAAS,YAAY,CAAC,mBAAmB,EAAE,YAAY,EAAE,SAAS,EAAE;AAClE,WAAO,SAAS,CAAC,mBAAmB,CAAC,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;GAChE;;AAED,WAAS,QAAQ,CAAC,UAAU,EAAE,UAAU,EAAE;AACxC,QAAI,GAAG,CAAC;AACR,QAAI,UAAU,EAAE;AACd,SAAG,GAAG,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACzC,aAAO,UAAU,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;KACrC;;AAED,WAAO,UAAU,CAAC;GACnB;;AAED,WAAS,GAAG,CAAC,OAAO,EAAE,KAAK,EAAE;AAC3B,QAAI,GAAG,CAAC;AACR,QAAI,OAAO,EAAE;AACX,UAAI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE;AAC5B,WAAG,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;;AAEtC,eAAO,KAAK,CAAC,MAAM,GAAG,GAAG,EAAE;AACzB,eAAK,IAAI,GAAG,CAAC;SACd;OACF,MAAM;AACL,WAAG,GAAG,QAAQ,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;;AAE5B,eAAO,KAAK,CAAC,MAAM,GAAG,GAAG,EAAE;AACzB,eAAK,GAAG,GAAG,GAAG,KAAK,CAAC;SACrB;OACF;KACF;AACD,WAAO,KAAK,CAAC;GACd;;AAED,SAAO,UAAS,YAAY,EAAE;AAC5B,QAAI,eAAe,GAAG,EAAE,CAAC;AACzB,QAAI,MAAM,CAAC;AACX,QAAI,YAAY,GAAG,OAAO,CAAC;;AAE3B,WAAQ,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,EAAG;AAC1C,UAAI,aAAa,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AAC9B,UAAI,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AACxB,UAAI,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AAC3B,UAAI,mBAAmB,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AACpC,UAAI,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AAC1B,UAAI,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;;;AAGrB,UAAI,IAAI,EAAE;AACR,uBAAe,IAAI,EAAE,GAAG,IAAI,CAAC;OAC9B,MAAM;;;AAGL,YAAI,WAAW,GAAG,YAAY,CAAC,mBAAmB,EAAE,YAAY,EAAE,SAAS,CAAC,CAAC;;;;AAI7E,mBAAW,GAAG,QAAQ,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;AAChD,mBAAW,GAAG,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;AACxC,uBAAe,IAAI,WAAW,CAAC;OAChC;AACD,kBAAY,GAAG,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;KACrE;AACD,WAAO,eAAe,CAAC;GACxB,CAAC;CAEH;;AAED,MAAM,CAAC,OAAO,GAAG;AACf,aAAW,EAAE,WAAW;AACxB,0BAAwB,EAAE,wBAAwB;AAClD,eAAa,EAAE,aAAa;AAC5B,gBAAc,EAAE,cAAc;AAC9B,eAAa,EAAE,cAAc;AAC7B,WAAS,EAAE,mBAAS,IAAI,EAAE,mBAAmB,EAAE;AAC7C,gBAAY,CAAC,IAAI,CAAC,GAAG,mBAAmB,CAAC;GAC1C;AACD,QAAM,EAAE,gBAAS,IAAI,EAAE,MAAM,EAAE;AAC7B,WAAO,YAAY,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC;GACzD;CACF,CAAC","file":"layouts-compiled.js","sourcesContent":["\"use strict\";\nvar dateFormat = require('./date_format')\n, os = require('os')\n, eol = os.EOL || '\\n'\n, util = require('util')\n, replacementRegExp = /%[sdj]/g\n, layoutMakers = {\n  \"messagePassThrough\": function() { return messagePassThroughLayout; }, \n  \"basic\": function() { return basicLayout; }, \n  \"colored\": function() { return colouredLayout; }, \n  \"coloured\": function() { return colouredLayout; }, \n  \"pattern\": function (config) {\n    return patternLayout(config && config.pattern, config && config.tokens);\n\t}\n}\n, colours = {\n  ALL: \"grey\", \n  TRACE: \"blue\", \n  DEBUG: \"cyan\", \n  INFO: \"green\", \n  WARN: \"yellow\", \n  ERROR: \"red\", \n  FATAL: \"magenta\", \n  OFF: \"grey\"\n};\n\nfunction wrapErrorsWithInspect(items) {\n  return items.map(function(item) {\n    if ((item instanceof Error) && item.stack) {\n      return { inspect: function() { return util.format(item) + '\\n' + item.stack; } };\n    } else {\n      return item;\n    }\n  });\n}\n\nfunction formatLogData(logData) {\n  var data = Array.isArray(logData) ? logData : Array.prototype.slice.call(arguments);\n  return util.format.apply(util, wrapErrorsWithInspect(data));\n}\n\nvar styles = {\n    //styles\n  'bold'      : [1,  22],\n  'italic'    : [3,  23],\n  'underline' : [4,  24],\n  'inverse'   : [7,  27],\n  //grayscale\n  'white'     : [37, 39],\n  'grey'      : [90, 39],\n  'black'     : [90, 39],\n  //colors\n  'blue'      : [34, 39],\n  'cyan'      : [36, 39],\n  'green'     : [32, 39],\n  'magenta'   : [35, 39],\n  'red'       : [31, 39],\n  'yellow'    : [33, 39]\n};\n\nfunction colorizeStart(style) {\n  return style ? '\\x1B[' + styles[style][0] + 'm' : '';\n}\nfunction colorizeEnd(style) {\n  return style ? '\\x1B[' + styles[style][1] + 'm' : '';\n}\n/**\n * Taken from masylum's fork (https://github.com/masylum/log4js-node)\n */\nfunction colorize (str, style) {\n  return colorizeStart(style) + str + colorizeEnd(style);\n}\n\nfunction timestampLevelAndCategory(loggingEvent, colour, timezoneOffest) {\n  var output = colorize(\n    formatLogData(\n      '[%s] [%s] %s - '\n      , dateFormat.asString(loggingEvent.startTime, timezoneOffest)\n      , loggingEvent.level\n      , loggingEvent.categoryName\n    )\n    , colour\n  );\n  return output;\n}\n\n/**\n * BasicLayout is a simple layout for storing the logs. The logs are stored\n * in following format:\n * <pre>\n * [startTime] [logLevel] categoryName - message\\n\n * </pre>\n *\n * @author Stephan Strittmatter\n */\nfunction basicLayout (loggingEvent, timezoneOffset) {\n  return timestampLevelAndCategory(loggingEvent, undefined, timezoneOffset) + formatLogData(loggingEvent.data);\n}\n\n/**\n * colouredLayout - taken from masylum's fork.\n * same as basicLayout, but with colours.\n */\nfunction colouredLayout (loggingEvent, timezoneOffset) {\n  return timestampLevelAndCategory(\n    loggingEvent,\n    colours[loggingEvent.level.toString()],\n    timezoneOffset\n  ) + formatLogData(loggingEvent.data);\n}\n\nfunction messagePassThroughLayout (loggingEvent) {\n  return formatLogData(loggingEvent.data);\n}\n\n/**\n * PatternLayout\n * Format for specifiers is %[padding].[truncation][field]{[format]}\n * e.g. %5.10p - left pad the log level by 5 characters, up to a max of 10\n * Fields can be any of:\n *  - %r time in toLocaleTimeString format\n *  - %p log level\n *  - %c log category\n *  - %h hostname\n *  - %m log data\n *  - %d date in various formats\n *  - %% %\n *  - %n newline\n *  - %z pid\n *  - %x{<tokenname>} add dynamic tokens to your log. Tokens are specified in the tokens parameter\n * You can use %[ and %] to define a colored block.\n *\n * Tokens are specified as simple key:value objects. \n * The key represents the token name whereas the value can be a string or function\n * which is called to extract the value to put in the log message. If token is not\n * found, it doesn't replace the field.\n *\n * A sample token would be: { \"pid\" : function() { return process.pid; } }\n *\n * Takes a pattern string, array of tokens and returns a layout function.\n * @param {String} Log format pattern String\n * @param {object} map object of different tokens\n * @param {number} timezone offset in minutes\n * @return {Function}\n * @author Stephan Strittmatter\n * @author Jan Schmidle\n */\nfunction patternLayout (pattern, tokens, timezoneOffset) {\n  var TTCC_CONVERSION_PATTERN  = \"%r %p %c - %m%n\";\n  var regex = /%(-?[0-9]+)?(\\.?[0-9]+)?([\\[\\]cdhmnprzxy%])(\\{([^\\}]+)\\})?|([^%]+)/;\n  \n  pattern = pattern || TTCC_CONVERSION_PATTERN;\n\n  function categoryName(loggingEvent, specifier) {\n    var loggerName = loggingEvent.categoryName;\n    if (specifier) {\n      var precision = parseInt(specifier, 10);\n      var loggerNameBits = loggerName.split(\".\");\n      if (precision < loggerNameBits.length) {\n        loggerName = loggerNameBits.slice(loggerNameBits.length - precision).join(\".\");\n      }\n    }\n    return loggerName;\n  }\n\n  function formatAsDate(loggingEvent, specifier) {\n    var format = dateFormat.ISO8601_FORMAT;\n    if (specifier) {\n      format = specifier;\n      // Pick up special cases\n      if (format == \"ISO8601\") {\n        format = dateFormat.ISO8601_FORMAT;\n      } else if (format == \"ISO8601_WITH_TZ_OFFSET\") {\n        format = dateFormat.ISO8601_WITH_TZ_OFFSET_FORMAT; \n      } else if (format == \"ABSOLUTE\") {\n        format = dateFormat.ABSOLUTETIME_FORMAT;\n      } else if (format == \"DATE\") {\n        format = dateFormat.DATETIME_FORMAT;\n      }\n    }\n    // Format the date\n    return dateFormat.asString(format, loggingEvent.startTime, timezoneOffset);\n  }\n  \n  function hostname() {\n    return os.hostname().toString();\n  }\n\n  function formatMessage(loggingEvent) {\n    return formatLogData(loggingEvent.data);\n  }\n  \n  function endOfLine() {\n    return eol;\n  }\n\n  function logLevel(loggingEvent) {\n    return loggingEvent.level.toString();\n  }\n\n  function startTime(loggingEvent) {\n    return dateFormat.asString('hh:mm:ss', loggingEvent.startTime, timezoneOffset);\n  }\n\n  function startColour(loggingEvent) {\n    return colorizeStart(colours[loggingEvent.level.toString()]);\n  }\n\n  function endColour(loggingEvent) {\n    return colorizeEnd(colours[loggingEvent.level.toString()]);\n  }\n\n  function percent() {\n    return '%';\n  }\n\n  function pid(loggingEvent) {\n    if (loggingEvent && loggingEvent.pid) {\n      return loggingEvent.pid;\n    } else {\n      return process.pid;\n    }\n  }\n  \n  function clusterInfo(loggingEvent, specifier) {\n    if (loggingEvent.cluster && specifier) {\n      return specifier\n        .replace('%m', loggingEvent.cluster.master)\n        .replace('%w', loggingEvent.cluster.worker)\n        .replace('%i', loggingEvent.cluster.workerId);\n    } else if (loggingEvent.cluster) {\n      return loggingEvent.cluster.worker+'@'+loggingEvent.cluster.master;\n    } else {\n      return pid();\n    }\n  }\n\n  function userDefined(loggingEvent, specifier) {\n    if (typeof(tokens[specifier]) !== 'undefined') {\n      if (typeof(tokens[specifier]) === 'function') {\n        return tokens[specifier](loggingEvent);\n      } else {\n        return tokens[specifier];\n      }\n    }\n    return null;\n  }\n\n  var replacers = {\n    'c': categoryName,\n    'd': formatAsDate,\n    'h': hostname,\n    'm': formatMessage,\n    'n': endOfLine,\n    'p': logLevel,\n    'r': startTime,\n    '[': startColour,\n    ']': endColour,\n    'y': clusterInfo,\n    'z': pid,\n    '%': percent,\n    'x': userDefined\n  };\n\n  function replaceToken(conversionCharacter, loggingEvent, specifier) {\n    return replacers[conversionCharacter](loggingEvent, specifier);\n  }\n\n  function truncate(truncation, toTruncate) {\n    var len;\n    if (truncation) {\n      len = parseInt(truncation.substr(1), 10);\n      return toTruncate.substring(0, len);\n    }\n\n    return toTruncate;\n  }\n\n  function pad(padding, toPad) {\n    var len;\n    if (padding) {\n      if (padding.charAt(0) == \"-\") {\n        len = parseInt(padding.substr(1), 10);\n        // Right pad with spaces\n        while (toPad.length < len) {\n          toPad += \" \";\n        }\n      } else {\n        len = parseInt(padding, 10);\n        // Left pad with spaces\n        while (toPad.length < len) {\n          toPad = \" \" + toPad;\n        }\n      }\n    }\n    return toPad;\n  }\n  \n  return function(loggingEvent) {\n    var formattedString = \"\";\n    var result;\n    var searchString = pattern;\n    \n    while ((result = regex.exec(searchString))) {\n      var matchedString = result[0];\n      var padding = result[1];\n      var truncation = result[2];\n      var conversionCharacter = result[3];\n      var specifier = result[5];\n      var text = result[6];\n      \n      // Check if the pattern matched was just normal text\n      if (text) {\n        formattedString += \"\" + text;\n      } else {\n        // Create a raw replacement string based on the conversion\n        // character and specifier\n        var replacement = replaceToken(conversionCharacter, loggingEvent, specifier);\n\n        // Format the replacement according to any padding or\n        // truncation specified\n        replacement = truncate(truncation, replacement);\n        replacement = pad(padding, replacement);\n        formattedString += replacement;\n      }\n      searchString = searchString.substr(result.index + result[0].length);\n    }\n    return formattedString;\n  };\n\n}\n\nmodule.exports = {\n  basicLayout: basicLayout, \n  messagePassThroughLayout: messagePassThroughLayout, \n  patternLayout: patternLayout, \n  colouredLayout: colouredLayout, \n  coloredLayout: colouredLayout, \n  addLayout: function(name, serializerGenerator) {\n    layoutMakers[name] = serializerGenerator;\n  },\n  layout: function(name, config) {\n    return layoutMakers[name] && layoutMakers[name](config);\n  }\n};\n"]}