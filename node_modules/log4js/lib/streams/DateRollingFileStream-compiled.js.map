{"version":3,"sources":["DateRollingFileStream.js"],"names":[],"mappings":"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","file":"DateRollingFileStream-compiled.js","sourcesContent":["\"use strict\";\nvar BaseRollingFileStream = require('./BaseRollingFileStream')\n, debug = require('../debug')('DateRollingFileStream')\n, format = require('../date_format')\n, async = require('async')\n, fs = require('fs')\n, util = require('util');\n\nmodule.exports = DateRollingFileStream;\n\nfunction DateRollingFileStream(filename, pattern, options, now) {\n  debug(\"Now is \" + now);\n  if (pattern && typeof(pattern) === 'object') {\n    now = options;\n    options = pattern;\n    pattern = null;\n  }\n  this.pattern = pattern || '.yyyy-MM-dd';\n  this.now = now || Date.now;\n\n  if (fs.existsSync(filename)) {\n    var stat = fs.statSync(filename);\n    this.lastTimeWeWroteSomething = format.asString(this.pattern, stat.mtime);\n  } else {\n    this.lastTimeWeWroteSomething = format.asString(this.pattern, new Date(this.now()));\n  }\n\n  this.baseFilename = filename;\n  this.alwaysIncludePattern = false;\n  \n  if (options) {\n    if (options.alwaysIncludePattern) {\n      this.alwaysIncludePattern = true;\n      filename = this.baseFilename + this.lastTimeWeWroteSomething;\n    }\n    delete options.alwaysIncludePattern;\n    if (Object.keys(options).length === 0) { \n      options = null; \n    }\n  }\n  debug(\"this.now is \" + this.now + \", now is \" + now);\n  \n  DateRollingFileStream.super_.call(this, filename, options);\n}\nutil.inherits(DateRollingFileStream, BaseRollingFileStream);\n\nDateRollingFileStream.prototype.shouldRoll = function() {\n  var lastTime = this.lastTimeWeWroteSomething,\n  thisTime = format.asString(this.pattern, new Date(this.now()));\n  \n  debug(\"DateRollingFileStream.shouldRoll with now = \" + \n        this.now() + \", thisTime = \" + thisTime + \", lastTime = \" + lastTime);\n  \n  this.lastTimeWeWroteSomething = thisTime;\n  this.previousTime = lastTime;\n  \n  return thisTime !== lastTime;\n};\n\nDateRollingFileStream.prototype.roll = function(filename, callback) {\n  var that = this;\n  \n  debug(\"Starting roll\");\n  \n  if (this.alwaysIncludePattern) {\n    this.filename = this.baseFilename + this.lastTimeWeWroteSomething;\n    async.series([\n      this.closeTheStream.bind(this),\n      this.openTheStream.bind(this)\n    ], callback);\n  } else {\n    var newFilename = this.baseFilename + this.previousTime;\n    async.series([\n      this.closeTheStream.bind(this),\n      deleteAnyExistingFile,\n      renameTheCurrentFile,\n      this.openTheStream.bind(this)\n    ], callback);\n  }\n  \n  function deleteAnyExistingFile(cb) {\n    //on windows, you can get a EEXIST error if you rename a file to an existing file\n    //so, we'll try to delete the file we're renaming to first\n    fs.unlink(newFilename, function (err) {\n      //ignore err: if we could not delete, it's most likely that it doesn't exist\n      cb();\n    });\n  }\n\n  function renameTheCurrentFile(cb) {\n    debug(\"Renaming the \" + filename + \" -> \" + newFilename);\n    fs.rename(filename, newFilename, cb);\n  }\n\n};\n"]}