{"version":3,"sources":["RollingFileStream.js"],"names":[],"mappings":"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","file":"RollingFileStream-compiled.js","sourcesContent":["\"use strict\";\nvar BaseRollingFileStream = require('./BaseRollingFileStream')\n, debug = require('../debug')('RollingFileStream')\n, util = require('util')\n, path = require('path')\n, child_process = require('child_process')\n, zlib = require(\"zlib\")\n, fs = require('fs')\n, async = require('async');\n\nmodule.exports = RollingFileStream;\n\nfunction RollingFileStream (filename, size, backups, options) {\n  this.size = size;\n  this.backups = backups || 1;\n  \n  function throwErrorIfArgumentsAreNotValid() {\n    if (!filename || !size || size <= 0) {\n      throw new Error(\"You must specify a filename and file size\");\n    }\n  }\n  \n  throwErrorIfArgumentsAreNotValid();\n  \n  RollingFileStream.super_.call(this, filename, options);\n}\nutil.inherits(RollingFileStream, BaseRollingFileStream);\n\nRollingFileStream.prototype.shouldRoll = function() {\n  debug(\"should roll with current size \" + this.currentSize + \" and max size \" + this.size);\n  return this.currentSize >= this.size;\n};\n\nRollingFileStream.prototype.roll = function(filename, callback) {\n  var that = this,\n  nameMatcher = new RegExp('^' + path.basename(filename));\n  \n  function justTheseFiles (item) {\n    return nameMatcher.test(item);\n  }\n  \n  function index(filename_) {\n    debug('Calculating index of '+filename_);\n    return parseInt(filename_.substring((path.basename(filename) + '.').length), 10) || 0;\n  }\n  \n  function byIndex(a, b) {\n    if (index(a) > index(b)) {\n      return 1;\n    } else if (index(a) < index(b) ) {\n      return -1;\n    } else {\n      return 0;\n    }\n  }\n\n  function compress (filename, cb) {\n\n    var gzip = zlib.createGzip();\n    var inp = fs.createReadStream(filename);\n    var out = fs.createWriteStream(filename+\".gz\");\n    inp.pipe(gzip).pipe(out);\n    fs.unlink(filename, cb);\n\n  }\n\n  function increaseFileIndex (fileToRename, cb) {\n    var idx = index(fileToRename);\n    debug('Index of ' + fileToRename + ' is ' + idx);\n    if (idx < that.backups) {\n\n      var ext = path.extname(fileToRename);\n      var destination = filename + '.' + (idx+1);\n      if (that.options.compress && /^gz$/.test(ext.substring(1))) {\n        destination+=ext;\n      }\n      //on windows, you can get a EEXIST error if you rename a file to an existing file\n      //so, we'll try to delete the file we're renaming to first\n      fs.unlink(destination, function (err) {\n        //ignore err: if we could not delete, it's most likely that it doesn't exist\n        debug('Renaming ' + fileToRename + ' -> ' + destination);\n        fs.rename(path.join(path.dirname(filename), fileToRename), destination, function(err) {\n          if (err) {\n            cb(err);\n          } else {\n            if (that.options.compress && ext!=\".gz\") {\n              compress(destination, cb);\n            } else {\n              cb();\n            }\n          }\n        });\n      });\n    } else {\n      cb();\n    }\n  }\n\n  function renameTheFiles(cb) {\n    //roll the backups (rename file.n to file.n+1, where n <= numBackups)\n    debug(\"Renaming the old files\");\n    fs.readdir(path.dirname(filename), function (err, files) {\n      async.eachSeries(\n        files.filter(justTheseFiles).sort(byIndex).reverse(),\n        increaseFileIndex,\n        cb\n      );\n    });\n  }\n\n  debug(\"Rolling, rolling, rolling\");\n  async.series([\n    this.closeTheStream.bind(this),\n    renameTheFiles,\n    this.openTheStream.bind(this)\n  ], callback);\n\n};\n"]}