{"version":3,"sources":["dateFileAppender-test.js"],"names":[],"mappings":"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","file":"dateFileAppender-test-compiled.js","sourcesContent":["\"use strict\";\nvar vows = require('vows')\n, assert = require('assert')\n, path = require('path')\n, fs = require('fs')\n, sandbox = require('sandboxed-module')\n, log4js = require('../lib/log4js')\n, EOL = require('os').EOL || '\\n';\n\nfunction removeFile(filename) {\n  return function() {\n    fs.unlink(path.join(__dirname, filename), function(err) {\n      if (err) {\n        console.log(\"Could not delete \", filename, err);\n      }\n    });\n  };\n}\n\nvows.describe('../lib/appenders/dateFile').addBatch({\n  'appender': {\n    'adding multiple dateFileAppenders': {\n      topic: function () {\n        var listenersCount = process.listeners('exit').length,\n        dateFileAppender = require('../lib/appenders/dateFile'),\n        count = 5,\n        logfile;\n        \n        while (count--) {\n          logfile = path.join(__dirname, 'datefa-default-test' + count + '.log');\n          log4js.addAppender(dateFileAppender.appender(logfile));\n        }\n        \n        return listenersCount;\n      },\n      teardown: function() {\n        removeFile('datefa-default-test0.log')();\n        removeFile('datefa-default-test1.log')();\n        removeFile('datefa-default-test2.log')();\n        removeFile('datefa-default-test3.log')();\n        removeFile('datefa-default-test4.log')();\n      },\n      \n      'should only add one `exit` listener': function (initialCount) {\n        assert.equal(process.listeners('exit').length, initialCount + 1);\n      },\n\n    },\n\n    'exit listener': {\n      topic: function() {\n        var exitListener\n        , openedFiles = []\n        , dateFileAppender = sandbox.require(\n          '../lib/appenders/dateFile',\n          {\n            globals: {\n              process: {\n                on: function(evt, listener) {\n                  exitListener = listener;\n                }\n              }\n            },\n            requires: {\n              '../streams': {\n                DateRollingFileStream: function(filename) {\n                  openedFiles.push(filename);\n\n                  this.end = function() {\n                    openedFiles.shift();\n                  };\n                }\n              }\n            }   \n          }\n        );\n        for (var i=0; i < 5; i += 1) {\n          dateFileAppender.appender('test' + i);\n        }\n        assert.isNotEmpty(openedFiles);\n        exitListener();\n        return openedFiles;\n      },\n      'should close all open files': function(openedFiles) {\n        assert.isEmpty(openedFiles);\n      }\n    },\n    \n    'with default settings': {\n      topic: function() {\n        var that = this,\n        testFile = path.join(__dirname, 'date-appender-default.log'),\n        appender = require('../lib/appenders/dateFile').appender(testFile),\n        logger = log4js.getLogger('default-settings');\n        log4js.clearAppenders();\n        log4js.addAppender(appender, 'default-settings');\n        \n        logger.info(\"This should be in the file.\");\n        \n        setTimeout(function() {\n          fs.readFile(testFile, \"utf8\", that.callback);\n        }, 100);\n        \n      },\n      teardown: removeFile('date-appender-default.log'),\n      \n      'should write to the file': function(contents) {\n        assert.include(contents, 'This should be in the file');\n      },\n      \n      'should use the basic layout': function(contents) {\n        assert.match(\n          contents, \n            /\\[\\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2}:\\d{2}\\.\\d{3}\\] \\[INFO\\] default-settings - /\n        );\n      }\n    }\n    \n  }\n}).addBatch({\n  'configure': {\n    'with dateFileAppender': {\n      topic: function() {\n        var log4js = require('../lib/log4js')\n        , logger;\n        //this config file defines one file appender (to ./date-file-test.log)\n        //and sets the log level for \"tests\" to WARN\n        log4js.configure('test/with-dateFile.json');\n        logger = log4js.getLogger('tests');\n        logger.info('this should not be written to the file');\n        logger.warn('this should be written to the file');\n        \n        fs.readFile(path.join(__dirname, 'date-file-test.log'), 'utf8', this.callback);\n      },\n      teardown: removeFile('date-file-test.log'),\n      \n      'should load appender configuration from a json file': function(err, contents) {\n        if (err) {\n          throw err;\n        }\n        assert.include(contents, 'this should be written to the file' + EOL);\n        assert.equal(contents.indexOf('this should not be written to the file'), -1);\n      }\n    },\n    'with options.alwaysIncludePattern': {\n      topic: function() {\n        var self = this\n        , log4js = require('../lib/log4js')\n        , format = require('../lib/date_format')\n        , logger\n        , options = {\n          \"appenders\": [\n            {\n              \"category\": \"tests\", \n              \"type\": \"dateFile\", \n              \"filename\": \"test/date-file-test\",\n              \"pattern\": \"-from-MM-dd.log\",\n              \"alwaysIncludePattern\": true,\n              \"layout\": { \n                \"type\": \"messagePassThrough\" \n              }\n            }\n          ]\n        }\n        , thisTime = format.asString(options.appenders[0].pattern, new Date());\n        fs.writeFileSync(\n          path.join(__dirname, 'date-file-test' + thisTime), \n          \"this is existing data\" + EOL,\n          'utf8'\n        );\n        log4js.clearAppenders();\n        log4js.configure(options);\n        logger = log4js.getLogger('tests');\n        logger.warn('this should be written to the file with the appended date');\n        this.teardown = removeFile('date-file-test' + thisTime);\n        //wait for filesystem to catch up\n        setTimeout(function() {\n          fs.readFile(path.join(__dirname, 'date-file-test' + thisTime), 'utf8', self.callback);\n        }, 100);\n      },\n      'should create file with the correct pattern': function(contents) {\n        assert.include(contents, 'this should be written to the file with the appended date');\n      },\n      'should not overwrite the file on open (bug found in issue #132)': function(contents) {\n        assert.include(contents, 'this is existing data');\n      }\n    },\n    'with cwd option': {\n      topic: function () {\n        var fileOpened,\n        appender = sandbox.require(\n          '../lib/appenders/dateFile',\n          { requires:\n            { '../streams':\n              { DateRollingFileStream: \n                function(file) {\n                  fileOpened = file;\n                  return {\n                    on: function() {},\n                    end: function() {}\n                  };\n                }\n              }\n            }\n          }\n        );\n        appender.configure(\n          { \n            filename: \"whatever.log\", \n            maxLogSize: 10 \n          }, \n          { cwd: '/absolute/path/to' }\n        );\n        return fileOpened;\n      },\n      'should prepend options.cwd to config.filename': function (fileOpened) {\n        var expected = path.sep + path.join(\"absolute\", \"path\", \"to\", \"whatever.log\");\n        assert.equal(fileOpened, expected);\n      }\n    }\n \n  }\n}).exportTo(module);\n"]}