{"version":3,"sources":["fileAppender-test.js"],"names":[],"mappings":"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","file":"fileAppender-test-compiled.js","sourcesContent":["\"use strict\";\nvar vows = require('vows')\n, fs = require('fs')\n, path = require('path')\n, sandbox = require('sandboxed-module')\n, log4js = require('../lib/log4js')\n, assert = require('assert')\n, zlib = require('zlib')\n, EOL = require('os').EOL || '\\n';\n\nlog4js.clearAppenders();\n\nfunction remove(filename) {\n  try {\n    fs.unlinkSync(filename);\n  } catch (e) {\n    //doesn't really matter if it failed\n  }\n}\n\nvows.describe('log4js fileAppender').addBatch({\n  'adding multiple fileAppenders': {\n    topic: function () {\n      var listenersCount = process.listeners('exit').length\n      , logger = log4js.getLogger('default-settings')\n      , count = 5, logfile;\n      \n      while (count--) {\n        logfile = path.join(__dirname, '/fa-default-test' + count + '.log');\n        log4js.addAppender(require('../lib/appenders/file').appender(logfile), 'default-settings');\n      }\n      \n      return listenersCount;\n    },\n    \n    'does not add more than one `exit` listeners': function (initialCount) {\n      assert.ok(process.listeners('exit').length <= initialCount + 1);\n    }\n  },\n\n  'exit listener': {\n    topic: function() {\n      var exitListener\n      , openedFiles = []\n      , fileAppender = sandbox.require(\n        '../lib/appenders/file',\n        {\n          globals: {\n            process: {\n              on: function(evt, listener) {\n                exitListener = listener;\n              }\n            }\n          },\n          requires: {\n            '../streams': {\n              RollingFileStream: function(filename) {\n                openedFiles.push(filename);\n                \n                this.end = function() {\n                  openedFiles.shift();\n                };\n\n                this.on = function() {};\n              }\n            }\n          }   \n        }\n      );\n      for (var i=0; i < 5; i += 1) {\n        fileAppender.appender('test' + i, null, 100);\n      }\n      assert.isNotEmpty(openedFiles);\n      exitListener();\n      return openedFiles;\n    },\n    'should close all open files': function(openedFiles) {\n      assert.isEmpty(openedFiles);\n    }\n  },\n  \n  'with default fileAppender settings': {\n    topic: function() {\n      var that = this\n      , testFile = path.join(__dirname, '/fa-default-test.log')\n      , logger = log4js.getLogger('default-settings');\n      remove(testFile);\n\n      log4js.clearAppenders();\n      log4js.addAppender(require('../lib/appenders/file').appender(testFile), 'default-settings');\n      \n      logger.info(\"This should be in the file.\");\n      \n      setTimeout(function() {\n        fs.readFile(testFile, \"utf8\", that.callback);\n      }, 100);\n    },\n    'should write log messages to the file': function (err, fileContents) {\n      assert.include(fileContents, \"This should be in the file.\" + EOL);\n    },\n    'log messages should be in the basic layout format': function(err, fileContents) {\n      assert.match(\n        fileContents, \n          /\\[\\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2}:\\d{2}\\.\\d{3}\\] \\[INFO\\] default-settings - /\n      );\n    }\n  },\n  'fileAppender subcategories': {\n    topic: function() {\n      var that = this;\n\n      log4js.clearAppenders();\n\n      function addAppender(cat) {\n        var testFile = path.join(__dirname, '/fa-subcategories-test-'+cat.join('-').replace(/\\./g, \"_\")+'.log');\n        remove(testFile);\n        log4js.addAppender(require('../lib/appenders/file').appender(testFile), cat);\n        return testFile;\n      }\n\n      var file_sub1 = addAppender([ 'sub1']);\n      \n      var file_sub1_sub12$sub1_sub13 = addAppender([ 'sub1.sub12', 'sub1.sub13' ]);\n      \n      var file_sub1_sub12 = addAppender([ 'sub1.sub12' ]);\n\n      \n      var logger_sub1_sub12_sub123 = log4js.getLogger('sub1.sub12.sub123');\n      \n      var logger_sub1_sub13_sub133 = log4js.getLogger('sub1.sub13.sub133');\n\n      var logger_sub1_sub14 = log4js.getLogger('sub1.sub14');\n\n      var logger_sub2 = log4js.getLogger('sub2');\n      \n\n      logger_sub1_sub12_sub123.info('sub1_sub12_sub123');\n      \n      logger_sub1_sub13_sub133.info('sub1_sub13_sub133');\n\n      logger_sub1_sub14.info('sub1_sub14');\n\n      logger_sub2.info('sub2');\n           \n      \n      setTimeout(function() {\n        that.callback(null, {\n          file_sub1: fs.readFileSync(file_sub1).toString(),\n          file_sub1_sub12$sub1_sub13: fs.readFileSync(file_sub1_sub12$sub1_sub13).toString(),\n          file_sub1_sub12: fs.readFileSync(file_sub1_sub12).toString()\n        });        \n      }, 3000);\n    },\n    'check file contents': function (err, fileContents) {\n\n      // everything but category 'sub2'\n      assert.match(fileContents.file_sub1, /^(\\[\\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2}:\\d{2}\\.\\d{3}\\] \\[INFO\\] (sub1.sub12.sub123 - sub1_sub12_sub123|sub1.sub13.sub133 - sub1_sub13_sub133|sub1.sub14 - sub1_sub14)[\\s\\S]){3}$/);\n      assert.ok(fileContents.file_sub1.match(/sub123/) && fileContents.file_sub1.match(/sub133/) && fileContents.file_sub1.match(/sub14/));\n      assert.ok(!fileContents.file_sub1.match(/sub2/));\n\n      // only catgories starting with 'sub1.sub12' and 'sub1.sub13'\n      assert.match(fileContents.file_sub1_sub12$sub1_sub13, /^(\\[\\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2}:\\d{2}\\.\\d{3}\\] \\[INFO\\] (sub1.sub12.sub123 - sub1_sub12_sub123|sub1.sub13.sub133 - sub1_sub13_sub133)[\\s\\S]){2}$/);\n      assert.ok(fileContents.file_sub1_sub12$sub1_sub13.match(/sub123/) && fileContents.file_sub1_sub12$sub1_sub13.match(/sub133/));\n      assert.ok(!fileContents.file_sub1_sub12$sub1_sub13.match(/sub14|sub2/));\n\n      // only catgories starting with 'sub1.sub12'\n      assert.match(fileContents.file_sub1_sub12, /^(\\[\\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2}:\\d{2}\\.\\d{3}\\] \\[INFO\\] (sub1.sub12.sub123 - sub1_sub12_sub123)[\\s\\S]){1}$/);\n      assert.ok(!fileContents.file_sub1_sub12.match(/sub14|sub2|sub13/));\n\n    }\n  },\n  'with a max file size and no backups': {\n    topic: function() {\n      var testFile = path.join(__dirname, '/fa-maxFileSize-test.log')\n      , logger = log4js.getLogger('max-file-size')\n      , that = this;\n      remove(testFile);\n      remove(testFile + '.1');\n      //log file of 100 bytes maximum, no backups\n      log4js.clearAppenders();\n      log4js.addAppender(\n        require('../lib/appenders/file').appender(testFile, log4js.layouts.basicLayout, 100, 0), \n        'max-file-size'\n      );\n      logger.info(\"This is the first log message.\");\n      logger.info(\"This is an intermediate log message.\");\n      logger.info(\"This is the second log message.\");\n      //wait for the file system to catch up\n      setTimeout(function() {\n        fs.readFile(testFile, \"utf8\", that.callback);\n      }, 100);\n    },\n    'log file should only contain the second message': function(err, fileContents) {\n      assert.include(fileContents, \"This is the second log message.\");\n      assert.equal(fileContents.indexOf(\"This is the first log message.\"), -1);\n    },\n    'the number of files': {\n      topic: function() {\n        fs.readdir(__dirname, this.callback);\n      },\n      'starting with the test file name should be two': function(err, files) {\n        //there will always be one backup if you've specified a max log size\n        var logFiles = files.filter(\n          function(file) { return file.indexOf('fa-maxFileSize-test.log') > -1; }\n        );\n        assert.equal(logFiles.length, 2);\n      }\n    }\n  },\n  'with a max file size and 2 backups': {\n    topic: function() {\n      var testFile = path.join(__dirname, '/fa-maxFileSize-with-backups-test.log')\n      , logger = log4js.getLogger('max-file-size-backups');\n      remove(testFile);\n      remove(testFile+'.1');\n      remove(testFile+'.2');\n      \n      //log file of 50 bytes maximum, 2 backups\n      log4js.clearAppenders();\n      log4js.addAppender(\n        require('../lib/appenders/file').appender(testFile, log4js.layouts.basicLayout, 50, 2), \n        'max-file-size-backups'\n      );\n      logger.info(\"This is the first log message.\");\n      logger.info(\"This is the second log message.\");\n      logger.info(\"This is the third log message.\");\n      logger.info(\"This is the fourth log message.\");\n      var that = this;\n      //give the system a chance to open the stream\n      setTimeout(function() {\n        fs.readdir(__dirname, function(err, files) { \n          if (files) { \n            that.callback(null, files.sort()); \n          } else { \n            that.callback(err, files); \n          }\n        });\n      }, 200);\n    },\n    'the log files': {\n      topic: function(files) {\n        var logFiles = files.filter(\n          function(file) { return file.indexOf('fa-maxFileSize-with-backups-test.log') > -1; }\n        );\n        return logFiles;\n      },\n      'should be 3': function (files) {\n        assert.equal(files.length, 3);\n      },\n      'should be named in sequence': function (files) {\n        assert.deepEqual(files, [\n          'fa-maxFileSize-with-backups-test.log', \n          'fa-maxFileSize-with-backups-test.log.1', \n          'fa-maxFileSize-with-backups-test.log.2'\n        ]);\n      },\n      'and the contents of the first file': {\n        topic: function(logFiles) {\n          fs.readFile(path.join(__dirname, logFiles[0]), \"utf8\", this.callback);\n        },\n        'should be the last log message': function(contents) {\n          assert.include(contents, 'This is the fourth log message.');\n        }\n      },\n      'and the contents of the second file': {\n        topic: function(logFiles) {\n          fs.readFile(path.join(__dirname, logFiles[1]), \"utf8\", this.callback);\n        },\n        'should be the third log message': function(contents) {\n          assert.include(contents, 'This is the third log message.');\n        }\n      },\n      'and the contents of the third file': {\n        topic: function(logFiles) {\n          fs.readFile(path.join(__dirname, logFiles[2]), \"utf8\", this.callback);\n        },\n        'should be the second log message': function(contents) {\n          assert.include(contents, 'This is the second log message.');\n        }\n      }\n    }\n  },\n  'with a max file size and 2 compressed backups': {\n    topic: function() {\n      var testFile = path.join(__dirname, '/fa-maxFileSize-with-backups-compressed-test.log')\n      , logger = log4js.getLogger('max-file-size-backups');\n      remove(testFile);\n      remove(testFile+'.1.gz');\n      remove(testFile+'.2.gz');\n      \n      //log file of 50 bytes maximum, 2 backups\n      log4js.clearAppenders();\n      log4js.addAppender(\n        require('../lib/appenders/file').appender(testFile, log4js.layouts.basicLayout, 50, 2, true), \n        'max-file-size-backups'\n      );\n      logger.info(\"This is the first log message.\");\n      logger.info(\"This is the second log message.\");\n      logger.info(\"This is the third log message.\");\n      logger.info(\"This is the fourth log message.\");\n      var that = this;\n      //give the system a chance to open the stream\n      setTimeout(function() {\n        fs.readdir(__dirname, function(err, files) { \n          if (files) { \n            that.callback(null, files.sort()); \n          } else { \n            that.callback(err, files); \n          }\n        });\n      }, 1000);\n    },\n    'the log files': {\n      topic: function(files) {\n        var logFiles = files.filter(\n          function(file) { return file.indexOf('fa-maxFileSize-with-backups-compressed-test.log') > -1; }\n        );\n        return logFiles;\n      },\n      'should be 3': function (files) {\n        assert.equal(files.length, 3);\n      },\n      'should be named in sequence': function (files) {\n        assert.deepEqual(files, [\n          'fa-maxFileSize-with-backups-compressed-test.log', \n          'fa-maxFileSize-with-backups-compressed-test.log.1.gz', \n          'fa-maxFileSize-with-backups-compressed-test.log.2.gz'\n        ]);\n      },\n      'and the contents of the first file': {\n        topic: function(logFiles) {\n          fs.readFile(path.join(__dirname, logFiles[0]), \"utf8\", this.callback);\n        },\n        'should be the last log message': function(contents) {\n          assert.include(contents, 'This is the fourth log message.');\n        }\n      },\n      'and the contents of the second file': {\n        topic: function(logFiles) {\n          zlib.gunzip(fs.readFileSync(path.join(__dirname, logFiles[1])), this.callback);\n        },\n        'should be the third log message': function(contents) {\n          assert.include(contents.toString('utf8'), 'This is the third log message.');\n        }\n      },\n      'and the contents of the third file': {\n        topic: function(logFiles) {\n          zlib.gunzip(fs.readFileSync(path.join(__dirname, logFiles[2])), this.callback);\n        },\n        'should be the second log message': function(contents) {\n          assert.include(contents.toString('utf8'), 'This is the second log message.');\n        }\n      }\n    }\n  }\n}).addBatch({\n  'configure' : {\n    'with fileAppender': {\n      topic: function() {\n        var log4js = require('../lib/log4js')\n        , logger;\n        //this config file defines one file appender (to ./tmp-tests.log)\n        //and sets the log level for \"tests\" to WARN\n        log4js.configure('./test/log4js.json');\n        logger = log4js.getLogger('tests');\n        logger.info('this should not be written to the file');\n        logger.warn('this should be written to the file');\n        \n        fs.readFile('tmp-tests.log', 'utf8', this.callback);\n      },\n      'should load appender configuration from a json file': function (err, contents) {\n        assert.include(contents, 'this should be written to the file' + EOL);\n        assert.equal(contents.indexOf('this should not be written to the file'), -1);\n      }\n    }\n  }\n}).addBatch({\n  'when underlying stream errors': {\n    topic: function() {\n      var consoleArgs\n      , errorHandler\n      , fileAppender = sandbox.require(\n        '../lib/appenders/file',\n        {\n          globals: {\n            console: {\n              error: function() {\n                consoleArgs = Array.prototype.slice.call(arguments);\n              }\n            }\n          },\n          requires: {\n            '../streams': {\n              RollingFileStream: function(filename) {\n                \n                this.end = function() {};\n                this.on = function(evt, cb) {\n                  if (evt === 'error') {\n                    errorHandler = cb;\n                  }\n                };\n              }\n            }\n          }   \n        }\n      );\n      fileAppender.appender('test1.log', null, 100);\n      errorHandler({ error: 'aargh' });\n      return consoleArgs;\n    },\n    'should log the error to console.error': function(consoleArgs) {\n      assert.isNotEmpty(consoleArgs);\n      assert.equal(consoleArgs[0], 'log4js.fileAppender - Writing to file %s, error happened ');\n      assert.equal(consoleArgs[1], 'test1.log');\n      assert.equal(consoleArgs[2].error, 'aargh');\n    }\n  }\n\n}).export(module);\n"]}