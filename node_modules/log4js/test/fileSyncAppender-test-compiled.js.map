{"version":3,"sources":["fileSyncAppender-test.js"],"names":[],"mappings":"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","file":"fileSyncAppender-test-compiled.js","sourcesContent":["\"use strict\";\nvar vows = require('vows')\n, fs = require('fs')\n, path = require('path')\n, sandbox = require('sandboxed-module')\n, log4js = require('../lib/log4js')\n, assert = require('assert')\n, EOL = require('os').EOL || '\\n';\n\nlog4js.clearAppenders();\n\nfunction remove(filename) {\n  try {\n    fs.unlinkSync(filename);\n  } catch (e) {\n    //doesn't really matter if it failed\n  }\n}\n\nvows.describe('log4js fileSyncAppender').addBatch({\n  'with default fileSyncAppender settings': {\n    topic: function() {\n      var that = this\n      , testFile = path.join(__dirname, '/fa-default-sync-test.log')\n      , logger = log4js.getLogger('default-settings');\n      remove(testFile);\n\n      log4js.clearAppenders();\n      log4js.addAppender(require('../lib/appenders/fileSync').appender(testFile), 'default-settings');\n      \n      logger.info(\"This should be in the file.\");\n      \n      fs.readFile(testFile, \"utf8\", that.callback);\n    },\n    'should write log messages to the file': function (err, fileContents) {\n      assert.include(fileContents, \"This should be in the file.\" + EOL);\n    },\n    'log messages should be in the basic layout format': function(err, fileContents) {\n      assert.match(\n        fileContents, \n          /\\[\\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2}:\\d{2}\\.\\d{3}\\] \\[INFO\\] default-settings - /\n      );\n    }\n  },\n  'with a max file size and no backups': {\n    topic: function() {\n      var testFile = path.join(__dirname, '/fa-maxFileSize-sync-test.log')\n      , logger = log4js.getLogger('max-file-size')\n      , that = this;\n      remove(testFile);\n      remove(testFile + '.1');\n      //log file of 100 bytes maximum, no backups\n      log4js.clearAppenders();\n      log4js.addAppender(\n        require('../lib/appenders/fileSync').appender(testFile, log4js.layouts.basicLayout, 100, 0), \n        'max-file-size'\n      );\n      logger.info(\"This is the first log message.\");\n      logger.info(\"This is an intermediate log message.\");\n      logger.info(\"This is the second log message.\");\n\n      fs.readFile(testFile, \"utf8\", that.callback);\n    },\n    'log file should only contain the second message': function (err, fileContents) {\n      assert.include(fileContents, \"This is the second log message.\" + EOL);\n      assert.equal(fileContents.indexOf(\"This is the first log message.\"), -1);\n    },\n    'the number of files': {\n      topic: function() {\n        fs.readdir(__dirname, this.callback);\n      },\n      'starting with the test file name should be two': function(err, files) {\n        //there will always be one backup if you've specified a max log size\n        var logFiles = files.filter(\n          function(file) { return file.indexOf('fa-maxFileSize-sync-test.log') > -1; }\n        );\n        assert.equal(logFiles.length, 2);\n      }\n    }\n  },\n  'with a max file size and 2 backups': {\n    topic: function() {\n      var testFile = path.join(__dirname, '/fa-maxFileSize-with-backups-sync-test.log')\n      , logger = log4js.getLogger('max-file-size-backups');\n      remove(testFile);\n      remove(testFile+'.1');\n      remove(testFile+'.2');\n      \n      //log file of 50 bytes maximum, 2 backups\n      log4js.clearAppenders();\n      log4js.addAppender(\n        require('../lib/appenders/fileSync').appender(testFile, log4js.layouts.basicLayout, 50, 2), \n        'max-file-size-backups'\n      );\n      logger.info(\"This is the first log message.\");\n      logger.info(\"This is the second log message.\");\n      logger.info(\"This is the third log message.\");\n      logger.info(\"This is the fourth log message.\");\n      var that = this;\n      \n      fs.readdir(__dirname, function(err, files) { \n        if (files) { \n          that.callback(null, files.sort()); \n        } else { \n          that.callback(err, files); \n        }\n      });\n    },\n    'the log files': {\n      topic: function(files) {\n        var logFiles = files.filter(\n          function(file) { return file.indexOf('fa-maxFileSize-with-backups-sync-test.log') > -1; }\n        );\n        return logFiles;\n      },\n      'should be 3': function (files) {\n        assert.equal(files.length, 3);\n      },\n      'should be named in sequence': function (files) {\n        assert.deepEqual(files, [\n          'fa-maxFileSize-with-backups-sync-test.log', \n          'fa-maxFileSize-with-backups-sync-test.log.1', \n          'fa-maxFileSize-with-backups-sync-test.log.2'\n        ]);\n      },\n      'and the contents of the first file': {\n        topic: function(logFiles) {\n          fs.readFile(path.join(__dirname, logFiles[0]), \"utf8\", this.callback);\n        },\n        'should be the last log message': function(contents) {\n          assert.include(contents, 'This is the fourth log message.');\n        }\n      },\n      'and the contents of the second file': {\n        topic: function(logFiles) {\n          fs.readFile(path.join(__dirname, logFiles[1]), \"utf8\", this.callback);\n        },\n        'should be the third log message': function(contents) {\n          assert.include(contents, 'This is the third log message.');\n        }\n      },\n      'and the contents of the third file': {\n        topic: function(logFiles) {\n          fs.readFile(path.join(__dirname, logFiles[2]), \"utf8\", this.callback);\n        },\n        'should be the second log message': function(contents) {\n          assert.include(contents, 'This is the second log message.');\n        }\n      }\n    }\n  }\n}).addBatch({\n  'configure' : {\n    'with fileSyncAppender': {\n      topic: function() {\n        var log4js = require('../lib/log4js')\n        , logger;\n        //this config defines one file appender (to ./tmp-sync-tests.log)\n        //and sets the log level for \"tests\" to WARN\n        log4js.configure({\n            appenders: [{ \n                category: \"tests\", \n                type: \"file\", \n                filename: \"tmp-sync-tests.log\", \n                layout: { type: \"messagePassThrough\" } \n            }],\n  \n            levels: { tests:  \"WARN\" }\n        });\n        logger = log4js.getLogger('tests');\n        logger.info('this should not be written to the file');\n        logger.warn('this should be written to the file');\n        \n        fs.readFile('tmp-sync-tests.log', 'utf8', this.callback);\n      },\n      'should load appender configuration from a json file': function(err, contents) {\n        assert.include(contents, 'this should be written to the file' + EOL);\n        assert.equal(contents.indexOf('this should not be written to the file'), -1);\n      }\n    }\n  }\n}).export(module);\n"]}