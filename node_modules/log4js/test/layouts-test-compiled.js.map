{"version":3,"sources":["layouts-test.js"],"names":[],"mappings":"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","file":"layouts-test-compiled.js","sourcesContent":["\"use strict\";\nvar vows = require('vows')\n, assert = require('assert')\n, os =  require('os')\n, EOL = os.EOL || '\\n';\n\n//used for patternLayout tests.\nfunction test(args, pattern, value) {\n  var layout = args[0]\n  , event = args[1]\n  , tokens = args[2];\n\n  assert.equal(layout(pattern, tokens)(event), value);\n}\n\nvows.describe('log4js layouts').addBatch({\n  'colouredLayout': {\n    topic: function() {\n      return require('../lib/layouts').colouredLayout;\n    },\n\n    'should apply level colour codes to output': function(layout) {\n      var output = layout({\n        data: [\"nonsense\"],\n        startTime: new Date(2010, 11, 5, 14, 18, 30, 45),\n        categoryName: \"cheese\",\n        level: {\n          toString: function() { return \"ERROR\"; }\n        }\n      });\n      assert.equal(output, '\\x1B[31m[2010-12-05 14:18:30.045] [ERROR] cheese - \\x1B[39mnonsense');\n    },\n    'should support the console.log format for the message': function(layout) {\n      var output = layout({\n        data: [\"thing %d\", 2],\n        startTime: new Date(2010, 11, 5, 14, 18, 30, 45),\n        categoryName: \"cheese\",\n        level: {\n          toString: function() { return \"ERROR\"; }\n        }\n      });\n      assert.equal(output, '\\x1B[31m[2010-12-05 14:18:30.045] [ERROR] cheese - \\x1B[39mthing 2');\n    }\n  },\n\n  'messagePassThroughLayout': {\n    topic: function() {\n      return require('../lib/layouts').messagePassThroughLayout;\n    },\n    'should take a logevent and output only the message' : function(layout) {\n      assert.equal(layout({\n        data: [\"nonsense\"],\n        startTime: new Date(2010, 11, 5, 14, 18, 30, 45),\n        categoryName: \"cheese\",\n        level: {\n          colour: \"green\",\n          toString: function() { return \"ERROR\"; }\n        }\n      }), \"nonsense\");\n    },\n    'should support the console.log format for the message' : function(layout) {\n      assert.equal(layout({\n        data: [\"thing %d\", 1, \"cheese\"],\n        startTime: new Date(2010, 11, 5, 14, 18, 30, 45),\n        categoryName: \"cheese\",\n        level : {\n          colour: \"green\",\n          toString: function() { return \"ERROR\"; }\n        }\n      }), \"thing 1 cheese\");\n    },\n    'should output the first item even if it is not a string': function(layout) {\n      assert.equal(layout({\n        data: [ { thing: 1} ],\n        startTime: new Date(2010, 11, 5, 14, 18, 30, 45),\n        categoryName: \"cheese\",\n        level: {\n          colour: \"green\",\n          toString: function() { return \"ERROR\"; }\n        }\n      }), \"{ thing: 1 }\");\n    },\n    'should print the stacks of a passed error objects': function(layout) {\n      assert.isArray(layout({\n        data: [ new Error() ],\n        startTime: new Date(2010, 11, 5, 14, 18, 30, 45),\n        categoryName: \"cheese\",\n        level: {\n          colour: \"green\",\n          toString: function() { return \"ERROR\"; }\n        }\n      }).match(/Error\\s+at Object\\..*\\s+\\((.*)test[\\\\\\/]layouts-test\\.js\\:\\d+\\:\\d+\\)\\s+at runTest/)\n                     , 'regexp did not return a match');\n    },\n    'with passed augmented errors': {\n      topic: function(layout){\n        var e = new Error(\"My Unique Error Message\");\n        e.augmented = \"My Unique attribute value\";\n        e.augObj = { at1: \"at2\" };\n        return layout({\n          data: [ e ],\n          startTime: new Date(2010, 11, 5, 14, 18, 30, 45),\n          categoryName: \"cheese\",\n          level: {\n            colour: \"green\",\n            toString: function() { return \"ERROR\"; }\n          }\n        });\n      },\n      'should print error the contained error message': function(layoutOutput) {\n        var m = layoutOutput.match(/\\{ \\[Error: My Unique Error Message\\]/);\n        assert.isArray(m);\n      },\n      'should print error augmented string attributes': function(layoutOutput) {\n        var m = layoutOutput.match(/augmented:\\s'My Unique attribute value'/);\n        assert.isArray(m);\n      },\n      'should print error augmented object attributes': function(layoutOutput) {\n        var m = layoutOutput.match(/augObj:\\s\\{ at1: 'at2' \\}/);\n        assert.isArray(m);\n      }\n    }\n\n\n  },\n\n  'basicLayout': {\n    topic: function() {\n      var layout = require('../lib/layouts').basicLayout,\n      event = {\n        data: ['this is a test'],\n        startTime: new Date(2010, 11, 5, 14, 18, 30, 45),\n        categoryName: \"tests\",\n        level: {\n          toString: function() { return \"DEBUG\"; }\n        }\n      };\n      return [layout, event];\n    },\n    'should take a logevent and output a formatted string': function(args) {\n      var layout = args[0], event = args[1];\n      assert.equal(layout(event), \"[2010-12-05 14:18:30.045] [DEBUG] tests - this is a test\");\n    },\n    'should output a stacktrace, message if the event has an error attached': function(args) {\n      var layout = args[0], event = args[1], output, lines,\n      error = new Error(\"Some made-up error\"),\n      stack = error.stack.split(/\\n/);\n\n      event.data = ['this is a test', error];\n      output = layout(event);\n      lines = output.split(/\\n/);\n\n      assert.equal(lines.length - 1, stack.length);\n      assert.equal(\n        lines[0],\n        \"[2010-12-05 14:18:30.045] [DEBUG] tests - this is a test [Error: Some made-up error]\"\n      );\n\n      for (var i = 1; i < stack.length; i++) {\n        assert.equal(lines[i+2], stack[i+1]);\n      }\n    },\n    'should output any extra data in the log event as util.inspect strings': function(args) {\n      var layout = args[0], event = args[1], output, lines;\n      event.data = ['this is a test', {\n        name: 'Cheese',\n        message: 'Gorgonzola smells.'\n      }];\n      output = layout(event);\n      assert.equal(\n        output,\n        \"[2010-12-05 14:18:30.045] [DEBUG] tests - this is a test \" +\n          \"{ name: 'Cheese', message: 'Gorgonzola smells.' }\"\n      );\n    }\n  },\n\n  'patternLayout': {\n    topic: function() {\n      var event = {\n        data: ['this is a test'],\n        startTime: new Date('2010-12-05T14:18:30.045Z'), //new Date(2010, 11, 5, 14, 18, 30, 45),\n        categoryName: \"multiple.levels.of.tests\",\n        level: {\n          toString: function() { return \"DEBUG\"; }\n        }\n      }, layout = require('../lib/layouts').patternLayout\n      , tokens = {\n        testString: 'testStringToken',\n        testFunction: function() { return 'testFunctionToken'; },\n        fnThatUsesLogEvent: function(logEvent) { return logEvent.level.toString(); }\n      };\n\n      //override getTimezoneOffset\n      event.startTime.getTimezoneOffset = function() { return 0; };\n      return [layout, event, tokens];\n    },\n\n    'should default to \"time logLevel loggerName - message\"': function(args) {\n      test(args, null, \"14:18:30 DEBUG multiple.levels.of.tests - this is a test\" + EOL);\n    },\n    '%r should output time only': function(args) {\n      test(args, '%r', '14:18:30');\n    },\n    '%p should output the log level': function(args) {\n      test(args, '%p', 'DEBUG');\n    },\n    '%c should output the log category': function(args) {\n      test(args, '%c', 'multiple.levels.of.tests');\n    },\n    '%m should output the log data': function(args) {\n      test(args, '%m', 'this is a test');\n    },\n    '%n should output a new line': function(args) {\n      test(args, '%n', EOL);\n    },\n    '%h should output hostname' : function(args) {\n      test(args, '%h', os.hostname().toString());\n    },\n    '%z should output pid' : function(args) {\n      test(args, '%z', process.pid);\n    },\n    '%c should handle category names like java-style package names': function(args) {\n      test(args, '%c{1}', 'tests');\n      test(args, '%c{2}', 'of.tests');\n      test(args, '%c{3}', 'levels.of.tests');\n      test(args, '%c{4}', 'multiple.levels.of.tests');\n      test(args, '%c{5}', 'multiple.levels.of.tests');\n      test(args, '%c{99}', 'multiple.levels.of.tests');\n    },\n    '%d should output the date in ISO8601 format': function(args) {\n      test(args, '%d', '2010-12-05 14:18:30.045');\n    },\n    '%d should allow for format specification': function(args) {\n      test(args, '%d{ISO8601_WITH_TZ_OFFSET}', '2010-12-05T14:18:30-0000');\n      test(args, '%d{ISO8601}', '2010-12-05 14:18:30.045');\n      test(args, '%d{ABSOLUTE}', '14:18:30.045');\n      test(args, '%d{DATE}', '05 12 2010 14:18:30.045');\n      test(args, '%d{yy MM dd hh mm ss}', '10 12 05 14 18 30');\n      test(args, '%d{yyyy MM dd}', '2010 12 05');\n      test(args, '%d{yyyy MM dd hh mm ss SSS}', '2010 12 05 14 18 30 045');\n    },\n    '%% should output %': function(args) {\n      test(args, '%%', '%');\n    },\n    'should output anything not preceded by % as literal': function(args) {\n      test(args, 'blah blah blah', 'blah blah blah');\n    },\n    'should output the original string if no replacer matches the token': function(args) {\n      test(args, '%a{3}', 'a{3}');\n    },\n    'should handle complicated patterns': function(args) {\n      test(args,\n           '%m%n %c{2} at %d{ABSOLUTE} cheese %p%n',\n           'this is a test'+ EOL +' of.tests at 14:18:30.045 cheese DEBUG' + EOL\n          );\n    },\n    'should truncate fields if specified': function(args) {\n      test(args, '%.4m', 'this');\n      test(args, '%.7m', 'this is');\n      test(args, '%.9m', 'this is a');\n      test(args, '%.14m', 'this is a test');\n      test(args, '%.2919102m', 'this is a test');\n    },\n    'should pad fields if specified': function(args) {\n      test(args, '%10p', '     DEBUG');\n      test(args, '%8p', '   DEBUG');\n      test(args, '%6p', ' DEBUG');\n      test(args, '%4p', 'DEBUG');\n      test(args, '%-4p', 'DEBUG');\n      test(args, '%-6p', 'DEBUG ');\n      test(args, '%-8p', 'DEBUG   ');\n      test(args, '%-10p', 'DEBUG     ');\n    },\n    '%[%r%] should output colored time': function(args) {\n      test(args, '%[%r%]', '\\x1B[36m14:18:30\\x1B[39m');\n    },\n    '%x{testString} should output the string stored in tokens': function(args) {\n      test(args, '%x{testString}', 'testStringToken');\n    },\n    '%x{testFunction} should output the result of the function stored in tokens': function(args) {\n      test(args, '%x{testFunction}', 'testFunctionToken');\n    },\n    '%x{doesNotExist} should output the string stored in tokens': function(args) {\n      test(args, '%x{doesNotExist}', 'null');\n    },\n    '%x{fnThatUsesLogEvent} should be able to use the logEvent': function(args) {\n      test(args, '%x{fnThatUsesLogEvent}', 'DEBUG');\n    },\n    '%x should output the string stored in tokens': function(args) {\n      test(args, '%x', 'null');\n    }\n  },\n  'layout makers': {\n    topic: require('../lib/layouts'),\n    'should have a maker for each layout': function(layouts) {\n      assert.ok(layouts.layout(\"messagePassThrough\"));\n      assert.ok(layouts.layout(\"basic\"));\n      assert.ok(layouts.layout(\"colored\"));\n      assert.ok(layouts.layout(\"coloured\"));\n      assert.ok(layouts.layout(\"pattern\"));\n    }\n  },\n  'add layout': {\n    topic: require('../lib/layouts'),\n    'should be able to add a layout': function(layouts) {\n      layouts.addLayout('test_layout', function(config){\n        assert.equal(config, 'test_config');\n        return function(logEvent) {\n          return \"TEST LAYOUT >\"+logEvent.data;\n        };\n      });\n      var serializer = layouts.layout('test_layout', 'test_config');\n      assert.ok(serializer);\n      assert.equal(serializer({data: \"INPUT\"}), \"TEST LAYOUT >INPUT\");\n    }\n  }\n}).export(module);\n"]}