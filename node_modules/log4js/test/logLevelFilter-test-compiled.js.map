{"version":3,"sources":["logLevelFilter-test.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;AACb,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC;IACxB,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC;IAClB,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC;IAC1B,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC;IAClB,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC;;AAElC,SAAS,MAAM,CAAC,QAAQ,EAAE;AACxB,MAAI;AACF,MAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;GACzB,CAAC,OAAO,CAAC,EAAE;;GAEX;CACF;;AAED,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,CAAC,QAAQ,CAAC;AAC9C,YAAU,EAAE;AACV,SAAK,EAAE,iBAAW;AAChB,UAAI,MAAM,GAAG,OAAO,CAAC,eAAe,CAAC;UAAE,SAAS,GAAG,EAAE;UAAE,MAAM,CAAC;AAC9D,YAAM,CAAC,cAAc,EAAE,CAAC;AACxB,YAAM,CAAC,WAAW,CAChB,OAAO,CAAC,iCAAiC,CAAC,CACvC,QAAQ,CACP,OAAO,EACP,SAAS,EACT,UAAS,GAAG,EAAE;AAAE,iBAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;OAAE,CACvC,EACH,cAAc,CACf,CAAC;;AAEF,YAAM,GAAG,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;AAC1C,YAAM,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAC;AACjD,YAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;AACnC,YAAM,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;AACpC,YAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;AAC/B,aAAO,SAAS,CAAC;KAClB;AACD,wEAAoE,EAAG,gEAAS,SAAS,EAAE;AACzF,YAAM,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AAClC,YAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,qBAAqB,CAAC,CAAC;AAC1D,YAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,gBAAgB,CAAC,CAAC;KACtD;GACF;;AAED,aAAW,EAAE;AACX,SAAK,EAAE,iBAAW;AAChB,UAAI,MAAM,GAAG,OAAO,CAAC,eAAe,CAAC;UACnC,MAAM,CAAC;;AAET,YAAM,CAAC,SAAS,GAAG,qBAAqB,CAAC,CAAC;AAC1C,YAAM,CAAC,SAAS,GAAG,8BAA8B,CAAC,CAAC;AACnD,YAAM,CAAC,SAAS,GAAG,4BAA4B,CAAC,CAAC;;AAEjD,YAAM,CAAC,SAAS,CAAC,+BAA+B,CAAC,CAAC;AAClD,YAAM,GAAG,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AACnC,YAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AACtB,YAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACpB,YAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AACtB,YAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACpB,YAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AACtB,YAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;;AAEtB,gBAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;KAChC;AACD,mBAAe,EAAE;AACf,WAAK,EAAE,iBAAW;AAChB,UAAE,CAAC,QAAQ,CAAC,SAAS,GAAG,qBAAqB,EAAE,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;OACvE;AACD,uCAAiC,EAAE,qCAAU,QAAQ,EAAE;AACrD,YAAI,QAAQ,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC1C,cAAM,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,OAAO,EAAC,MAAM,EAAC,OAAO,EAAC,MAAM,EAAC,OAAO,EAAC,OAAO,CAAC,CAAC,CAAC;OAC7E;KACF;AACD,4BAAwB,EAAE;AACxB,WAAK,EAAE,iBAAW;AAChB,UAAE,CAAC,QAAQ,CAAC,SAAS,GAAG,8BAA8B,EAAC,MAAM,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OAC9E;AACD,0DAAoD,EAAE,qDAAS,QAAQ,EAAE;AACvE,YAAI,QAAQ,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC1C,cAAM,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,OAAO,EAAC,MAAM,CAAC,CAAC,CAAC;OAC9C;KACF;AACD,0BAAsB,EAAE;AACtB,WAAK,EAAE,iBAAW;AAChB,UAAE,CAAC,QAAQ,CAAC,SAAS,GAAG,4BAA4B,EAAC,MAAM,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OAC5E;AACD,wDAAkD,EAAE,mDAAS,QAAQ,EAAE;AACrE,YAAI,QAAQ,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC1C,cAAM,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,OAAO,EAAC,OAAO,EAAC,OAAO,CAAC,CAAC,CAAC;OACvD;KACF;GACF;CACF,CAAC,UAAO,CAAC,MAAM,CAAC,CAAC","file":"logLevelFilter-test-compiled.js","sourcesContent":["\"use strict\";\nvar vows = require('vows')\n, fs = require('fs')\n, assert = require('assert')\n, os = require('os')\n, EOL = require('os').EOL || '\\n';\n\nfunction remove(filename) {\n  try {\n    fs.unlinkSync(filename);\n  } catch (e) {\n    //doesn't really matter if it failed\n  }\n}\n\nvows.describe('log4js logLevelFilter').addBatch({\n  'appender': {\n    topic: function() {\n      var log4js = require('../lib/log4js'), logEvents = [], logger;\n      log4js.clearAppenders();\n      log4js.addAppender(\n        require('../lib/appenders/logLevelFilter')\n          .appender(\n            'ERROR',\n            undefined,\n            function(evt) { logEvents.push(evt); }\n          ),\n        \"logLevelTest\"\n      );\n\n      logger = log4js.getLogger(\"logLevelTest\");\n      logger.debug('this should not trigger an event');\n      logger.warn('neither should this');\n      logger.error('this should, though');\n      logger.fatal('so should this');\n      return logEvents;\n    },\n    'should only pass log events greater than or equal to its own level' : function(logEvents) {\n      assert.equal(logEvents.length, 2);\n      assert.equal(logEvents[0].data[0], 'this should, though');\n      assert.equal(logEvents[1].data[0], 'so should this');\n    }\n  },\n\n  'configure': {\n    topic: function() {\n      var log4js = require('../lib/log4js')\n      , logger;\n\n      remove(__dirname + '/logLevelFilter.log');\n      remove(__dirname + '/logLevelFilter-warnings.log');\n      remove(__dirname + '/logLevelFilter-debugs.log');\n\n      log4js.configure('test/with-logLevelFilter.json');\n      logger = log4js.getLogger(\"tests\");\n      logger.debug('debug');\n      logger.info('info');\n      logger.error('error');\n      logger.warn('warn');\n      logger.debug('debug');\n      logger.trace('trace');\n      //wait for the file system to catch up\n      setTimeout(this.callback, 500);\n    },\n    'tmp-tests.log': {\n      topic: function() {\n        fs.readFile(__dirname + '/logLevelFilter.log', 'utf8', this.callback);\n      },\n      'should contain all log messages': function (contents) {\n        var messages = contents.trim().split(EOL);\n        assert.deepEqual(messages, ['debug','info','error','warn','debug','trace']);\n      }\n    },\n    'tmp-tests-warnings.log': {\n      topic: function() {\n        fs.readFile(__dirname + '/logLevelFilter-warnings.log','utf8',this.callback);\n      },\n      'should contain only error and warning log messages': function(contents) {\n        var messages = contents.trim().split(EOL);\n        assert.deepEqual(messages, ['error','warn']);\n      }\n    },\n    'tmp-tests-debugs.log': {\n      topic: function() {\n        fs.readFile(__dirname + '/logLevelFilter-debugs.log','utf8',this.callback);\n      },\n      'should contain only trace and debug log messages': function(contents) {\n        var messages = contents.trim().split(EOL);\n        assert.deepEqual(messages, ['debug','debug','trace']);\n      }\n    }\n  }\n}).export(module);\n"]}