{"version":3,"sources":["logger-test.js"],"names":[],"mappings":"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","file":"logger-test-compiled.js","sourcesContent":["\"use strict\";\nvar vows = require('vows')\n, assert = require('assert')\n, levels = require('../lib/levels')\n, loggerModule = require('../lib/logger')\n, Logger = loggerModule.Logger;\n\nvows.describe('../lib/logger').addBatch({\n  'constructor with no parameters': {\n    topic: new Logger(),\n    'should use default category': function(logger) {\n      assert.equal(logger.category, Logger.DEFAULT_CATEGORY);\n    },\n    'should use TRACE log level': function(logger) {\n      assert.equal(logger.level, levels.TRACE);\n    }\n  },\n\n  'constructor with category': {\n    topic: new Logger('cheese'),\n    'should use category': function(logger) {\n      assert.equal(logger.category, 'cheese');\n    },\n    'should use TRACE log level': function(logger) {\n      assert.equal(logger.level, levels.TRACE);\n    }\n  },\n\n  'constructor with category and level': {\n    topic: new Logger('cheese', 'debug'),\n    'should use category': function(logger) {\n      assert.equal(logger.category, 'cheese');\n    },\n    'should use level': function(logger) {\n      assert.equal(logger.level, levels.DEBUG);\n    }\n  },\n\n  'isLevelEnabled': {\n    topic: new Logger('cheese', 'info'),\n    'should provide a level enabled function for all levels': function(logger) {\n      assert.isFunction(logger.isTraceEnabled);\n      assert.isFunction(logger.isDebugEnabled);\n      assert.isFunction(logger.isInfoEnabled);\n      assert.isFunction(logger.isWarnEnabled);\n      assert.isFunction(logger.isErrorEnabled);\n      assert.isFunction(logger.isFatalEnabled);\n    },\n    'should return the right values': function(logger) {\n      assert.isFalse(logger.isTraceEnabled());\n      assert.isFalse(logger.isDebugEnabled());\n      assert.isTrue(logger.isInfoEnabled());\n      assert.isTrue(logger.isWarnEnabled());\n      assert.isTrue(logger.isErrorEnabled());\n      assert.isTrue(logger.isFatalEnabled());\n    }\n  },\n\n  'should emit log events': {\n    topic: function() {\n      var events = [],\n          logger = new Logger();\n      logger.addListener('log', function (logEvent) { events.push(logEvent); });\n      logger.debug('Event 1');\n      loggerModule.disableAllLogWrites();\n      logger.debug('Event 2');\n      loggerModule.enableAllLogWrites();\n      logger.debug('Event 3');\n      return events;\n    },\n\n    'when log writes are enabled': function(events) {\n      assert.equal(events[0].data[0], 'Event 1');\n    },\n\n    'but not when log writes are disabled': function(events) {\n      assert.equal(events.length, 2);\n      assert.equal(events[1].data[0], 'Event 3');\n    }\n  }\n}).exportTo(module);\n"]}