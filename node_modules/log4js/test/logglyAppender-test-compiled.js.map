{"version":3,"sources":["logglyAppender-test.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;AACb,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC;IACxB,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC;IAC1B,MAAM,GAAG,OAAO,CAAC,eAAe,CAAC;IACjC,OAAO,GAAG,OAAO,CAAC,kBAAkB,CAAC,CACtC;;AAED,SAAS,YAAY,CAAC,QAAQ,EAAE,OAAO,EAAE;AACvC,MAAI,IAAI,GAAG,EAAE,CAAC;;AAEd,MAAI,UAAU,GAAG;AACf,gBAAY,EAAE,sBAAU,OAAO,EAAE;AAC/B,aAAO;AACL,cAAM,EAAE,OAAO;AACf,WAAG,EAAE,aAAU,GAAG,EAAE,IAAI,EAAE;AACxB,cAAI,CAAC,IAAI,CAAC;AACR,eAAG,EAAE,GAAG;AACR,gBAAI,EAAE,IAAI;WACX,CAAC,CAAC;SACJ;OACF,CAAC;KACH;GACF,CAAC;;AAEF,MAAI,WAAW,GAAG;AAChB,UAAM,EAAE,gBAAS,IAAI,EAAE,MAAM,EAAE;AAC7B,UAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,UAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,aAAO,MAAM,CAAC,OAAO,CAAC,wBAAwB,CAAC;KAChD;AACD,eAAW,EAAE,MAAM,CAAC,OAAO,CAAC,WAAW;AACvC,4BAAwB,EAAE,MAAM,CAAC,OAAO,CAAC,wBAAwB;GAClE,CAAC;;AAEF,MAAI,WAAW,GAAG;AAChB,UAAM,EAAE,EAAE;AACV,SAAK,EAAE,eAAS,GAAG,EAAE,KAAK,EAAE;AAC1B,UAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;KAC9C;GACF,CAAC;;AAEF,MAAI,YAAY,GAAG,OAAO,CAAC,OAAO,CAAC,yBAAyB,EAAE;AAC5D,YAAQ,EAAE;AACR,cAAQ,EAAE,UAAU;AACpB,kBAAY,EAAE,WAAW;KAC1B;AACD,WAAO,EAAE;AACP,aAAO,EAAE,WAAW;KACrB;GACF,CAAC,CAAC;;AAEH,QAAM,CAAC,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,QAAQ,CAAC,CAAC;;AAE9D,SAAO;AACL,UAAM,EAAE,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;AAClC,UAAM,EAAE,UAAU;AAClB,WAAO,EAAE,WAAW;AACpB,WAAO,EAAE,WAAW;AACpB,WAAO,EAAE,IAAI;GACd,CAAC;CACH;;AAED,MAAM,CAAC,cAAc,EAAE,CAAC;AACxB,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,CAAC,QAAQ,CAAC;AAC9C,kBAAgB,EAAE;AAChB,SAAK,EAAE,iBAAW;AAChB,UAAI,KAAK,GAAG,YAAY,CAAC,QAAQ,EAAE;AACjC,aAAK,EAAE,8BAA8B;AACrC,iBAAS,EAAE,gBAAgB;AAC3B,YAAI,EAAE,CAAC,aAAa,EAAE,aAAa,EAAE,aAAa,CAAC;OACpD,CAAC,CAAC;;AAEH,WAAK,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;AAC1C,aAAO,KAAK,CAAC;KACd;AACD,sCAAkC,EAAE,qCAAU,KAAK,EAAE;;AAEnD,YAAM,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;KACvC;GACF;;CAEF,CAAC,UAAO,CAAC,MAAM,CAAC,CAAC","file":"logglyAppender-test-compiled.js","sourcesContent":["\"use strict\";\nvar vows = require('vows')\n, assert = require('assert')\n, log4js = require('../lib/log4js')\n, sandbox = require('sandboxed-module')\n;\n\nfunction setupLogging(category, options) {\n  var msgs = [];\n  \n  var fakeLoggly = {\n    createClient: function (options) {\n      return {\n        config: options,\n        log: function (msg, tags) {\n          msgs.push({\n            msg: msg,\n            tags: tags\n          });\n        }\n      };\n    }\n  };\n\n  var fakeLayouts = {\n    layout: function(type, config) {\n      this.type = type;\n      this.config = config;\n      return log4js.layouts.messagePassThroughLayout;\n    },\n    basicLayout: log4js.layouts.basicLayout,\n    messagePassThroughLayout: log4js.layouts.messagePassThroughLayout\n  };\n\n  var fakeConsole = {\n    errors: [],\n    error: function(msg, value) {\n      this.errors.push({ msg: msg, value: value });\n    }\n  };\n\n  var logglyModule = sandbox.require('../lib/appenders/loggly', {\n    requires: {\n      'loggly': fakeLoggly,\n      '../layouts': fakeLayouts\n    },\n    globals: {\n      console: fakeConsole\n    }\n  });\n\n  log4js.addAppender(logglyModule.configure(options), category);\n  \n  return {\n    logger: log4js.getLogger(category),\n    loggly: fakeLoggly,\n    layouts: fakeLayouts,\n    console: fakeConsole,\n    results: msgs\n  };\n}\n\nlog4js.clearAppenders();\nvows.describe('log4js logglyAppender').addBatch({\n  'minimal config': {\n    topic: function() {\n      var setup = setupLogging('loggly', {\n        token: 'your-really-long-input-token',\n        subdomain: 'your-subdomain',\n        tags: ['loggly-tag1', 'loggly-tag2', 'loggly-tagn'] \n      });\n      \n      setup.logger.log('trace', 'Log event #1');\n      return setup;\n    },\n    'there should be one message only': function (topic) {\n      //console.log('topic', topic);\n      assert.equal(topic.results.length, 1);\n    }\n  }\n\n}).export(module);\n"]}