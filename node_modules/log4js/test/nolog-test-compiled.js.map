{"version":3,"sources":["nolog-test.js"],"names":[],"mappings":"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","file":"nolog-test-compiled.js","sourcesContent":["\"use strict\";\nvar vows = require('vows')\n, assert = require('assert')\n, util   = require('util')\n, EE     = require('events').EventEmitter\n, levels = require('../lib/levels');\n\nfunction MockLogger() {\n\n  var that = this;\n  this.messages = [];\n\n  this.log = function(level, message, exception) {\n    that.messages.push({ level: level, message: message });\n  };\n\n  this.isLevelEnabled = function(level) {\n    return level.isGreaterThanOrEqualTo(that.level);\n  };\n\n  this.level = levels.TRACE;\n\n}\n\nfunction MockRequest(remoteAddr, method, originalUrl) {\n  \n  this.socket = { remoteAddress: remoteAddr };\n  this.originalUrl = originalUrl;\n  this.method = method;\n  this.httpVersionMajor = '5';\n  this.httpVersionMinor = '0';\n  this.headers = {};\n}\n\nfunction MockResponse(statusCode) {\n  var r = this;\n  this.statusCode = statusCode;\n\n  this.end = function(chunk, encoding) {\n      r.emit('finish');\n  };\n}\nutil.inherits(MockResponse, EE);\n\nvows.describe('log4js connect logger').addBatch({\n  'getConnectLoggerModule': {\n    topic: function() {\n      var clm = require('../lib/connect-logger');\n      return clm;\n    },\n\n    'should return a \"connect logger\" factory' : function(clm) {\n      assert.isObject(clm);\n    },\n\n    'nolog String' : {\n      topic: function(clm) {\n        var ml = new MockLogger();\n        var cl = clm.connectLogger(ml, { nolog: \"\\\\.gif\" });\n        return {cl: cl, ml: ml};\n      },\n\n      'check unmatch url request': {\n        topic: function(d){\n          var req = new MockRequest('my.remote.addr', 'GET', 'http://url/hoge.png'); // not gif\n          var res = new MockResponse(200);\n          var cb  = this.callback;\n          d.cl(req, res, function() { });\n          res.end('chunk', 'encoding');\n          setTimeout(function() {\n              cb(null, d.ml.messages);\n          },10);\n        }, \n        'check message': function(messages){\n          assert.isArray(messages);\n          assert.equal(messages.length, 1);\n          assert.ok(levels.INFO.isEqualTo(messages[0].level));\n          assert.include(messages[0].message, 'GET');\n          assert.include(messages[0].message, 'http://url');\n          assert.include(messages[0].message, 'my.remote.addr');\n          assert.include(messages[0].message, '200');\n          messages.pop();\n        }\n      },\n\n      'check match url request': {\n        topic: function(d) {\n          var req = new MockRequest('my.remote.addr', 'GET', 'http://url/hoge.gif'); // gif\n          var res = new MockResponse(200);\n          var cb  = this.callback;\n          d.cl(req, res, function() { });\n          res.end('chunk', 'encoding');\n          setTimeout(function() {\n              cb(null, d.ml.messages);\n          },10);\n        }, \n        'check message': function(messages) {\n          assert.isArray(messages);\n          assert.equal(messages.length, 0);\n        }\n      }\n    },\n\n    'nolog Strings' : {\n      topic: function(clm) {\n        var ml = new MockLogger();\n        var cl = clm.connectLogger(ml, {nolog: \"\\\\.gif|\\\\.jpe?g\"});\n        return {cl: cl, ml: ml};\n      },\n      \n      'check unmatch url request (png)': {\n        topic: function(d){\n          var req = new MockRequest('my.remote.addr', 'GET', 'http://url/hoge.png'); // not gif\n          var res = new MockResponse(200);\n          var cb  = this.callback;\n          d.cl(req, res, function() { });\n          res.end('chunk', 'encoding');\n          setTimeout(function() { \n            cb(null, d.ml.messages) \n          }, 10);\n        }, \n        'check message': function(messages){\n          assert.isArray(messages);\n          assert.equal(messages.length, 1);\n          assert.ok(levels.INFO.isEqualTo(messages[0].level));\n          assert.include(messages[0].message, 'GET');\n          assert.include(messages[0].message, 'http://url');\n          assert.include(messages[0].message, 'my.remote.addr');\n          assert.include(messages[0].message, '200');\n          messages.pop();\n        }\n      },\n\n      'check match url request (gif)': {\n        topic: function(d) {\n          var req = new MockRequest('my.remote.addr', 'GET', 'http://url/hoge.gif'); // gif\n          var res = new MockResponse(200);\n          var cb  = this.callback;\n          d.cl(req, res, function() { });\n          res.end('chunk', 'encoding');\n          setTimeout(function() { \n            cb(null, d.ml.messages) \n          }, 10);\n        }, \n        'check message': function(messages) {\n          assert.isArray(messages);\n          assert.equal(messages.length, 0);\n        }\n      },\n      'check match url request (jpeg)': {\n        topic: function(d) {\n          var req = new MockRequest('my.remote.addr', 'GET', 'http://url/hoge.jpeg'); // gif\n          var res = new MockResponse(200);\n          var cb  = this.callback;\n          d.cl(req, res, function() { });\n          res.end('chunk', 'encoding');\n          setTimeout(function() { \n            cb(null, d.ml.messages) \n          }, 10);\n        }, \n        'check message': function(messages) {\n          assert.isArray(messages);\n          assert.equal(messages.length, 0);\n        }\n      }\n    },\n    'nolog Array<String>' : {\n      topic: function(clm) {\n        var ml = new MockLogger();\n        var cl = clm.connectLogger(ml, {nolog: [\"\\\\.gif\", \"\\\\.jpe?g\"]});\n        return {cl: cl, ml: ml};\n      },\n      \n      'check unmatch url request (png)': {\n        topic: function(d){\n          var req = new MockRequest('my.remote.addr', 'GET', 'http://url/hoge.png'); // not gif\n          var res = new MockResponse(200);\n          var cb  = this.callback;\n          d.cl(req, res, function() { });\n          res.end('chunk', 'encoding');\n          setTimeout(function() { \n            cb(null, d.ml.messages) \n          }, 10);\n        }, \n        'check message': function(messages){\n          assert.isArray(messages);\n          assert.equal(messages.length, 1);\n          assert.ok(levels.INFO.isEqualTo(messages[0].level));\n          assert.include(messages[0].message, 'GET');\n          assert.include(messages[0].message, 'http://url');\n          assert.include(messages[0].message, 'my.remote.addr');\n          assert.include(messages[0].message, '200');\n          messages.pop();\n        }\n      },\n\n      'check match url request (gif)': {\n        topic: function(d) {\n          var req = new MockRequest('my.remote.addr', 'GET', 'http://url/hoge.gif'); // gif\n          var res = new MockResponse(200);\n          var cb  = this.callback;\n          d.cl(req, res, function() { });\n          res.end('chunk', 'encoding');\n          setTimeout(function() { \n            cb(null, d.ml.messages) \n          }, 10);\n        }, \n        'check message': function(messages) {\n          assert.isArray(messages);\n          assert.equal(messages.length, 0);\n        }\n      },\n\n      'check match url request (jpeg)': {\n        topic: function(d) {\n          var req = new MockRequest('my.remote.addr', 'GET', 'http://url/hoge.jpeg'); // gif\n          var res = new MockResponse(200);\n          var cb  = this.callback;\n          d.cl(req, res, function() { });\n          res.end('chunk', 'encoding');\n          setTimeout(function() { \n            cb(null, d.ml.messages) \n          }, 10);\n        }, \n        'check message': function(messages) {\n          assert.isArray(messages);\n          assert.equal(messages.length, 0);\n        }\n      },\n    },\n    'nolog RegExp' : {\n      topic: function(clm) {\n        var ml = new MockLogger();\n        var cl = clm.connectLogger(ml, {nolog: /\\.gif|\\.jpe?g/});\n        return {cl: cl, ml: ml};\n      },\n\n      'check unmatch url request (png)': {\n        topic: function(d){\n          var req = new MockRequest('my.remote.addr', 'GET', 'http://url/hoge.png'); // not gif\n          var res = new MockResponse(200);\n          var cb  = this.callback;\n          d.cl(req, res, function() { });\n          res.end('chunk', 'encoding');\n          setTimeout(function() { \n            cb(null, d.ml.messages) \n          }, 10);\n        }, \n        'check message': function(messages){\n          assert.isArray(messages);\n          assert.equal(messages.length, 1);\n          assert.ok(levels.INFO.isEqualTo(messages[0].level));\n          assert.include(messages[0].message, 'GET');\n          assert.include(messages[0].message, 'http://url');\n          assert.include(messages[0].message, 'my.remote.addr');\n          assert.include(messages[0].message, '200');\n          messages.pop();\n        }\n      },\n\n      'check match url request (gif)': {\n        topic: function(d) {\n          var req = new MockRequest('my.remote.addr', 'GET', 'http://url/hoge.gif'); // gif\n          var res = new MockResponse(200);\n          var cb  = this.callback;\n          d.cl(req, res, function() { });\n          res.end('chunk', 'encoding');\n          setTimeout(function() { \n            cb(null, d.ml.messages) \n          }, 10);\n        }, \n        'check message': function(messages) {\n          assert.isArray(messages);\n          assert.equal(messages.length, 0);\n        }\n      },\n\n      'check match url request (jpeg)': {\n        topic: function(d) {\n          var req = new MockRequest('my.remote.addr', 'GET', 'http://url/hoge.jpeg'); // gif\n          var res = new MockResponse(200);\n          var cb  = this.callback;\n          d.cl(req, res, function() { });\n          res.end('chunk', 'encoding');\n          setTimeout(function() { \n            cb(null, d.ml.messages) \n          }, 10);\n        }, \n        'check message': function(messages) {\n          assert.isArray(messages);\n          assert.equal(messages.length, 0);\n        }\n      }\n    }\n  }\n\n}).export(module);\n"]}