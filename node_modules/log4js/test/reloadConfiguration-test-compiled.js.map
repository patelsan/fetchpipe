{"version":3,"sources":["reloadConfiguration-test.js"],"names":[],"mappings":"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","file":"reloadConfiguration-test-compiled.js","sourcesContent":["\"use strict\";\nvar vows = require('vows')\n, assert = require('assert')\n, sandbox = require('sandboxed-module');\n\nfunction setupConsoleTest() {\n  var fakeConsole = {}\n  , logEvents = []\n  , log4js;\n  \n  ['trace','debug','log','info','warn','error'].forEach(function(fn) {\n    fakeConsole[fn] = function() {\n      throw new Error(\"this should not be called.\");\n    };\n  });\n\n  log4js = sandbox.require(\n    '../lib/log4js', \n    {\n      globals: {\n        console: fakeConsole\n      }\n    }\n  );\n\n  log4js.clearAppenders();\n  log4js.addAppender(function(evt) {\n    logEvents.push(evt);\n  });\n\n  return { log4js: log4js, logEvents: logEvents, fakeConsole: fakeConsole };\n}\n\nvows.describe('reload configuration').addBatch({\n  'with config file changing' : {\n    topic: function() {\n      var pathsChecked = [],\n      logEvents = [],\n      logger,\n      modulePath = 'path/to/log4js.json',\n      fakeFS = {\n        lastMtime: Date.now(),\n        config: { \n          appenders: [ \n            { type: 'console', layout: { type: 'messagePassThrough' } } \n          ],\n          levels: { 'a-test' : 'INFO' } \n        },\n        readFileSync: function (file, encoding) {\n          assert.equal(file, modulePath);\n          assert.equal(encoding, 'utf8');\n          return JSON.stringify(fakeFS.config);\n        },\n        statSync: function (path) {\n          pathsChecked.push(path);\n          if (path === modulePath) {\n            fakeFS.lastMtime += 1;\n            return { mtime: new Date(fakeFS.lastMtime) };\n          } else {\n            throw new Error(\"no such file\");\n          }\n        }\n      },\n      fakeConsole = {\n        'name': 'console',\n        'appender': function () {\n          return function(evt) { logEvents.push(evt); };\n        },\n        'configure': function (config) {\n          return fakeConsole.appender();\n        }\n      },\n      setIntervalCallback,\n      fakeSetInterval = function(cb, timeout) {\n        setIntervalCallback = cb;\n      },\n      log4js = sandbox.require(\n        '../lib/log4js',\n        {\n          requires: {\n            'fs': fakeFS,\n            './appenders/console': fakeConsole\n          },\n          globals: {\n            'console': fakeConsole,\n            'setInterval' : fakeSetInterval,\n          }\n        }\n      );\n      \n      log4js.configure('path/to/log4js.json', { reloadSecs: 30 });\n      logger = log4js.getLogger('a-test');\n      logger.info(\"info1\");\n      logger.debug(\"debug2 - should be ignored\");\n      fakeFS.config.levels['a-test'] = \"DEBUG\";\n      setIntervalCallback();\n      logger.info(\"info3\");\n      logger.debug(\"debug4\");\n      \n      return logEvents;\n    },\n    'should configure log4js from first log4js.json found': function(logEvents) {\n      assert.equal(logEvents[0].data[0], 'info1');\n      assert.equal(logEvents[1].data[0], 'info3');\n      assert.equal(logEvents[2].data[0], 'debug4');\n      assert.equal(logEvents.length, 3);\n    }\n  },\n  \n  'with config file staying the same' : {\n    topic: function() {\n      var pathsChecked = [],\n      fileRead = 0,\n      logEvents = [],\n      logger,\n      modulePath = require('path').normalize(__dirname + '/../lib/log4js.json'),\n      mtime = new Date(),\n      fakeFS = {\n        config: { \n          appenders: [ \n            { type: 'console', layout: { type: 'messagePassThrough' } } \n          ],\n          levels: { 'a-test' : 'INFO' } \n        },\n        readFileSync: function (file, encoding) {\n          fileRead += 1;\n          assert.isString(file);\n          assert.equal(file, modulePath);\n          assert.equal(encoding, 'utf8');\n          return JSON.stringify(fakeFS.config);\n        },\n        statSync: function (path) {\n          pathsChecked.push(path);\n          if (path === modulePath) {\n            return { mtime: mtime };\n          } else {\n            throw new Error(\"no such file\");\n          }\n        }\n      },\n      fakeConsole = {\n        'name': 'console',\n        'appender': function () {\n          return function(evt) { logEvents.push(evt); };\n        },\n        'configure': function (config) {\n          return fakeConsole.appender();\n        }\n      },\n      setIntervalCallback,\n      fakeSetInterval = function(cb, timeout) {\n        setIntervalCallback = cb;\n      },\n      log4js = sandbox.require(\n        '../lib/log4js',\n        {\n          requires: {\n            'fs': fakeFS,\n            './appenders/console': fakeConsole\n          },\n          globals: {\n            'console': fakeConsole,\n            'setInterval' : fakeSetInterval,\n          }\n        }\n      );\n      \n      log4js.configure(modulePath, { reloadSecs: 3 });\n      logger = log4js.getLogger('a-test');\n      logger.info(\"info1\");\n      logger.debug(\"debug2 - should be ignored\");\n      setIntervalCallback();\n      logger.info(\"info3\");\n      logger.debug(\"debug4\");\n      \n      return [ pathsChecked, logEvents, modulePath, fileRead ];\n    },\n    'should only read the configuration file once': function(args) {\n      var fileRead = args[3];\n      assert.equal(fileRead, 1);\n    },\n    'should configure log4js from first log4js.json found': function(args) {\n      var logEvents = args[1];\n      assert.equal(logEvents.length, 2);\n      assert.equal(logEvents[0].data[0], 'info1');\n      assert.equal(logEvents[1].data[0], 'info3');\n    }\n  },\n\n  'when config file is removed': {\n    topic: function() {\n      var pathsChecked = [],\n      fileRead = 0,\n      logEvents = [],\n      logger,\n      modulePath = require('path').normalize(__dirname + '/../lib/log4js.json'),\n      mtime = new Date(),\n      fakeFS = {\n        config: { \n          appenders: [ \n            { type: 'console', layout: { type: 'messagePassThrough' } } \n          ],\n          levels: { 'a-test' : 'INFO' } \n        },\n        readFileSync: function (file, encoding) {\n          fileRead += 1;\n          assert.isString(file);\n          assert.equal(file, modulePath);\n          assert.equal(encoding, 'utf8');\n          return JSON.stringify(fakeFS.config);\n        },\n        statSync: function (path) {\n          this.statSync = function() {\n            throw new Error(\"no such file\");\n          };\n          return { mtime: new Date() };\n        }\n      },\n      fakeConsole = {\n        'name': 'console',\n        'appender': function () {\n          return function(evt) { logEvents.push(evt); };\n        },\n        'configure': function (config) {\n          return fakeConsole.appender();\n        }\n      },\n      setIntervalCallback,\n      fakeSetInterval = function(cb, timeout) {\n        setIntervalCallback = cb;\n      },\n      log4js = sandbox.require(\n        '../lib/log4js',\n        {\n          requires: {\n            'fs': fakeFS,\n            './appenders/console': fakeConsole\n          },\n          globals: {\n            'console': fakeConsole,\n            'setInterval' : fakeSetInterval,\n          }\n        }\n      );\n      \n      log4js.configure(modulePath, { reloadSecs: 3 });\n      logger = log4js.getLogger('a-test');\n      logger.info(\"info1\");\n      logger.debug(\"debug2 - should be ignored\");\n      setIntervalCallback();\n      logger.info(\"info3\");\n      logger.debug(\"debug4\");\n      \n      return [ pathsChecked, logEvents, modulePath, fileRead ];\n    },\n    'should only read the configuration file once': function(args) {\n      var fileRead = args[3];\n      assert.equal(fileRead, 1);\n    },\n    'should not clear configuration when config file not found': function(args) {\n      var logEvents = args[1];\n      assert.equal(logEvents.length, 3);\n      assert.equal(logEvents[0].data[0], 'info1');\n      assert.equal(logEvents[1].level.toString(), 'WARN');\n      assert.include(logEvents[1].data[0], 'Failed to load configuration file');\n      assert.equal(logEvents[2].data[0], 'info3');\n    }\n  },\n\n  'when passed an object': {\n    topic: function() {\n      var test = setupConsoleTest();\n      test.log4js.configure({}, { reloadSecs: 30 });\n      return test.logEvents;\n    },\n    'should log a warning': function(events) {\n      assert.equal(events[0].level.toString(), 'WARN');\n      assert.equal(\n        events[0].data[0], \n        'Ignoring configuration reload parameter for \"object\" configuration.'\n      );\n    }\n  },\n\n  'when called twice with reload options': {\n    topic: function() {\n      var modulePath = require('path').normalize(__dirname + '/../lib/log4js.json'),\n      fakeFS = {\n        readFileSync: function (file, encoding) {\n          return JSON.stringify({});\n        },\n        statSync: function (path) {\n          return { mtime: new Date() };\n        }\n      },\n      fakeConsole = {\n        'name': 'console',\n        'appender': function () {\n          return function(evt) { };\n        },\n        'configure': function (config) {\n          return fakeConsole.appender();\n        }\n      },\n      setIntervalCallback,\n      intervalCleared = false,\n      clearedId,\n      fakeSetInterval = function(cb, timeout) {\n        setIntervalCallback = cb;\n        return 1234;\n      },\n      log4js = sandbox.require(\n        '../lib/log4js',\n        {\n          requires: {\n            'fs': fakeFS,\n            './appenders/console': fakeConsole\n          },\n          globals: {\n            'console': fakeConsole,\n            'setInterval' : fakeSetInterval,\n            'clearInterval': function(interval) {\n              intervalCleared = true;\n              clearedId = interval;\n            }\n          }\n        }\n      );\n      \n      log4js.configure(modulePath, { reloadSecs: 3 });\n      log4js.configure(modulePath, { reloadSecs: 15 });\n      \n      return { cleared: intervalCleared, id: clearedId };\n    },\n    'should clear the previous interval': function(result) {\n      assert.isTrue(result.cleared);\n      assert.equal(result.id, 1234);\n    }\n  }\n}).exportTo(module);\n"]}