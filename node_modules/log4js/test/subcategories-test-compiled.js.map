{"version":3,"sources":["subcategories-test.js"],"names":[],"mappings":"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","file":"subcategories-test-compiled.js","sourcesContent":["\"use strict\";\nvar assert = require('assert')\n, vows = require('vows')\n, sandbox = require('sandboxed-module')\n, log4js = require('../lib/log4js')\n, levels = require('../lib/levels');\n\nvows.describe('subcategories').addBatch({\n    'loggers created after levels configuration is loaded': {\n      topic: function() {\n\n        log4js.configure({\n          \"levels\": {\n            \"sub1\": \"WARN\",\n            \"sub1.sub11\": \"TRACE\",\n            \"sub1.sub11.sub111\": \"WARN\",\n            \"sub1.sub12\": \"INFO\"            \n          }\n        }, { reloadSecs: 30 })\n\n        return {\n          \"sub1\":  log4js.getLogger('sub1'), // WARN\n          \"sub11\":  log4js.getLogger('sub1.sub11'), // TRACE\n          \"sub111\":  log4js.getLogger('sub1.sub11.sub111'), // WARN\n          \"sub12\":  log4js.getLogger('sub1.sub12'), // INFO\n\n          \"sub13\":  log4js.getLogger('sub1.sub13'), // Inherits sub1: WARN\n          \"sub112\":  log4js.getLogger('sub1.sub11.sub112'), // Inherits sub1.sub11: TRACE\n          \"sub121\":  log4js.getLogger('sub1.sub12.sub121'), // Inherits sub12: INFO\n          \"sub0\":  log4js.getLogger('sub0') // Not defined, not inherited: TRACE\n        };\n      },\n      'check logger levels': function(loggers) {\n        assert.equal(loggers.sub1.level, levels.WARN);\n        assert.equal(loggers.sub11.level, levels.TRACE);\n        assert.equal(loggers.sub111.level, levels.WARN);\n        assert.equal(loggers.sub12.level, levels.INFO);\n\n        assert.equal(loggers.sub13.level, levels.WARN);\n        assert.equal(loggers.sub112.level, levels.TRACE);\n        assert.equal(loggers.sub121.level, levels.INFO);\n        assert.equal(loggers.sub0.level, levels.TRACE);         \n      }\n    },\n    'loggers created before levels configuration is loaded': {\n      topic: function() {\n\n        var loggers = {\n          \"sub1\":  log4js.getLogger('sub1'), // WARN\n          \"sub11\":  log4js.getLogger('sub1.sub11'), // TRACE\n          \"sub111\":  log4js.getLogger('sub1.sub11.sub111'), // WARN\n          \"sub12\":  log4js.getLogger('sub1.sub12'), // INFO\n\n          \"sub13\":  log4js.getLogger('sub1.sub13'), // Inherits sub1: WARN\n          \"sub112\":  log4js.getLogger('sub1.sub11.sub112'), // Inherits sub1.sub11: TRACE\n          \"sub121\":  log4js.getLogger('sub1.sub12.sub121'), // Inherits sub12: INFO\n          \"sub0\":  log4js.getLogger('sub0') // Not defined, not inherited: TRACE\n        };\n\n\n        log4js.configure({\n          \"levels\": {\n            \"sub1\": \"WARN\",\n            \"sub1.sub11\": \"TRACE\",\n            \"sub1.sub11.sub111\": \"WARN\",\n            \"sub1.sub12\": \"INFO\"            \n          }\n        }, { reloadSecs: 30 })\n\n        return loggers;\n\n\n      },\n      'check logger levels': function(loggers) {\n        assert.equal(loggers.sub1.level, levels.WARN);\n        assert.equal(loggers.sub11.level, levels.TRACE);\n        assert.equal(loggers.sub111.level, levels.WARN);\n        assert.equal(loggers.sub12.level, levels.INFO);\n\n        assert.equal(loggers.sub13.level, levels.WARN);\n        assert.equal(loggers.sub112.level, levels.TRACE);\n        assert.equal(loggers.sub121.level, levels.INFO);\n        assert.equal(loggers.sub0.level, levels.TRACE);         \n      }\n    }\n}).exportTo(module);\n"]}