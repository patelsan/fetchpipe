{"version":3,"sources":["ref-counter.js"],"names":[],"mappings":";;AAEA,YAAY,CAAC;;AAEb,IAAI,CAAC,GAAY,OAAO,CAAC,GAAG,CAAC;IACzB,UAAU,GAAG,OAAO,CAAC,8BAA8B,CAAC;IAEpD,MAAM,GAAG,MAAM,CAAC,MAAM;IAAE,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;;AAEvE,UAAU,CAAC,UAAU,GAAG,UAAU,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;AACxD,KAAI,KAAK,EAAE,OAAO,CAAC;;AAEnB,MAAK,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;AACrB,QAAO,GAAG,AAAC,OAAO,CAAC,KAAK,IAAI,UAAU,CAAC,KAAK,GAAI,OAAO,GAAG,EAAE,CAAC;;AAE7D,KAAI,CAAC,EAAE,CAAC,KAAK,GAAG,OAAO,EAAE,UAAU,EAAE,EAAE,MAAM,EAAE;AAAE,OAAK,CAAC,EAAE,CAAC,GAAG,MAAM,IAAI,CAAC,CAAC;EAAE,CAAC,CAAC;AAC7E,KAAI,CAAC,EAAE,CAAC,KAAK,GAAG,OAAO,EAAE,UAAU,EAAE,EAAE;AAAE,IAAE,KAAK,CAAC,EAAE,CAAC,CAAC;EAAE,CAAC,CAAC;AACzD,KAAI,CAAC,EAAE,CAAC,QAAQ,GAAG,OAAO,EAAE,UAAU,EAAE,EAAE;AAAE,SAAO,KAAK,CAAC,EAAE,CAAC,CAAC;EAAE,CAAC,CAAC;AACjE,KAAI,CAAC,EAAE,CAAC,OAAO,GAAG,OAAO,EAAE,YAAY;AAAE,OAAK,GAAG,EAAE,CAAC;EAAE,CAAC,CAAC;;AAExD,iBAAgB,CAAC,IAAI,CAAC,QAAQ,EAAE;AAC/B,WAAS,EAAE,CAAC,CAAC,YAAY;AACxB,OAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AAC7B,OAAI,EAAE,KAAK,IAAI,EAAE,OAAO,IAAI,CAAC;AAC7B,OAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,OAAO,IAAI,CAAC;AAC5B,OAAI,EAAC,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE;AACjB,QAAI,UAAO,CAAC,EAAE,CAAC,CAAC;AAChB,WAAO,IAAI,CAAC;IACZ;AACD,UAAO,KAAK,CAAC;GACb,CAAC;AACF,aAAW,EAAE,CAAC,CAAC,YAAY;AAC1B,OAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AAC7B,OAAI,EAAE,KAAK,IAAI,EAAE,OAAO,CAAC,CAAC;AAC1B,OAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC;AACzB,UAAO,KAAK,CAAC,EAAE,CAAC,CAAC;GACjB,CAAC;EACF,CAAC,CAAC;CACH,CAAC","file":"ref-counter-compiled.js","sourcesContent":["// Reference counter, useful for garbage collector like functionality\n\n'use strict';\n\nvar d          = require('d')\n  , extensions = require('../lib/registered-extensions')\n\n  , create = Object.create, defineProperties = Object.defineProperties;\n\nextensions.refCounter = function (ignore, conf, options) {\n\tvar cache, postfix;\n\n\tcache = create(null);\n\tpostfix = (options.async && extensions.async) ? 'async' : '';\n\n\tconf.on('set' + postfix, function (id, length) { cache[id] = length || 1; });\n\tconf.on('get' + postfix, function (id) { ++cache[id]; });\n\tconf.on('delete' + postfix, function (id) { delete cache[id]; });\n\tconf.on('clear' + postfix, function () { cache = {}; });\n\n\tdefineProperties(conf.memoized, {\n\t\tdeleteRef: d(function () {\n\t\t\tvar id = conf.get(arguments);\n\t\t\tif (id === null) return null;\n\t\t\tif (!cache[id]) return null;\n\t\t\tif (!--cache[id]) {\n\t\t\t\tconf.delete(id);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}),\n\t\tgetRefCount: d(function () {\n\t\t\tvar id = conf.get(arguments);\n\t\t\tif (id === null) return 0;\n\t\t\tif (!cache[id]) return 0;\n\t\t\treturn cache[id];\n\t\t})\n\t});\n};\n"]}