{"version":3,"sources":["utils.js"],"names":[],"mappings":"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","file":"utils-compiled.js","sourcesContent":["'use strict';\n\nvar path = require('path');\nvar fileRe = require('filename-regex');\nvar win32 = process && process.platform === 'win32';\n\n/**\n * Expose `utils`\n */\n\nvar utils = module.exports;\n\n\nutils.filename = function filename(fp) {\n  var seg = fp.match(fileRe());\n  return seg && seg[0];\n};\n\nutils.isPath = function isPath(pattern, opts) {\n  return function (fp) {\n    return utils.unixify(fp, opts) === pattern;\n  };\n};\n\nutils.hasPath = function hasPath(pattern, opts) {\n  return function (fp) {\n    return utils.unixify(fp, opts).indexOf(pattern) !== -1;\n  };\n};\n\nutils.matchPath = function matchPath(pattern, opts) {\n  var fn = (opts && opts.contains)\n    ? utils.hasPath(pattern, opts)\n    : utils.isPath(pattern, opts);\n  return fn;\n};\n\nutils.hasFilename = function hasFilename(re) {\n  return function (fp) {\n    var name = utils.filename(fp);\n    return name && re.test(name);\n  };\n};\n\n/**\n * Coerce `val` to an array\n *\n * @param  {*} val\n * @return {Array}\n */\n\nutils.arrayify = function arrayify(val) {\n  return !Array.isArray(val)\n    ? [val]\n    : val;\n};\n\n/**\n * Normalize all slashes in a file path or glob pattern to\n * forward slashes.\n */\n\nutils.unixify = function unixify(fp, opts) {\n  if (opts && opts.unixify === false) return fp;\n  if (opts && opts.unixify === true || win32 || path.sep === '\\\\') {\n    return fp.split('\\\\').join('/');\n  }\n  if (opts && opts.unescape === true) {\n    return fp ? fp.toString().replace(/\\\\(\\w)/g, '$1') : '';\n  }\n  return fp;\n};\n\n/**\n * Escape/unescape utils\n */\n\nutils.escapePath = function escapePath(fp) {\n  return fp.replace(/[\\\\.]/g, '\\\\$&');\n};\n\nutils.unescapeGlob = function unescapeGlob(fp) {\n  return fp.replace(/[\\\\\"']/g, '');\n};\n\nutils.escapeRe = function escapeRe(str) {\n  return str.replace(/[-[\\\\$*+?.#^\\s{}(|)\\]]/g, '\\\\$&');\n};\n"]}