{"version":3,"sources":["bool.js"],"names":[],"mappings":"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","file":"bool-compiled.js","sourcesContent":["var parse = require('../');\nvar test = require('tape');\n\ntest('flag boolean default false', function (t) {\n    var argv = parse(['moo'], {\n        boolean: ['t', 'verbose'],\n        default: { verbose: false, t: false }\n    });\n    \n    t.deepEqual(argv, {\n        verbose: false,\n        t: false,\n        _: ['moo']\n    });\n    \n    t.deepEqual(typeof argv.verbose, 'boolean');\n    t.deepEqual(typeof argv.t, 'boolean');\n    t.end();\n\n});\n\ntest('boolean groups', function (t) {\n    var argv = parse([ '-x', '-z', 'one', 'two', 'three' ], {\n        boolean: ['x','y','z']\n    });\n    \n    t.deepEqual(argv, {\n        x : true,\n        y : false,\n        z : true,\n        _ : [ 'one', 'two', 'three' ]\n    });\n    \n    t.deepEqual(typeof argv.x, 'boolean');\n    t.deepEqual(typeof argv.y, 'boolean');\n    t.deepEqual(typeof argv.z, 'boolean');\n    t.end();\n});\ntest('boolean and alias with chainable api', function (t) {\n    var aliased = [ '-h', 'derp' ];\n    var regular = [ '--herp',  'derp' ];\n    var opts = {\n        herp: { alias: 'h', boolean: true }\n    };\n    var aliasedArgv = parse(aliased, {\n        boolean: 'herp',\n        alias: { h: 'herp' }\n    });\n    var propertyArgv = parse(regular, {\n        boolean: 'herp',\n        alias: { h: 'herp' }\n    });\n    var expected = {\n        herp: true,\n        h: true,\n        '_': [ 'derp' ]\n    };\n    \n    t.same(aliasedArgv, expected);\n    t.same(propertyArgv, expected); \n    t.end();\n});\n\ntest('boolean and alias with options hash', function (t) {\n    var aliased = [ '-h', 'derp' ];\n    var regular = [ '--herp', 'derp' ];\n    var opts = {\n        alias: { 'h': 'herp' },\n        boolean: 'herp'\n    };\n    var aliasedArgv = parse(aliased, opts);\n    var propertyArgv = parse(regular, opts);\n    var expected = {\n        herp: true,\n        h: true,\n        '_': [ 'derp' ]\n    };\n    t.same(aliasedArgv, expected);\n    t.same(propertyArgv, expected);\n    t.end();\n});\n\ntest('boolean and alias array with options hash', function (t) {\n    var aliased = [ '-h', 'derp' ];\n    var regular = [ '--herp', 'derp' ];\n    var alt = [ '--harp', 'derp' ];\n    var opts = {\n        alias: { 'h': ['herp', 'harp'] },\n        boolean: 'h'\n    };\n    var aliasedArgv = parse(aliased, opts);\n    var propertyArgv = parse(regular, opts);\n    var altPropertyArgv = parse(alt, opts);\n    var expected = {\n        harp: true,\n        herp: true,\n        h: true,\n        '_': [ 'derp' ]\n    };\n    t.same(aliasedArgv, expected);\n    t.same(propertyArgv, expected);\n    t.same(altPropertyArgv, expected);\n    t.end();\n});\n\ntest('boolean and alias using explicit true', function (t) {\n    var aliased = [ '-h', 'true' ];\n    var regular = [ '--herp',  'true' ];\n    var opts = {\n        alias: { h: 'herp' },\n        boolean: 'h'\n    };\n    var aliasedArgv = parse(aliased, opts);\n    var propertyArgv = parse(regular, opts);\n    var expected = {\n        herp: true,\n        h: true,\n        '_': [ ]\n    };\n\n    t.same(aliasedArgv, expected);\n    t.same(propertyArgv, expected); \n    t.end();\n});\n\n// regression, see https://github.com/substack/node-optimist/issues/71\ntest('boolean and --x=true', function(t) {\n    var parsed = parse(['--boool', '--other=true'], {\n        boolean: 'boool'\n    });\n\n    t.same(parsed.boool, true);\n    t.same(parsed.other, 'true');\n\n    parsed = parse(['--boool', '--other=false'], {\n        boolean: 'boool'\n    });\n    \n    t.same(parsed.boool, true);\n    t.same(parsed.other, 'false');\n    t.end();\n});\n\ntest('boolean --boool=true', function (t) {\n    var parsed = parse(['--boool=true'], {\n        default: {\n            boool: false\n        },\n        boolean: ['boool']\n    });\n\n    t.same(parsed.boool, true);\n    t.end();\n});\n\ntest('boolean --boool=false', function (t) {\n    var parsed = parse(['--boool=false'], {\n        default: {\n          boool: true\n        },\n        boolean: ['boool']\n    });\n\n    t.same(parsed.boool, false);\n    t.end();\n});\n"]}