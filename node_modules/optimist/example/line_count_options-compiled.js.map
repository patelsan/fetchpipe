{"version":3,"sources":["line_count_options.js"],"names":[],"mappings":";;AACA,IAAI,IAAI,GAAG,OAAO,CAAC,UAAU,CAAC,CACzB,KAAK,CAAC,uCAAuC,CAAC,CAC9C,OAAO,CAAC;AACL,QAAI,EAAG;AACH,cAAM,EAAG,IAAI;AACb,aAAK,EAAG,GAAG;AACX,mBAAW,EAAG,aAAa;KAC9B;AACD,QAAI,EAAG;AACH,aAAK,EAAG,GAAG;AACX,mBAAW,EAAG,gCAAgC;AAC9C,mBAAU,EAAE;KACf;CACJ,CAAC,CACD,IAAI,CACR;;AAED,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AACvB,IAAI,CAAC,GAAG,EAAE,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AAEvC,IAAI,KAAK,GAAG,CAAC,CAAC;AACd,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE,UAAU,GAAG,EAAE;AACxB,SAAK,IAAI,GAAG,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC;CAC/C,CAAC,CAAC;;AAEH,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,YAAY;AACpB,WAAO,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;CAC1C,CAAC,CAAC","file":"line_count_options-compiled.js","sourcesContent":["#!/usr/bin/env node\nvar argv = require('optimist')\n    .usage('Count the lines in a file.\\nUsage: $0')\n    .options({\n        file : {\n            demand : true,\n            alias : 'f',\n            description : 'Load a file'\n        },\n        base : {\n            alias : 'b',\n            description : 'Numeric base to use for output',\n            default : 10,\n        },\n    })\n    .argv\n;\n\nvar fs = require('fs');\nvar s = fs.createReadStream(argv.file);\n\nvar lines = 0;\ns.on('data', function (buf) {\n    lines += buf.toString().match(/\\n/g).length;\n});\n\ns.on('end', function () {\n    console.log(lines.toString(argv.base));\n});\n"]}