{"version":3,"sources":["line_count_wrap.js"],"names":[],"mappings":";;AACA,IAAI,IAAI,GAAG,OAAO,CAAC,UAAU,CAAC,CACzB,KAAK,CAAC,uCAAuC,CAAC,CAC9C,IAAI,CAAC,EAAE,CAAC,CACR,MAAM,CAAC,GAAG,CAAC,CACX,KAAK,CAAC,GAAG,EAAE,CAAE,MAAM,EAAE,UAAU,CAAE,CAAC,CAClC,QAAQ,CAAC,GAAG,EACT,qCAAqC,GACnC,6CAA6C,CAClD,CACA,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,CAClB,QAAQ,CAAC,GAAG,EAAE,gDAAgD,CAAC,WACxD,CAAC,GAAG,EAAE,EAAE,CAAC,CAChB,QAAQ,CAAC,GAAG,EAAE,iDAAiD,CAAC,WACzD,CAAC,GAAG,EAAE,EAAE,CAAC,CAChB,IAAI,CACR;;AAED,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AACvB,IAAI,CAAC,GAAG,EAAE,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AAEvC,IAAI,KAAK,GAAG,CAAC,CAAC;AACd,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE,UAAU,GAAG,EAAE;AACxB,SAAK,IAAI,GAAG,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC;CAC/C,CAAC,CAAC;;AAEH,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,YAAY;AACpB,WAAO,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;CAC1C,CAAC,CAAC","file":"line_count_wrap-compiled.js","sourcesContent":["#!/usr/bin/env node\nvar argv = require('optimist')\n    .usage('Count the lines in a file.\\nUsage: $0')\n    .wrap(80)\n    .demand('f')\n    .alias('f', [ 'file', 'filename' ])\n    .describe('f',\n        \"Load a file. It's pretty important.\"\n        + \" Required even. So you'd better specify it.\"\n    )\n    .alias('b', 'base')\n    .describe('b', 'Numeric base to display the number of lines in')\n    .default('b', 10)\n    .describe('x', 'Super-secret optional parameter which is secret')\n    .default('x', '')\n    .argv\n;\n\nvar fs = require('fs');\nvar s = fs.createReadStream(argv.file);\n\nvar lines = 0;\ns.on('data', function (buf) {\n    lines += buf.toString().match(/\\n/g).length;\n});\n\ns.on('end', function () {\n    console.log(lines.toString(argv.base));\n});\n"]}