{"version":3,"sources":["parse.js"],"names":[],"mappings":"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","file":"parse-compiled.js","sourcesContent":["var optimist = require('../index');\nvar path = require('path');\nvar test = require('tap').test;\n\nvar $0 = 'node ./' + path.relative(process.cwd(), __filename);\n\ntest('short boolean', function (t) {\n    var parse = optimist.parse([ '-b' ]);\n    t.same(parse, { b : true, _ : [], $0 : $0 });\n    t.same(typeof parse.b, 'boolean');\n    t.end();\n});\n\ntest('long boolean', function (t) {\n    t.same(\n        optimist.parse([ '--bool' ]),\n        { bool : true, _ : [], $0 : $0 }\n    );\n    t.end();\n});\n    \ntest('bare', function (t) {\n    t.same(\n        optimist.parse([ 'foo', 'bar', 'baz' ]),\n        { _ : [ 'foo', 'bar', 'baz' ], $0 : $0 }\n    );\n    t.end();\n});\n\ntest('short group', function (t) {\n    t.same(\n        optimist.parse([ '-cats' ]),\n        { c : true, a : true, t : true, s : true, _ : [], $0 : $0 }\n    );\n    t.end();\n});\n\ntest('short group next', function (t) {\n    t.same(\n        optimist.parse([ '-cats', 'meow' ]),\n        { c : true, a : true, t : true, s : 'meow', _ : [], $0 : $0 }\n    );\n    t.end();\n});\n \ntest('short capture', function (t) {\n    t.same(\n        optimist.parse([ '-h', 'localhost' ]),\n        { h : 'localhost', _ : [], $0 : $0 }\n    );\n    t.end();\n});\n\ntest('short captures', function (t) {\n    t.same(\n        optimist.parse([ '-h', 'localhost', '-p', '555' ]),\n        { h : 'localhost', p : 555, _ : [], $0 : $0 }\n    );\n    t.end();\n});\n\ntest('long capture sp', function (t) {\n    t.same(\n        optimist.parse([ '--pow', 'xixxle' ]),\n        { pow : 'xixxle', _ : [], $0 : $0 }\n    );\n    t.end();\n});\n\ntest('long capture eq', function (t) {\n    t.same(\n        optimist.parse([ '--pow=xixxle' ]),\n        { pow : 'xixxle', _ : [], $0 : $0 }\n    );\n    t.end()\n});\n\ntest('long captures sp', function (t) {\n    t.same(\n        optimist.parse([ '--host', 'localhost', '--port', '555' ]),\n        { host : 'localhost', port : 555, _ : [], $0 : $0 }\n    );\n    t.end();\n});\n\ntest('long captures eq', function (t) {\n    t.same(\n        optimist.parse([ '--host=localhost', '--port=555' ]),\n        { host : 'localhost', port : 555, _ : [], $0 : $0 }\n    );\n    t.end();\n});\n\ntest('mixed short bool and capture', function (t) {\n    t.same(\n        optimist.parse([ '-h', 'localhost', '-fp', '555', 'script.js' ]),\n        {\n            f : true, p : 555, h : 'localhost',\n            _ : [ 'script.js' ], $0 : $0,\n        }\n    );\n    t.end();\n});\n \ntest('short and long', function (t) {\n    t.same(\n        optimist.parse([ '-h', 'localhost', '-fp', '555', 'script.js' ]),\n        {\n            f : true, p : 555, h : 'localhost',\n            _ : [ 'script.js' ], $0 : $0,\n        }\n    );\n    t.end();\n});\n\ntest('no', function (t) {\n    t.same(\n        optimist.parse([ '--no-moo' ]),\n        { moo : false, _ : [], $0 : $0 }\n    );\n    t.end();\n});\n \ntest('multi', function (t) {\n    t.same(\n        optimist.parse([ '-v', 'a', '-v', 'b', '-v', 'c' ]),\n        { v : ['a','b','c'], _ : [], $0 : $0 }\n    );\n    t.end();\n});\n \ntest('comprehensive', function (t) {\n    t.same(\n        optimist.parse([\n            '--name=meowmers', 'bare', '-cats', 'woo',\n            '-h', 'awesome', '--multi=quux',\n            '--key', 'value',\n            '-b', '--bool', '--no-meep', '--multi=baz',\n            '--', '--not-a-flag', 'eek'\n        ]),\n        {\n            c : true,\n            a : true,\n            t : true,\n            s : 'woo',\n            h : 'awesome',\n            b : true,\n            bool : true,\n            key : 'value',\n            multi : [ 'quux', 'baz' ],\n            meep : false,\n            name : 'meowmers',\n            _ : [ 'bare', '--not-a-flag', 'eek' ],\n            $0 : $0\n        }\n    );\n    t.end();\n});\n\ntest('nums', function (t) {\n    var argv = optimist.parse([\n        '-x', '1234',\n        '-y', '5.67',\n        '-z', '1e7',\n        '-w', '10f',\n        '--hex', '0xdeadbeef',\n        '789',\n    ]);\n    t.same(argv, {\n        x : 1234,\n        y : 5.67,\n        z : 1e7,\n        w : '10f',\n        hex : 0xdeadbeef,\n        _ : [ 789 ],\n        $0 : $0\n    });\n    t.same(typeof argv.x, 'number');\n    t.same(typeof argv.y, 'number');\n    t.same(typeof argv.z, 'number');\n    t.same(typeof argv.w, 'string');\n    t.same(typeof argv.hex, 'number');\n    t.same(typeof argv._[0], 'number');\n    t.end();\n});\n\ntest('flag boolean', function (t) {\n    var parse = optimist([ '-t', 'moo' ]).boolean(['t']).argv;\n    t.same(parse, { t : true, _ : [ 'moo' ], $0 : $0 });\n    t.same(typeof parse.t, 'boolean');\n    t.end();\n});\n\ntest('flag boolean value', function (t) {\n    var parse = optimist(['--verbose', 'false', 'moo', '-t', 'true'])\n        .boolean(['t', 'verbose']).default('verbose', true).argv;\n    \n    t.same(parse, {\n        verbose: false,\n        t: true,\n        _: ['moo'],\n        $0 : $0\n    });\n    \n    t.same(typeof parse.verbose, 'boolean');\n    t.same(typeof parse.t, 'boolean');\n    t.end();\n});\n\ntest('flag boolean default false', function (t) {\n    var parse = optimist(['moo'])\n        .boolean(['t', 'verbose'])\n        .default('verbose', false)\n        .default('t', false).argv;\n    \n    t.same(parse, {\n        verbose: false,\n        t: false,\n        _: ['moo'],\n        $0 : $0\n    });\n    \n    t.same(typeof parse.verbose, 'boolean');\n    t.same(typeof parse.t, 'boolean');\n    t.end();\n\n});\n\ntest('boolean groups', function (t) {\n    var parse = optimist([ '-x', '-z', 'one', 'two', 'three' ])\n        .boolean(['x','y','z']).argv;\n    \n    t.same(parse, {\n        x : true,\n        y : false,\n        z : true,\n        _ : [ 'one', 'two', 'three' ],\n        $0 : $0\n    });\n    \n    t.same(typeof parse.x, 'boolean');\n    t.same(typeof parse.y, 'boolean');\n    t.same(typeof parse.z, 'boolean');\n    t.end();\n});\n\ntest('newlines in params' , function (t) {\n    var args = optimist.parse([ '-s', \"X\\nX\" ])\n    t.same(args, { _ : [], s : \"X\\nX\", $0 : $0 });\n\n    // reproduce in bash:\n    // VALUE=\"new\n    // line\"\n    // node program.js --s=\"$VALUE\"\n    args = optimist.parse([ \"--s=X\\nX\" ])\n    t.same(args, { _ : [], s : \"X\\nX\", $0 : $0 });\n    t.end();\n});\n\ntest('strings' , function (t) {\n    var s = optimist([ '-s', '0001234' ]).string('s').argv.s;\n    t.same(s, '0001234');\n    t.same(typeof s, 'string');\n    \n    var x = optimist([ '-x', '56' ]).string('x').argv.x;\n    t.same(x, '56');\n    t.same(typeof x, 'string');\n    t.end();\n});\n\ntest('stringArgs', function (t) {\n    var s = optimist([ '  ', '  ' ]).string('_').argv._;\n    t.same(s.length, 2);\n    t.same(typeof s[0], 'string');\n    t.same(s[0], '  ');\n    t.same(typeof s[1], 'string');\n    t.same(s[1], '  ');\n    t.end();\n});\n\ntest('slashBreak', function (t) {\n    t.same(\n        optimist.parse([ '-I/foo/bar/baz' ]),\n        { I : '/foo/bar/baz', _ : [], $0 : $0 }\n    );\n    t.same(\n        optimist.parse([ '-xyz/foo/bar/baz' ]),\n        { x : true, y : true, z : '/foo/bar/baz', _ : [], $0 : $0 }\n    );\n    t.end();\n});\n\ntest('alias', function (t) {\n    var argv = optimist([ '-f', '11', '--zoom', '55' ])\n        .alias('z', 'zoom')\n        .argv\n    ;\n    t.equal(argv.zoom, 55);\n    t.equal(argv.z, argv.zoom);\n    t.equal(argv.f, 11);\n    t.end();\n});\n\ntest('multiAlias', function (t) {\n    var argv = optimist([ '-f', '11', '--zoom', '55' ])\n        .alias('z', [ 'zm', 'zoom' ])\n        .argv\n    ;\n    t.equal(argv.zoom, 55);\n    t.equal(argv.z, argv.zoom);\n    t.equal(argv.z, argv.zm);\n    t.equal(argv.f, 11);\n    t.end();\n});\n\ntest('boolean default true', function (t) {\n    var argv = optimist.options({\n        sometrue: {\n            boolean: true,\n            default: true\n        }\n    }).argv;\n  \n    t.equal(argv.sometrue, true);\n    t.end();\n});\n\ntest('boolean default false', function (t) {\n    var argv = optimist.options({\n        somefalse: {\n            boolean: true,\n            default: false\n        }\n    }).argv;\n\n    t.equal(argv.somefalse, false);\n    t.end();\n});\n\ntest('nested dotted objects', function (t) {\n    var argv = optimist([\n        '--foo.bar', '3', '--foo.baz', '4',\n        '--foo.quux.quibble', '5', '--foo.quux.o_O',\n        '--beep.boop'\n    ]).argv;\n    \n    t.same(argv.foo, {\n        bar : 3,\n        baz : 4,\n        quux : {\n            quibble : 5,\n            o_O : true\n        },\n    });\n    t.same(argv.beep, { boop : true });\n    t.end();\n});\n\ntest('boolean and alias with chainable api', function (t) {\n    var aliased = [ '-h', 'derp' ];\n    var regular = [ '--herp',  'derp' ];\n    var opts = {\n        herp: { alias: 'h', boolean: true }\n    };\n    var aliasedArgv = optimist(aliased)\n        .boolean('herp')\n        .alias('h', 'herp')\n        .argv;\n    var propertyArgv = optimist(regular)\n        .boolean('herp')\n        .alias('h', 'herp')\n        .argv;\n    var expected = {\n        herp: true,\n        h: true,\n        '_': [ 'derp' ],\n        '$0': $0,\n    };\n\n    t.same(aliasedArgv, expected);\n    t.same(propertyArgv, expected); \n    t.end();\n});\n\ntest('boolean and alias with options hash', function (t) {\n    var aliased = [ '-h', 'derp' ];\n    var regular = [ '--herp', 'derp' ];\n    var opts = {\n        herp: { alias: 'h', boolean: true }\n    };\n    var aliasedArgv = optimist(aliased)\n      .options(opts)\n      .argv;\n    var propertyArgv = optimist(regular).options(opts).argv;\n    var expected = {\n        herp: true,\n        h: true,\n        '_': [ 'derp' ],\n        '$0': $0,\n    };\n\n    t.same(aliasedArgv, expected);\n    t.same(propertyArgv, expected);\n\n    t.end();\n});\n\ntest('boolean and alias using explicit true', function (t) {\n    var aliased = [ '-h', 'true' ];\n    var regular = [ '--herp',  'true' ];\n    var opts = {\n        herp: { alias: 'h', boolean: true }\n    };\n    var aliasedArgv = optimist(aliased)\n        .boolean('h')\n        .alias('h', 'herp')\n        .argv;\n    var propertyArgv = optimist(regular)\n        .boolean('h')\n        .alias('h', 'herp')\n        .argv;\n    var expected = {\n        herp: true,\n        h: true,\n        '_': [ ],\n        '$0': $0,\n    };\n\n    t.same(aliasedArgv, expected);\n    t.same(propertyArgv, expected); \n    t.end();\n});\n\n// regression, see https://github.com/substack/node-optimist/issues/71\ntest('boolean and --x=true', function(t) {\n    var parsed = optimist(['--boool', '--other=true']).boolean('boool').argv;\n\n    t.same(parsed.boool, true);\n    t.same(parsed.other, 'true');\n\n    parsed = optimist(['--boool', '--other=false']).boolean('boool').argv;\n\n    t.same(parsed.boool, true);\n    t.same(parsed.other, 'false');\n    t.end();\n});\n"]}