{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["/*!\n * parse-glob <https://github.com/jonschlinkert/parse-glob>\n *\n * Copyright (c) 2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar isGlob = require('is-glob');\nvar findBase = require('glob-base');\nvar extglob = require('is-extglob');\nvar dotfile = require('is-dotfile');\n\n/**\n * Expose `cache`\n */\n\nvar cache = module.exports.cache = {};\n\n/**\n * Parse a glob pattern into tokens.\n *\n * When no paths or '**' are in the glob, we use a\n * different strategy for parsing the filename, since\n * file names can contain braces and other difficult\n * patterns. such as:\n *\n *  - `*.{a,b}`\n *  - `(**|*.js)`\n */\n\nmodule.exports = function parseGlob(glob) {\n  if (cache.hasOwnProperty(glob)) {\n    return cache[glob];\n  }\n\n  var tok = {};\n  tok.orig = glob;\n  tok.is = {};\n\n  // unescape dots and slashes in braces/brackets\n  glob = escape(glob);\n\n  var parsed = findBase(glob);\n  tok.is.glob = parsed.isGlob;\n\n  tok.glob = parsed.glob;\n  tok.base = parsed.base;\n  var segs = /([^\\/]*)$/.exec(glob);\n\n  tok.path = {};\n  tok.path.dirname = '';\n  tok.path.basename = segs[1] || '';\n  tok.path.dirname = glob.split(tok.path.basename).join('') || '';\n  var basename = (tok.path.basename || '').split('.') || '';\n  tok.path.filename = basename[0] || '';\n  tok.path.extname = basename.slice(1).join('.') || '';\n  tok.path.ext = '';\n\n  if (isGlob(tok.path.dirname) && !tok.path.basename) {\n    if (!/\\/$/.test(tok.glob)) {\n      tok.path.basename = tok.glob;\n    }\n    tok.path.dirname = tok.base;\n  }\n\n  if (glob.indexOf('/') === -1 && !tok.is.globstar) {\n    tok.path.dirname = '';\n    tok.path.basename = tok.orig;\n  }\n\n  var dot = tok.path.basename.indexOf('.');\n  if (dot !== -1) {\n    tok.path.filename = tok.path.basename.slice(0, dot);\n    tok.path.extname = tok.path.basename.slice(dot);\n  }\n\n  if (tok.path.extname.charAt(0) === '.') {\n    var exts = tok.path.extname.split('.');\n    tok.path.ext = exts[exts.length - 1];\n  }\n\n  // unescape dots and slashes in braces/brackets\n  tok.glob = unescape(tok.glob);\n  tok.path.dirname = unescape(tok.path.dirname);\n  tok.path.basename = unescape(tok.path.basename);\n  tok.path.filename = unescape(tok.path.filename);\n  tok.path.extname = unescape(tok.path.extname);\n\n  // Booleans\n  var is = (glob && tok.is.glob);\n  tok.is.negated  = glob && glob.charAt(0) === '!';\n  tok.is.extglob  = glob && extglob(glob);\n  tok.is.braces   = has(is, glob, '{');\n  tok.is.brackets = has(is, glob, '[:');\n  tok.is.globstar = has(is, glob, '**');\n  tok.is.dotfile  = dotfile(tok.path.basename) || dotfile(tok.path.filename);\n  tok.is.dotdir   = dotdir(tok.path.dirname);\n  return (cache[glob] = tok);\n}\n\n/**\n * Returns true if the glob matches dot-directories.\n *\n * @param  {Object} `tok` The tokens object\n * @param  {Object} `path` The path object\n * @return {Object}\n */\n\nfunction dotdir(base) {\n  if (base.indexOf('/.') !== -1) {\n    return true;\n  }\n  if (base.charAt(0) === '.' && base.charAt(1) !== '/') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if the pattern has the given `ch`aracter(s)\n *\n * @param  {Object} `glob` The glob pattern.\n * @param  {Object} `ch` The character to test for\n * @return {Object}\n */\n\nfunction has(is, glob, ch) {\n  return is && glob.indexOf(ch) !== -1;\n}\n\n/**\n * Escape/unescape utils\n */\n\nfunction escape(str) {\n  var re = /\\{([^{}]*?)}|\\(([^()]*?)\\)|\\[([^\\[\\]]*?)\\]/g;\n  return str.replace(re, function (outter, braces, parens, brackets) {\n    var inner = braces || parens || brackets;\n    if (!inner) { return outter; }\n    return outter.split(inner).join(esc(inner));\n  });\n}\n\nfunction esc(str) {\n  str = str.split('/').join('__SLASH__');\n  str = str.split('.').join('__DOT__');\n  return str;\n}\n\nfunction unescape(str) {\n  str = str.split('__SLASH__').join('/');\n  str = str.split('__DOT__').join('.');\n  return str;\n}\n"]}