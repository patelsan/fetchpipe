{"version":3,"sources":["q.js"],"names":[],"mappings":"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","file":"q-compiled.js","sourcesContent":["// vim:ts=4:sts=4:sw=4:\n/*!\n *\n * Copyright 2009-2012 Kris Kowal under the terms of the MIT\n * license found at http://github.com/kriskowal/q/raw/master/LICENSE\n *\n * With parts by Tyler Close\n * Copyright 2007-2009 Tyler Close under the terms of the MIT X license found\n * at http://www.opensource.org/licenses/mit-license.html\n * Forked at ref_send.js version: 2009-05-11\n *\n * With parts by Mark Miller\n * Copyright (C) 2011 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n(function (definition) {\n    \"use strict\";\n\n    // This file will function properly as a <script> tag, or a module\n    // using CommonJS and NodeJS or RequireJS module formats.  In\n    // Common/Node/RequireJS, the module exports the Q API and when\n    // executed as a simple <script>, it creates a Q global instead.\n\n    // Montage Require\n    if (typeof bootstrap === \"function\") {\n        bootstrap(\"promise\", definition);\n\n    // CommonJS\n    } else if (typeof exports === \"object\" && typeof module === \"object\") {\n        module.exports = definition();\n\n    // RequireJS\n    } else if (typeof define === \"function\" && define.amd) {\n        define(definition);\n\n    // SES (Secure EcmaScript)\n    } else if (typeof ses !== \"undefined\") {\n        if (!ses.ok()) {\n            return;\n        } else {\n            ses.makeQ = definition;\n        }\n\n    // <script>\n    } else if (typeof self !== \"undefined\") {\n        self.Q = definition();\n\n    } else {\n        throw new Error(\"This environment was not anticiapted by Q. Please file a bug.\");\n    }\n\n})(function () {\n\"use strict\";\n\nvar hasStacks = false;\ntry {\n    throw new Error();\n} catch (e) {\n    hasStacks = !!e.stack;\n}\n\n// All code after this point will be filtered from stack traces reported\n// by Q.\nvar qStartingLine = captureLine();\nvar qFileName;\n\n// shims\n\n// used for fallback in \"allResolved\"\nvar noop = function () {};\n\n// Use the fastest possible means to execute a task in a future turn\n// of the event loop.\nvar nextTick =(function () {\n    // linked list of tasks (single, with head node)\n    var head = {task: void 0, next: null};\n    var tail = head;\n    var flushing = false;\n    var requestTick = void 0;\n    var isNodeJS = false;\n\n    function flush() {\n        /* jshint loopfunc: true */\n\n        while (head.next) {\n            head = head.next;\n            var task = head.task;\n            head.task = void 0;\n            var domain = head.domain;\n\n            if (domain) {\n                head.domain = void 0;\n                domain.enter();\n            }\n\n            try {\n                task();\n\n            } catch (e) {\n                if (isNodeJS) {\n                    // In node, uncaught exceptions are considered fatal errors.\n                    // Re-throw them synchronously to interrupt flushing!\n\n                    // Ensure continuation if the uncaught exception is suppressed\n                    // listening \"uncaughtException\" events (as domains does).\n                    // Continue in next event to avoid tick recursion.\n                    if (domain) {\n                        domain.exit();\n                    }\n                    setTimeout(flush, 0);\n                    if (domain) {\n                        domain.enter();\n                    }\n\n                    throw e;\n\n                } else {\n                    // In browsers, uncaught exceptions are not fatal.\n                    // Re-throw them asynchronously to avoid slow-downs.\n                    setTimeout(function() {\n                       throw e;\n                    }, 0);\n                }\n            }\n\n            if (domain) {\n                domain.exit();\n            }\n        }\n\n        flushing = false;\n    }\n\n    nextTick = function (task) {\n        tail = tail.next = {\n            task: task,\n            domain: isNodeJS && process.domain,\n            next: null\n        };\n\n        if (!flushing) {\n            flushing = true;\n            requestTick();\n        }\n    };\n\n    if (typeof process !== \"undefined\" && process.nextTick) {\n        // Node.js before 0.9. Note that some fake-Node environments, like the\n        // Mocha test runner, introduce a `process` global without a `nextTick`.\n        isNodeJS = true;\n\n        requestTick = function () {\n            process.nextTick(flush);\n        };\n\n    } else if (typeof setImmediate === \"function\") {\n        // In IE10, Node.js 0.9+, or https://github.com/NobleJS/setImmediate\n        if (typeof window !== \"undefined\") {\n            requestTick = setImmediate.bind(window, flush);\n        } else {\n            requestTick = function () {\n                setImmediate(flush);\n            };\n        }\n\n    } else if (typeof MessageChannel !== \"undefined\") {\n        // modern browsers\n        // http://www.nonblocking.io/2011/06/windownexttick.html\n        var channel = new MessageChannel();\n        // At least Safari Version 6.0.5 (8536.30.1) intermittently cannot create\n        // working message ports the first time a page loads.\n        channel.port1.onmessage = function () {\n            requestTick = requestPortTick;\n            channel.port1.onmessage = flush;\n            flush();\n        };\n        var requestPortTick = function () {\n            // Opera requires us to provide a message payload, regardless of\n            // whether we use it.\n            channel.port2.postMessage(0);\n        };\n        requestTick = function () {\n            setTimeout(flush, 0);\n            requestPortTick();\n        };\n\n    } else {\n        // old browsers\n        requestTick = function () {\n            setTimeout(flush, 0);\n        };\n    }\n\n    return nextTick;\n})();\n\n// Attempt to make generics safe in the face of downstream\n// modifications.\n// There is no situation where this is necessary.\n// If you need a security guarantee, these primordials need to be\n// deeply frozen anyway, and if you don’t need a security guarantee,\n// this is just plain paranoid.\n// However, this **might** have the nice side-effect of reducing the size of\n// the minified code by reducing x.call() to merely x()\n// See Mark Miller’s explanation of what this does.\n// http://wiki.ecmascript.org/doku.php?id=conventions:safe_meta_programming\nvar call = Function.call;\nfunction uncurryThis(f) {\n    return function () {\n        return call.apply(f, arguments);\n    };\n}\n// This is equivalent, but slower:\n// uncurryThis = Function_bind.bind(Function_bind.call);\n// http://jsperf.com/uncurrythis\n\nvar array_slice = uncurryThis(Array.prototype.slice);\n\nvar array_reduce = uncurryThis(\n    Array.prototype.reduce || function (callback, basis) {\n        var index = 0,\n            length = this.length;\n        // concerning the initial value, if one is not provided\n        if (arguments.length === 1) {\n            // seek to the first value in the array, accounting\n            // for the possibility that is is a sparse array\n            do {\n                if (index in this) {\n                    basis = this[index++];\n                    break;\n                }\n                if (++index >= length) {\n                    throw new TypeError();\n                }\n            } while (1);\n        }\n        // reduce\n        for (; index < length; index++) {\n            // account for the possibility that the array is sparse\n            if (index in this) {\n                basis = callback(basis, this[index], index);\n            }\n        }\n        return basis;\n    }\n);\n\nvar array_indexOf = uncurryThis(\n    Array.prototype.indexOf || function (value) {\n        // not a very good shim, but good enough for our one use of it\n        for (var i = 0; i < this.length; i++) {\n            if (this[i] === value) {\n                return i;\n            }\n        }\n        return -1;\n    }\n);\n\nvar array_map = uncurryThis(\n    Array.prototype.map || function (callback, thisp) {\n        var self = this;\n        var collect = [];\n        array_reduce(self, function (undefined, value, index) {\n            collect.push(callback.call(thisp, value, index, self));\n        }, void 0);\n        return collect;\n    }\n);\n\nvar object_create = Object.create || function (prototype) {\n    function Type() { }\n    Type.prototype = prototype;\n    return new Type();\n};\n\nvar object_hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\n\nvar object_keys = Object.keys || function (object) {\n    var keys = [];\n    for (var key in object) {\n        if (object_hasOwnProperty(object, key)) {\n            keys.push(key);\n        }\n    }\n    return keys;\n};\n\nvar object_toString = uncurryThis(Object.prototype.toString);\n\nfunction isObject(value) {\n    return value === Object(value);\n}\n\n// generator related shims\n\n// FIXME: Remove this function once ES6 generators are in SpiderMonkey.\nfunction isStopIteration(exception) {\n    return (\n        object_toString(exception) === \"[object StopIteration]\" ||\n        exception instanceof QReturnValue\n    );\n}\n\n// FIXME: Remove this helper and Q.return once ES6 generators are in\n// SpiderMonkey.\nvar QReturnValue;\nif (typeof ReturnValue !== \"undefined\") {\n    QReturnValue = ReturnValue;\n} else {\n    QReturnValue = function (value) {\n        this.value = value;\n    };\n}\n\n// long stack traces\n\nvar STACK_JUMP_SEPARATOR = \"From previous event:\";\n\nfunction makeStackTraceLong(error, promise) {\n    // If possible, transform the error stack trace by removing Node and Q\n    // cruft, then concatenating with the stack trace of `promise`. See #57.\n    if (hasStacks &&\n        promise.stack &&\n        typeof error === \"object\" &&\n        error !== null &&\n        error.stack &&\n        error.stack.indexOf(STACK_JUMP_SEPARATOR) === -1\n    ) {\n        var stacks = [];\n        for (var p = promise; !!p; p = p.source) {\n            if (p.stack) {\n                stacks.unshift(p.stack);\n            }\n        }\n        stacks.unshift(error.stack);\n\n        var concatedStacks = stacks.join(\"\\n\" + STACK_JUMP_SEPARATOR + \"\\n\");\n        error.stack = filterStackString(concatedStacks);\n    }\n}\n\nfunction filterStackString(stackString) {\n    var lines = stackString.split(\"\\n\");\n    var desiredLines = [];\n    for (var i = 0; i < lines.length; ++i) {\n        var line = lines[i];\n\n        if (!isInternalFrame(line) && !isNodeFrame(line) && line) {\n            desiredLines.push(line);\n        }\n    }\n    return desiredLines.join(\"\\n\");\n}\n\nfunction isNodeFrame(stackLine) {\n    return stackLine.indexOf(\"(module.js:\") !== -1 ||\n           stackLine.indexOf(\"(node.js:\") !== -1;\n}\n\nfunction getFileNameAndLineNumber(stackLine) {\n    // Named functions: \"at functionName (filename:lineNumber:columnNumber)\"\n    // In IE10 function name can have spaces (\"Anonymous function\") O_o\n    var attempt1 = /at .+ \\((.+):(\\d+):(?:\\d+)\\)$/.exec(stackLine);\n    if (attempt1) {\n        return [attempt1[1], Number(attempt1[2])];\n    }\n\n    // Anonymous functions: \"at filename:lineNumber:columnNumber\"\n    var attempt2 = /at ([^ ]+):(\\d+):(?:\\d+)$/.exec(stackLine);\n    if (attempt2) {\n        return [attempt2[1], Number(attempt2[2])];\n    }\n\n    // Firefox style: \"function@filename:lineNumber or @filename:lineNumber\"\n    var attempt3 = /.*@(.+):(\\d+)$/.exec(stackLine);\n    if (attempt3) {\n        return [attempt3[1], Number(attempt3[2])];\n    }\n}\n\nfunction isInternalFrame(stackLine) {\n    var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);\n\n    if (!fileNameAndLineNumber) {\n        return false;\n    }\n\n    var fileName = fileNameAndLineNumber[0];\n    var lineNumber = fileNameAndLineNumber[1];\n\n    return fileName === qFileName &&\n        lineNumber >= qStartingLine &&\n        lineNumber <= qEndingLine;\n}\n\n// discover own file name and line number range for filtering stack\n// traces\nfunction captureLine() {\n    if (!hasStacks) {\n        return;\n    }\n\n    try {\n        throw new Error();\n    } catch (e) {\n        var lines = e.stack.split(\"\\n\");\n        var firstLine = lines[0].indexOf(\"@\") > 0 ? lines[1] : lines[2];\n        var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);\n        if (!fileNameAndLineNumber) {\n            return;\n        }\n\n        qFileName = fileNameAndLineNumber[0];\n        return fileNameAndLineNumber[1];\n    }\n}\n\nfunction deprecate(callback, name, alternative) {\n    return function () {\n        if (typeof console !== \"undefined\" &&\n            typeof console.warn === \"function\") {\n            console.warn(name + \" is deprecated, use \" + alternative +\n                         \" instead.\", new Error(\"\").stack);\n        }\n        return callback.apply(callback, arguments);\n    };\n}\n\n// end of shims\n// beginning of real work\n\n/**\n * Constructs a promise for an immediate reference, passes promises through, or\n * coerces promises from different systems.\n * @param value immediate reference or promise\n */\nfunction Q(value) {\n    // If the object is already a Promise, return it directly.  This enables\n    // the resolve function to both be used to created references from objects,\n    // but to tolerably coerce non-promises to promises.\n    if (value instanceof Promise) {\n        return value;\n    }\n\n    // assimilate thenables\n    if (isPromiseAlike(value)) {\n        return coerce(value);\n    } else {\n        return fulfill(value);\n    }\n}\nQ.resolve = Q;\n\n/**\n * Performs a task in a future turn of the event loop.\n * @param {Function} task\n */\nQ.nextTick = nextTick;\n\n/**\n * Controls whether or not long stack traces will be on\n */\nQ.longStackSupport = false;\n\n// enable long stacks if Q_DEBUG is set\nif (typeof process === \"object\" && process && process.env && process.env.Q_DEBUG) {\n    Q.longStackSupport = true;\n}\n\n/**\n * Constructs a {promise, resolve, reject} object.\n *\n * `resolve` is a callback to invoke with a more resolved value for the\n * promise. To fulfill the promise, invoke `resolve` with any value that is\n * not a thenable. To reject the promise, invoke `resolve` with a rejected\n * thenable, or invoke `reject` with the reason directly. To resolve the\n * promise to another thenable, thus putting it in the same state, invoke\n * `resolve` with that other thenable.\n */\nQ.defer = defer;\nfunction defer() {\n    // if \"messages\" is an \"Array\", that indicates that the promise has not yet\n    // been resolved.  If it is \"undefined\", it has been resolved.  Each\n    // element of the messages array is itself an array of complete arguments to\n    // forward to the resolved promise.  We coerce the resolution value to a\n    // promise using the `resolve` function because it handles both fully\n    // non-thenable values and other thenables gracefully.\n    var messages = [], progressListeners = [], resolvedPromise;\n\n    var deferred = object_create(defer.prototype);\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, operands) {\n        var args = array_slice(arguments);\n        if (messages) {\n            messages.push(args);\n            if (op === \"when\" && operands[1]) { // progress operand\n                progressListeners.push(operands[1]);\n            }\n        } else {\n            Q.nextTick(function () {\n                resolvedPromise.promiseDispatch.apply(resolvedPromise, args);\n            });\n        }\n    };\n\n    // XXX deprecated\n    promise.valueOf = function () {\n        if (messages) {\n            return promise;\n        }\n        var nearerValue = nearer(resolvedPromise);\n        if (isPromise(nearerValue)) {\n            resolvedPromise = nearerValue; // shorten chain\n        }\n        return nearerValue;\n    };\n\n    promise.inspect = function () {\n        if (!resolvedPromise) {\n            return { state: \"pending\" };\n        }\n        return resolvedPromise.inspect();\n    };\n\n    if (Q.longStackSupport && hasStacks) {\n        try {\n            throw new Error();\n        } catch (e) {\n            // NOTE: don't try to use `Error.captureStackTrace` or transfer the\n            // accessor around; that causes memory leaks as per GH-111. Just\n            // reify the stack trace as a string ASAP.\n            //\n            // At the same time, cut off the first line; it's always just\n            // \"[object Promise]\\n\", as per the `toString`.\n            promise.stack = e.stack.substring(e.stack.indexOf(\"\\n\") + 1);\n        }\n    }\n\n    // NOTE: we do the checks for `resolvedPromise` in each method, instead of\n    // consolidating them into `become`, since otherwise we'd create new\n    // promises with the lines `become(whatever(value))`. See e.g. GH-252.\n\n    function become(newPromise) {\n        resolvedPromise = newPromise;\n        promise.source = newPromise;\n\n        array_reduce(messages, function (undefined, message) {\n            Q.nextTick(function () {\n                newPromise.promiseDispatch.apply(newPromise, message);\n            });\n        }, void 0);\n\n        messages = void 0;\n        progressListeners = void 0;\n    }\n\n    deferred.promise = promise;\n    deferred.resolve = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(Q(value));\n    };\n\n    deferred.fulfill = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(fulfill(value));\n    };\n    deferred.reject = function (reason) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(reject(reason));\n    };\n    deferred.notify = function (progress) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        array_reduce(progressListeners, function (undefined, progressListener) {\n            Q.nextTick(function () {\n                progressListener(progress);\n            });\n        }, void 0);\n    };\n\n    return deferred;\n}\n\n/**\n * Creates a Node-style callback that will resolve or reject the deferred\n * promise.\n * @returns a nodeback\n */\ndefer.prototype.makeNodeResolver = function () {\n    var self = this;\n    return function (error, value) {\n        if (error) {\n            self.reject(error);\n        } else if (arguments.length > 2) {\n            self.resolve(array_slice(arguments, 1));\n        } else {\n            self.resolve(value);\n        }\n    };\n};\n\n/**\n * @param resolver {Function} a function that returns nothing and accepts\n * the resolve, reject, and notify functions for a deferred.\n * @returns a promise that may be resolved with the given resolve and reject\n * functions, or rejected by a thrown exception in resolver\n */\nQ.Promise = promise; // ES6\nQ.promise = promise;\nfunction promise(resolver) {\n    if (typeof resolver !== \"function\") {\n        throw new TypeError(\"resolver must be a function.\");\n    }\n    var deferred = defer();\n    try {\n        resolver(deferred.resolve, deferred.reject, deferred.notify);\n    } catch (reason) {\n        deferred.reject(reason);\n    }\n    return deferred.promise;\n}\n\npromise.race = race; // ES6\npromise.all = all; // ES6\npromise.reject = reject; // ES6\npromise.resolve = Q; // ES6\n\n// XXX experimental.  This method is a way to denote that a local value is\n// serializable and should be immediately dispatched to a remote upon request,\n// instead of passing a reference.\nQ.passByCopy = function (object) {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return object;\n};\n\nPromise.prototype.passByCopy = function () {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return this;\n};\n\n/**\n * If two promises eventually fulfill to the same value, promises that value,\n * but otherwise rejects.\n * @param x {Any*}\n * @param y {Any*}\n * @returns {Any*} a promise for x and y if they are the same, but a rejection\n * otherwise.\n *\n */\nQ.join = function (x, y) {\n    return Q(x).join(y);\n};\n\nPromise.prototype.join = function (that) {\n    return Q([this, that]).spread(function (x, y) {\n        if (x === y) {\n            // TODO: \"===\" should be Object.is or equiv\n            return x;\n        } else {\n            throw new Error(\"Can't join: not the same: \" + x + \" \" + y);\n        }\n    });\n};\n\n/**\n * Returns a promise for the first of an array of promises to become settled.\n * @param answers {Array[Any*]} promises to race\n * @returns {Any*} the first promise to be settled\n */\nQ.race = race;\nfunction race(answerPs) {\n    return promise(function(resolve, reject) {\n        // Switch to this once we can assume at least ES5\n        // answerPs.forEach(function(answerP) {\n        //     Q(answerP).then(resolve, reject);\n        // });\n        // Use this in the meantime\n        for (var i = 0, len = answerPs.length; i < len; i++) {\n            Q(answerPs[i]).then(resolve, reject);\n        }\n    });\n}\n\nPromise.prototype.race = function () {\n    return this.then(Q.race);\n};\n\n/**\n * Constructs a Promise with a promise descriptor object and optional fallback\n * function.  The descriptor contains methods like when(rejected), get(name),\n * set(name, value), post(name, args), and delete(name), which all\n * return either a value, a promise for a value, or a rejection.  The fallback\n * accepts the operation name, a resolver, and any further arguments that would\n * have been forwarded to the appropriate method above had a method been\n * provided with the proper name.  The API makes no guarantees about the nature\n * of the returned object, apart from that it is usable whereever promises are\n * bought and sold.\n */\nQ.makePromise = Promise;\nfunction Promise(descriptor, fallback, inspect) {\n    if (fallback === void 0) {\n        fallback = function (op) {\n            return reject(new Error(\n                \"Promise does not support operation: \" + op\n            ));\n        };\n    }\n    if (inspect === void 0) {\n        inspect = function () {\n            return {state: \"unknown\"};\n        };\n    }\n\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, args) {\n        var result;\n        try {\n            if (descriptor[op]) {\n                result = descriptor[op].apply(promise, args);\n            } else {\n                result = fallback.call(promise, op, args);\n            }\n        } catch (exception) {\n            result = reject(exception);\n        }\n        if (resolve) {\n            resolve(result);\n        }\n    };\n\n    promise.inspect = inspect;\n\n    // XXX deprecated `valueOf` and `exception` support\n    if (inspect) {\n        var inspected = inspect();\n        if (inspected.state === \"rejected\") {\n            promise.exception = inspected.reason;\n        }\n\n        promise.valueOf = function () {\n            var inspected = inspect();\n            if (inspected.state === \"pending\" ||\n                inspected.state === \"rejected\") {\n                return promise;\n            }\n            return inspected.value;\n        };\n    }\n\n    return promise;\n}\n\nPromise.prototype.toString = function () {\n    return \"[object Promise]\";\n};\n\nPromise.prototype.then = function (fulfilled, rejected, progressed) {\n    var self = this;\n    var deferred = defer();\n    var done = false;   // ensure the untrusted promise makes at most a\n                        // single call to one of the callbacks\n\n    function _fulfilled(value) {\n        try {\n            return typeof fulfilled === \"function\" ? fulfilled(value) : value;\n        } catch (exception) {\n            return reject(exception);\n        }\n    }\n\n    function _rejected(exception) {\n        if (typeof rejected === \"function\") {\n            makeStackTraceLong(exception, self);\n            try {\n                return rejected(exception);\n            } catch (newException) {\n                return reject(newException);\n            }\n        }\n        return reject(exception);\n    }\n\n    function _progressed(value) {\n        return typeof progressed === \"function\" ? progressed(value) : value;\n    }\n\n    Q.nextTick(function () {\n        self.promiseDispatch(function (value) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_fulfilled(value));\n        }, \"when\", [function (exception) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_rejected(exception));\n        }]);\n    });\n\n    // Progress propagator need to be attached in the current tick.\n    self.promiseDispatch(void 0, \"when\", [void 0, function (value) {\n        var newValue;\n        var threw = false;\n        try {\n            newValue = _progressed(value);\n        } catch (e) {\n            threw = true;\n            if (Q.onerror) {\n                Q.onerror(e);\n            } else {\n                throw e;\n            }\n        }\n\n        if (!threw) {\n            deferred.notify(newValue);\n        }\n    }]);\n\n    return deferred.promise;\n};\n\nQ.tap = function (promise, callback) {\n    return Q(promise).tap(callback);\n};\n\n/**\n * Works almost like \"finally\", but not called for rejections.\n * Original resolution value is passed through callback unaffected.\n * Callback may return a promise that will be awaited for.\n * @param {Function} callback\n * @returns {Q.Promise}\n * @example\n * doSomething()\n *   .then(...)\n *   .tap(console.log)\n *   .then(...);\n */\nPromise.prototype.tap = function (callback) {\n    callback = Q(callback);\n\n    return this.then(function (value) {\n        return callback.fcall(value).thenResolve(value);\n    });\n};\n\n/**\n * Registers an observer on a promise.\n *\n * Guarantees:\n *\n * 1. that fulfilled and rejected will be called only once.\n * 2. that either the fulfilled callback or the rejected callback will be\n *    called, but not both.\n * 3. that fulfilled and rejected will not be called in this turn.\n *\n * @param value      promise or immediate reference to observe\n * @param fulfilled  function to be called with the fulfilled value\n * @param rejected   function to be called with the rejection exception\n * @param progressed function to be called on any progress notifications\n * @return promise for the return value from the invoked callback\n */\nQ.when = when;\nfunction when(value, fulfilled, rejected, progressed) {\n    return Q(value).then(fulfilled, rejected, progressed);\n}\n\nPromise.prototype.thenResolve = function (value) {\n    return this.then(function () { return value; });\n};\n\nQ.thenResolve = function (promise, value) {\n    return Q(promise).thenResolve(value);\n};\n\nPromise.prototype.thenReject = function (reason) {\n    return this.then(function () { throw reason; });\n};\n\nQ.thenReject = function (promise, reason) {\n    return Q(promise).thenReject(reason);\n};\n\n/**\n * If an object is not a promise, it is as \"near\" as possible.\n * If a promise is rejected, it is as \"near\" as possible too.\n * If it’s a fulfilled promise, the fulfillment value is nearer.\n * If it’s a deferred promise and the deferred has been resolved, the\n * resolution is \"nearer\".\n * @param object\n * @returns most resolved (nearest) form of the object\n */\n\n// XXX should we re-do this?\nQ.nearer = nearer;\nfunction nearer(value) {\n    if (isPromise(value)) {\n        var inspected = value.inspect();\n        if (inspected.state === \"fulfilled\") {\n            return inspected.value;\n        }\n    }\n    return value;\n}\n\n/**\n * @returns whether the given object is a promise.\n * Otherwise it is a fulfilled value.\n */\nQ.isPromise = isPromise;\nfunction isPromise(object) {\n    return object instanceof Promise;\n}\n\nQ.isPromiseAlike = isPromiseAlike;\nfunction isPromiseAlike(object) {\n    return isObject(object) && typeof object.then === \"function\";\n}\n\n/**\n * @returns whether the given object is a pending promise, meaning not\n * fulfilled or rejected.\n */\nQ.isPending = isPending;\nfunction isPending(object) {\n    return isPromise(object) && object.inspect().state === \"pending\";\n}\n\nPromise.prototype.isPending = function () {\n    return this.inspect().state === \"pending\";\n};\n\n/**\n * @returns whether the given object is a value or fulfilled\n * promise.\n */\nQ.isFulfilled = isFulfilled;\nfunction isFulfilled(object) {\n    return !isPromise(object) || object.inspect().state === \"fulfilled\";\n}\n\nPromise.prototype.isFulfilled = function () {\n    return this.inspect().state === \"fulfilled\";\n};\n\n/**\n * @returns whether the given object is a rejected promise.\n */\nQ.isRejected = isRejected;\nfunction isRejected(object) {\n    return isPromise(object) && object.inspect().state === \"rejected\";\n}\n\nPromise.prototype.isRejected = function () {\n    return this.inspect().state === \"rejected\";\n};\n\n//// BEGIN UNHANDLED REJECTION TRACKING\n\n// This promise library consumes exceptions thrown in handlers so they can be\n// handled by a subsequent promise.  The exceptions get added to this array when\n// they are created, and removed when they are handled.  Note that in ES6 or\n// shimmed environments, this would naturally be a `Set`.\nvar unhandledReasons = [];\nvar unhandledRejections = [];\nvar trackUnhandledRejections = true;\n\nfunction resetUnhandledRejections() {\n    unhandledReasons.length = 0;\n    unhandledRejections.length = 0;\n\n    if (!trackUnhandledRejections) {\n        trackUnhandledRejections = true;\n    }\n}\n\nfunction trackRejection(promise, reason) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n\n    unhandledRejections.push(promise);\n    if (reason && typeof reason.stack !== \"undefined\") {\n        unhandledReasons.push(reason.stack);\n    } else {\n        unhandledReasons.push(\"(no stack) \" + reason);\n    }\n}\n\nfunction untrackRejection(promise) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n\n    var at = array_indexOf(unhandledRejections, promise);\n    if (at !== -1) {\n        unhandledRejections.splice(at, 1);\n        unhandledReasons.splice(at, 1);\n    }\n}\n\nQ.resetUnhandledRejections = resetUnhandledRejections;\n\nQ.getUnhandledReasons = function () {\n    // Make a copy so that consumers can't interfere with our internal state.\n    return unhandledReasons.slice();\n};\n\nQ.stopUnhandledRejectionTracking = function () {\n    resetUnhandledRejections();\n    trackUnhandledRejections = false;\n};\n\nresetUnhandledRejections();\n\n//// END UNHANDLED REJECTION TRACKING\n\n/**\n * Constructs a rejected promise.\n * @param reason value describing the failure\n */\nQ.reject = reject;\nfunction reject(reason) {\n    var rejection = Promise({\n        \"when\": function (rejected) {\n            // note that the error has been handled\n            if (rejected) {\n                untrackRejection(this);\n            }\n            return rejected ? rejected(reason) : this;\n        }\n    }, function fallback() {\n        return this;\n    }, function inspect() {\n        return { state: \"rejected\", reason: reason };\n    });\n\n    // Note that the reason has not been handled.\n    trackRejection(rejection, reason);\n\n    return rejection;\n}\n\n/**\n * Constructs a fulfilled promise for an immediate reference.\n * @param value immediate reference\n */\nQ.fulfill = fulfill;\nfunction fulfill(value) {\n    return Promise({\n        \"when\": function () {\n            return value;\n        },\n        \"get\": function (name) {\n            return value[name];\n        },\n        \"set\": function (name, rhs) {\n            value[name] = rhs;\n        },\n        \"delete\": function (name) {\n            delete value[name];\n        },\n        \"post\": function (name, args) {\n            // Mark Miller proposes that post with no name should apply a\n            // promised function.\n            if (name === null || name === void 0) {\n                return value.apply(void 0, args);\n            } else {\n                return value[name].apply(value, args);\n            }\n        },\n        \"apply\": function (thisp, args) {\n            return value.apply(thisp, args);\n        },\n        \"keys\": function () {\n            return object_keys(value);\n        }\n    }, void 0, function inspect() {\n        return { state: \"fulfilled\", value: value };\n    });\n}\n\n/**\n * Converts thenables to Q promises.\n * @param promise thenable promise\n * @returns a Q promise\n */\nfunction coerce(promise) {\n    var deferred = defer();\n    Q.nextTick(function () {\n        try {\n            promise.then(deferred.resolve, deferred.reject, deferred.notify);\n        } catch (exception) {\n            deferred.reject(exception);\n        }\n    });\n    return deferred.promise;\n}\n\n/**\n * Annotates an object such that it will never be\n * transferred away from this process over any promise\n * communication channel.\n * @param object\n * @returns promise a wrapping of that object that\n * additionally responds to the \"isDef\" message\n * without a rejection.\n */\nQ.master = master;\nfunction master(object) {\n    return Promise({\n        \"isDef\": function () {}\n    }, function fallback(op, args) {\n        return dispatch(object, op, args);\n    }, function () {\n        return Q(object).inspect();\n    });\n}\n\n/**\n * Spreads the values of a promised array of arguments into the\n * fulfillment callback.\n * @param fulfilled callback that receives variadic arguments from the\n * promised array\n * @param rejected callback that receives the exception if the promise\n * is rejected.\n * @returns a promise for the return value or thrown exception of\n * either callback.\n */\nQ.spread = spread;\nfunction spread(value, fulfilled, rejected) {\n    return Q(value).spread(fulfilled, rejected);\n}\n\nPromise.prototype.spread = function (fulfilled, rejected) {\n    return this.all().then(function (array) {\n        return fulfilled.apply(void 0, array);\n    }, rejected);\n};\n\n/**\n * The async function is a decorator for generator functions, turning\n * them into asynchronous generators.  Although generators are only part\n * of the newest ECMAScript 6 drafts, this code does not cause syntax\n * errors in older engines.  This code should continue to work and will\n * in fact improve over time as the language improves.\n *\n * ES6 generators are currently part of V8 version 3.19 with the\n * --harmony-generators runtime flag enabled.  SpiderMonkey has had them\n * for longer, but under an older Python-inspired form.  This function\n * works on both kinds of generators.\n *\n * Decorates a generator function such that:\n *  - it may yield promises\n *  - execution will continue when that promise is fulfilled\n *  - the value of the yield expression will be the fulfilled value\n *  - it returns a promise for the return value (when the generator\n *    stops iterating)\n *  - the decorated function returns a promise for the return value\n *    of the generator or the first rejected promise among those\n *    yielded.\n *  - if an error is thrown in the generator, it propagates through\n *    every following yield until it is caught, or until it escapes\n *    the generator function altogether, and is translated into a\n *    rejection for the promise returned by the decorated generator.\n */\nQ.async = async;\nfunction async(makeGenerator) {\n    return function () {\n        // when verb is \"send\", arg is a value\n        // when verb is \"throw\", arg is an exception\n        function continuer(verb, arg) {\n            var result;\n\n            // Until V8 3.19 / Chromium 29 is released, SpiderMonkey is the only\n            // engine that has a deployed base of browsers that support generators.\n            // However, SM's generators use the Python-inspired semantics of\n            // outdated ES6 drafts.  We would like to support ES6, but we'd also\n            // like to make it possible to use generators in deployed browsers, so\n            // we also support Python-style generators.  At some point we can remove\n            // this block.\n\n            if (typeof StopIteration === \"undefined\") {\n                // ES6 Generators\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    return reject(exception);\n                }\n                if (result.done) {\n                    return Q(result.value);\n                } else {\n                    return when(result.value, callback, errback);\n                }\n            } else {\n                // SpiderMonkey Generators\n                // FIXME: Remove this case when SM does ES6 generators.\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    if (isStopIteration(exception)) {\n                        return Q(exception.value);\n                    } else {\n                        return reject(exception);\n                    }\n                }\n                return when(result, callback, errback);\n            }\n        }\n        var generator = makeGenerator.apply(this, arguments);\n        var callback = continuer.bind(continuer, \"next\");\n        var errback = continuer.bind(continuer, \"throw\");\n        return callback();\n    };\n}\n\n/**\n * The spawn function is a small wrapper around async that immediately\n * calls the generator and also ends the promise chain, so that any\n * unhandled errors are thrown instead of forwarded to the error\n * handler. This is useful because it's extremely common to run\n * generators at the top-level to work with libraries.\n */\nQ.spawn = spawn;\nfunction spawn(makeGenerator) {\n    Q.done(Q.async(makeGenerator)());\n}\n\n// FIXME: Remove this interface once ES6 generators are in SpiderMonkey.\n/**\n * Throws a ReturnValue exception to stop an asynchronous generator.\n *\n * This interface is a stop-gap measure to support generator return\n * values in older Firefox/SpiderMonkey.  In browsers that support ES6\n * generators like Chromium 29, just use \"return\" in your generator\n * functions.\n *\n * @param value the return value for the surrounding generator\n * @throws ReturnValue exception with the value.\n * @example\n * // ES6 style\n * Q.async(function* () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      return foo + bar;\n * })\n * // Older SpiderMonkey style\n * Q.async(function () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      Q.return(foo + bar);\n * })\n */\nQ[\"return\"] = _return;\nfunction _return(value) {\n    throw new QReturnValue(value);\n}\n\n/**\n * The promised function decorator ensures that any promise arguments\n * are settled and passed as values (`this` is also settled and passed\n * as a value).  It will also ensure that the result of a function is\n * always a promise.\n *\n * @example\n * var add = Q.promised(function (a, b) {\n *     return a + b;\n * });\n * add(Q(a), Q(B));\n *\n * @param {function} callback The function to decorate\n * @returns {function} a function that has been decorated.\n */\nQ.promised = promised;\nfunction promised(callback) {\n    return function () {\n        return spread([this, all(arguments)], function (self, args) {\n            return callback.apply(self, args);\n        });\n    };\n}\n\n/**\n * sends a message to a value in a future turn\n * @param object* the recipient\n * @param op the name of the message operation, e.g., \"when\",\n * @param args further arguments to be forwarded to the operation\n * @returns result {Promise} a promise for the result of the operation\n */\nQ.dispatch = dispatch;\nfunction dispatch(object, op, args) {\n    return Q(object).dispatch(op, args);\n}\n\nPromise.prototype.dispatch = function (op, args) {\n    var self = this;\n    var deferred = defer();\n    Q.nextTick(function () {\n        self.promiseDispatch(deferred.resolve, op, args);\n    });\n    return deferred.promise;\n};\n\n/**\n * Gets the value of a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to get\n * @return promise for the property value\n */\nQ.get = function (object, key) {\n    return Q(object).dispatch(\"get\", [key]);\n};\n\nPromise.prototype.get = function (key) {\n    return this.dispatch(\"get\", [key]);\n};\n\n/**\n * Sets the value of a property in a future turn.\n * @param object    promise or immediate reference for object object\n * @param name      name of property to set\n * @param value     new value of property\n * @return promise for the return value\n */\nQ.set = function (object, key, value) {\n    return Q(object).dispatch(\"set\", [key, value]);\n};\n\nPromise.prototype.set = function (key, value) {\n    return this.dispatch(\"set\", [key, value]);\n};\n\n/**\n * Deletes a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to delete\n * @return promise for the return value\n */\nQ.del = // XXX legacy\nQ[\"delete\"] = function (object, key) {\n    return Q(object).dispatch(\"delete\", [key]);\n};\n\nPromise.prototype.del = // XXX legacy\nPromise.prototype[\"delete\"] = function (key) {\n    return this.dispatch(\"delete\", [key]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param value     a value to post, typically an array of\n *                  invocation arguments for promises that\n *                  are ultimately backed with `resolve` values,\n *                  as opposed to those backed with URLs\n *                  wherein the posted value can be any\n *                  JSON serializable object.\n * @return promise for the return value\n */\n// bound locally because it is used by other methods\nQ.mapply = // XXX As proposed by \"Redsandro\"\nQ.post = function (object, name, args) {\n    return Q(object).dispatch(\"post\", [name, args]);\n};\n\nPromise.prototype.mapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.post = function (name, args) {\n    return this.dispatch(\"post\", [name, args]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param ...args   array of invocation arguments\n * @return promise for the return value\n */\nQ.send = // XXX Mark Miller's proposed parlance\nQ.mcall = // XXX As proposed by \"Redsandro\"\nQ.invoke = function (object, name /*...args*/) {\n    return Q(object).dispatch(\"post\", [name, array_slice(arguments, 2)]);\n};\n\nPromise.prototype.send = // XXX Mark Miller's proposed parlance\nPromise.prototype.mcall = // XXX As proposed by \"Redsandro\"\nPromise.prototype.invoke = function (name /*...args*/) {\n    return this.dispatch(\"post\", [name, array_slice(arguments, 1)]);\n};\n\n/**\n * Applies the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param args      array of application arguments\n */\nQ.fapply = function (object, args) {\n    return Q(object).dispatch(\"apply\", [void 0, args]);\n};\n\nPromise.prototype.fapply = function (args) {\n    return this.dispatch(\"apply\", [void 0, args]);\n};\n\n/**\n * Calls the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ[\"try\"] =\nQ.fcall = function (object /* ...args*/) {\n    return Q(object).dispatch(\"apply\", [void 0, array_slice(arguments, 1)]);\n};\n\nPromise.prototype.fcall = function (/*...args*/) {\n    return this.dispatch(\"apply\", [void 0, array_slice(arguments)]);\n};\n\n/**\n * Binds the promised function, transforming return values into a fulfilled\n * promise and thrown errors into a rejected one.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ.fbind = function (object /*...args*/) {\n    var promise = Q(object);\n    var args = array_slice(arguments, 1);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\nPromise.prototype.fbind = function (/*...args*/) {\n    var promise = this;\n    var args = array_slice(arguments);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\n\n/**\n * Requests the names of the owned properties of a promised\n * object in a future turn.\n * @param object    promise or immediate reference for target object\n * @return promise for the keys of the eventually settled object\n */\nQ.keys = function (object) {\n    return Q(object).dispatch(\"keys\", []);\n};\n\nPromise.prototype.keys = function () {\n    return this.dispatch(\"keys\", []);\n};\n\n/**\n * Turns an array of promises into a promise for an array.  If any of\n * the promises gets rejected, the whole array is rejected immediately.\n * @param {Array*} an array (or promise for an array) of values (or\n * promises for values)\n * @returns a promise for an array of the corresponding values\n */\n// By Mark Miller\n// http://wiki.ecmascript.org/doku.php?id=strawman:concurrency&rev=1308776521#allfulfilled\nQ.all = all;\nfunction all(promises) {\n    return when(promises, function (promises) {\n        var countDown = 0;\n        var deferred = defer();\n        array_reduce(promises, function (undefined, promise, index) {\n            var snapshot;\n            if (\n                isPromise(promise) &&\n                (snapshot = promise.inspect()).state === \"fulfilled\"\n            ) {\n                promises[index] = snapshot.value;\n            } else {\n                ++countDown;\n                when(\n                    promise,\n                    function (value) {\n                        promises[index] = value;\n                        if (--countDown === 0) {\n                            deferred.resolve(promises);\n                        }\n                    },\n                    deferred.reject,\n                    function (progress) {\n                        deferred.notify({ index: index, value: progress });\n                    }\n                );\n            }\n        }, void 0);\n        if (countDown === 0) {\n            deferred.resolve(promises);\n        }\n        return deferred.promise;\n    });\n}\n\nPromise.prototype.all = function () {\n    return all(this);\n};\n\n/**\n * Waits for all promises to be settled, either fulfilled or\n * rejected.  This is distinct from `all` since that would stop\n * waiting at the first rejection.  The promise returned by\n * `allResolved` will never be rejected.\n * @param promises a promise for an array (or an array) of promises\n * (or values)\n * @return a promise for an array of promises\n */\nQ.allResolved = deprecate(allResolved, \"allResolved\", \"allSettled\");\nfunction allResolved(promises) {\n    return when(promises, function (promises) {\n        promises = array_map(promises, Q);\n        return when(all(array_map(promises, function (promise) {\n            return when(promise, noop, noop);\n        })), function () {\n            return promises;\n        });\n    });\n}\n\nPromise.prototype.allResolved = function () {\n    return allResolved(this);\n};\n\n/**\n * @see Promise#allSettled\n */\nQ.allSettled = allSettled;\nfunction allSettled(promises) {\n    return Q(promises).allSettled();\n}\n\n/**\n * Turns an array of promises into a promise for an array of their states (as\n * returned by `inspect`) when they have all settled.\n * @param {Array[Any*]} values an array (or promise for an array) of values (or\n * promises for values)\n * @returns {Array[State]} an array of states for the respective values.\n */\nPromise.prototype.allSettled = function () {\n    return this.then(function (promises) {\n        return all(array_map(promises, function (promise) {\n            promise = Q(promise);\n            function regardless() {\n                return promise.inspect();\n            }\n            return promise.then(regardless, regardless);\n        }));\n    });\n};\n\n/**\n * Captures the failure of a promise, giving an oportunity to recover\n * with a callback.  If the given promise is fulfilled, the returned\n * promise is fulfilled.\n * @param {Any*} promise for something\n * @param {Function} callback to fulfill the returned promise if the\n * given promise is rejected\n * @returns a promise for the return value of the callback\n */\nQ.fail = // XXX legacy\nQ[\"catch\"] = function (object, rejected) {\n    return Q(object).then(void 0, rejected);\n};\n\nPromise.prototype.fail = // XXX legacy\nPromise.prototype[\"catch\"] = function (rejected) {\n    return this.then(void 0, rejected);\n};\n\n/**\n * Attaches a listener that can respond to progress notifications from a\n * promise's originating deferred. This listener receives the exact arguments\n * passed to ``deferred.notify``.\n * @param {Any*} promise for something\n * @param {Function} callback to receive any progress notifications\n * @returns the given promise, unchanged\n */\nQ.progress = progress;\nfunction progress(object, progressed) {\n    return Q(object).then(void 0, void 0, progressed);\n}\n\nPromise.prototype.progress = function (progressed) {\n    return this.then(void 0, void 0, progressed);\n};\n\n/**\n * Provides an opportunity to observe the settling of a promise,\n * regardless of whether the promise is fulfilled or rejected.  Forwards\n * the resolution to the returned promise when the callback is done.\n * The callback can return a promise to defer completion.\n * @param {Any*} promise\n * @param {Function} callback to observe the resolution of the given\n * promise, takes no arguments.\n * @returns a promise for the resolution of the given promise when\n * ``fin`` is done.\n */\nQ.fin = // XXX legacy\nQ[\"finally\"] = function (object, callback) {\n    return Q(object)[\"finally\"](callback);\n};\n\nPromise.prototype.fin = // XXX legacy\nPromise.prototype[\"finally\"] = function (callback) {\n    callback = Q(callback);\n    return this.then(function (value) {\n        return callback.fcall().then(function () {\n            return value;\n        });\n    }, function (reason) {\n        // TODO attempt to recycle the rejection with \"this\".\n        return callback.fcall().then(function () {\n            throw reason;\n        });\n    });\n};\n\n/**\n * Terminates a chain of promises, forcing rejections to be\n * thrown as exceptions.\n * @param {Any*} promise at the end of a chain of promises\n * @returns nothing\n */\nQ.done = function (object, fulfilled, rejected, progress) {\n    return Q(object).done(fulfilled, rejected, progress);\n};\n\nPromise.prototype.done = function (fulfilled, rejected, progress) {\n    var onUnhandledError = function (error) {\n        // forward to a future turn so that ``when``\n        // does not catch it and turn it into a rejection.\n        Q.nextTick(function () {\n            makeStackTraceLong(error, promise);\n            if (Q.onerror) {\n                Q.onerror(error);\n            } else {\n                throw error;\n            }\n        });\n    };\n\n    // Avoid unnecessary `nextTick`ing via an unnecessary `when`.\n    var promise = fulfilled || rejected || progress ?\n        this.then(fulfilled, rejected, progress) :\n        this;\n\n    if (typeof process === \"object\" && process && process.domain) {\n        onUnhandledError = process.domain.bind(onUnhandledError);\n    }\n\n    promise.then(void 0, onUnhandledError);\n};\n\n/**\n * Causes a promise to be rejected if it does not get fulfilled before\n * some milliseconds time out.\n * @param {Any*} promise\n * @param {Number} milliseconds timeout\n * @param {Any*} custom error message or Error object (optional)\n * @returns a promise for the resolution of the given promise if it is\n * fulfilled before the timeout, otherwise rejected.\n */\nQ.timeout = function (object, ms, error) {\n    return Q(object).timeout(ms, error);\n};\n\nPromise.prototype.timeout = function (ms, error) {\n    var deferred = defer();\n    var timeoutId = setTimeout(function () {\n        if (!error || \"string\" === typeof error) {\n            error = new Error(error || \"Timed out after \" + ms + \" ms\");\n            error.code = \"ETIMEDOUT\";\n        }\n        deferred.reject(error);\n    }, ms);\n\n    this.then(function (value) {\n        clearTimeout(timeoutId);\n        deferred.resolve(value);\n    }, function (exception) {\n        clearTimeout(timeoutId);\n        deferred.reject(exception);\n    }, deferred.notify);\n\n    return deferred.promise;\n};\n\n/**\n * Returns a promise for the given value (or promised value), some\n * milliseconds after it resolved. Passes rejections immediately.\n * @param {Any*} promise\n * @param {Number} milliseconds\n * @returns a promise for the resolution of the given promise after milliseconds\n * time has elapsed since the resolution of the given promise.\n * If the given promise rejects, that is passed immediately.\n */\nQ.delay = function (object, timeout) {\n    if (timeout === void 0) {\n        timeout = object;\n        object = void 0;\n    }\n    return Q(object).delay(timeout);\n};\n\nPromise.prototype.delay = function (timeout) {\n    return this.then(function (value) {\n        var deferred = defer();\n        setTimeout(function () {\n            deferred.resolve(value);\n        }, timeout);\n        return deferred.promise;\n    });\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided as an array, and returns a promise.\n *\n *      Q.nfapply(FS.readFile, [__filename])\n *      .then(function (content) {\n *      })\n *\n */\nQ.nfapply = function (callback, args) {\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfapply = function (args) {\n    var deferred = defer();\n    var nodeArgs = array_slice(args);\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided individually, and returns a promise.\n * @example\n * Q.nfcall(FS.readFile, __filename)\n * .then(function (content) {\n * })\n *\n */\nQ.nfcall = function (callback /*...args*/) {\n    var args = array_slice(arguments, 1);\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfcall = function (/*...args*/) {\n    var nodeArgs = array_slice(arguments);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Wraps a NodeJS continuation passing function and returns an equivalent\n * version that returns a promise.\n * @example\n * Q.nfbind(FS.readFile, __filename)(\"utf-8\")\n * .then(console.log)\n * .done()\n */\nQ.nfbind =\nQ.denodeify = function (callback /*...args*/) {\n    var baseArgs = array_slice(arguments, 1);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        Q(callback).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nfbind =\nPromise.prototype.denodeify = function (/*...args*/) {\n    var args = array_slice(arguments);\n    args.unshift(this);\n    return Q.denodeify.apply(void 0, args);\n};\n\nQ.nbind = function (callback, thisp /*...args*/) {\n    var baseArgs = array_slice(arguments, 2);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        function bound() {\n            return callback.apply(thisp, arguments);\n        }\n        Q(bound).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nbind = function (/*thisp, ...args*/) {\n    var args = array_slice(arguments, 0);\n    args.unshift(this);\n    return Q.nbind.apply(void 0, args);\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback with a given array of arguments, plus a provided callback.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param {Array} args arguments to pass to the method; the callback\n * will be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nmapply = // XXX As proposed by \"Redsandro\"\nQ.npost = function (object, name, args) {\n    return Q(object).npost(name, args);\n};\n\nPromise.prototype.nmapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.npost = function (name, args) {\n    var nodeArgs = array_slice(args || []);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback, forwarding the given variadic arguments, plus a provided\n * callback argument.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param ...args arguments to pass to the method; the callback will\n * be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nsend = // XXX Based on Mark Miller's proposed \"send\"\nQ.nmcall = // XXX Based on \"Redsandro's\" proposal\nQ.ninvoke = function (object, name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 2);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    Q(object).dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\nPromise.prototype.nsend = // XXX Based on Mark Miller's proposed \"send\"\nPromise.prototype.nmcall = // XXX Based on \"Redsandro's\" proposal\nPromise.prototype.ninvoke = function (name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 1);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * If a function would like to support both Node continuation-passing-style and\n * promise-returning-style, it can end its internal promise chain with\n * `nodeify(nodeback)`, forwarding the optional nodeback argument.  If the user\n * elects to use a nodeback, the result will be sent there.  If they do not\n * pass a nodeback, they will receive the result promise.\n * @param object a result (or a promise for a result)\n * @param {Function} nodeback a Node.js-style callback\n * @returns either the promise or nothing\n */\nQ.nodeify = nodeify;\nfunction nodeify(object, nodeback) {\n    return Q(object).nodeify(nodeback);\n}\n\nPromise.prototype.nodeify = function (nodeback) {\n    if (nodeback) {\n        this.then(function (value) {\n            Q.nextTick(function () {\n                nodeback(null, value);\n            });\n        }, function (error) {\n            Q.nextTick(function () {\n                nodeback(error);\n            });\n        });\n    } else {\n        return this;\n    }\n};\n\n// All code before this point will be filtered from stack traces.\nvar qEndingLine = captureLine();\n\nreturn Q;\n\n});\n"]}