{"version":3,"sources":["queue.js"],"names":[],"mappings":";;AACA,IAAI,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;;AAEvB,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;AACvB,SAAS,KAAK,GAAG;AACb,QAAI,IAAI,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;AACrB,QAAI,MAAM,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;AACvB,WAAO;AACH,WAAG,EAAE,aAAU,KAAK,EAAE;AAClB,gBAAI,IAAI,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;AACrB,gBAAI,CAAC,OAAO,CAAC;AACT,oBAAI,EAAE,KAAK;AACX,oBAAI,EAAE,IAAI,CAAC,OAAO;aACrB,CAAC,CAAC;AACH,gBAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;SAC/B;AACD,WAAG,EAAE,eAAY;AACb,gBAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACtC,gBAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACxC,mBAAO,MAAM,CAAC,IAAI,CAAC,UAAU,KAAK,EAAE;AAChC,sBAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AACtB,sBAAM,KAAK,CAAC;aACf,CAAC,CAAC;SACN;AACD,cAAM,EAAE,MAAM,CAAC,OAAO;AACtB,aAAK,EAAE,eAAU,KAAK,EAAE;AACpB,iBAAK,GAAG,KAAK,IAAI,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;AAChE,gBAAI,GAAG,GAAG,EAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAC,CAAC;AAClC,eAAG,CAAC,IAAI,GAAG,GAAG,CAAC;AACf,gBAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AAClB,mBAAO,MAAM,CAAC,OAAO,CAAC;SACzB;KACJ,CAAC;CACL","file":"queue-compiled.js","sourcesContent":["\nvar Q = require(\"./q\");\n\nmodule.exports = Queue;\nfunction Queue() {\n    var ends = Q.defer();\n    var closed = Q.defer();\n    return {\n        put: function (value) {\n            var next = Q.defer();\n            ends.resolve({\n                head: value,\n                tail: next.promise\n            });\n            ends.resolve = next.resolve;\n        },\n        get: function () {\n            var result = ends.promise.get(\"head\");\n            ends.promise = ends.promise.get(\"tail\");\n            return result.fail(function (error) {\n                closed.resolve(error);\n                throw error;\n            });\n        },\n        closed: closed.promise,\n        close: function (error) {\n            error = error || new Error(\"Can't get value from closed queue\");\n            var end = {head: Q.reject(error)};\n            end.tail = end;\n            ends.resolve(end);\n            return closed.promise;\n        }\n    };\n}\n\n"]}