{"version":3,"sources":["utf16.js"],"names":[],"mappings":"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","file":"utf16-compiled.js","sourcesContent":["\"use strict\"\n\n// == UTF16-BE codec. ==========================================================\n\nexports.utf16be = Utf16BECodec;\nfunction Utf16BECodec() {\n}\n\nUtf16BECodec.prototype.encoder = Utf16BEEncoder;\nUtf16BECodec.prototype.decoder = Utf16BEDecoder;\nUtf16BECodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf16BEEncoder() {\n}\n\nUtf16BEEncoder.prototype.write = function(str) {\n    var buf = new Buffer(str, 'ucs2');\n    for (var i = 0; i < buf.length; i += 2) {\n        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;\n    }\n    return buf;\n}\n\nUtf16BEEncoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf16BEDecoder() {\n    this.overflowByte = -1;\n}\n\nUtf16BEDecoder.prototype.write = function(buf) {\n    if (buf.length == 0)\n        return '';\n\n    var buf2 = new Buffer(buf.length + 1),\n        i = 0, j = 0;\n\n    if (this.overflowByte !== -1) {\n        buf2[0] = buf[0];\n        buf2[1] = this.overflowByte;\n        i = 1; j = 2;\n    }\n\n    for (; i < buf.length-1; i += 2, j+= 2) {\n        buf2[j] = buf[i+1];\n        buf2[j+1] = buf[i];\n    }\n\n    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;\n\n    return buf2.slice(0, j).toString('ucs2');\n}\n\nUtf16BEDecoder.prototype.end = function() {\n}\n\n\n// == UTF-16 codec =============================================================\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\n\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\n\nexports.utf16 = Utf16Codec;\nfunction Utf16Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n}\n\nUtf16Codec.prototype.encoder = Utf16Encoder;\nUtf16Codec.prototype.decoder = Utf16Decoder;\n\n\n// -- Encoding (pass-through)\n\nfunction Utf16Encoder(options, codec) {\n    options = options || {};\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n    this.encoder = codec.iconv.getEncoder('utf-16le', options);\n}\n\nUtf16Encoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n}\n\nUtf16Encoder.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n// -- Decoding\n\nfunction Utf16Decoder(options, codec) {\n    this.decoder = null;\n    this.initialBytes = [];\n    this.initialBytesLen = 0;\n\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf16Decoder.prototype.write = function(buf) {\n    if (!this.decoder) {\n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBytes.push(buf);\n        this.initialBytesLen += buf.length;\n        \n        if (this.initialBytesLen < 16) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n        this.initialBytes.length = this.initialBytesLen = 0;\n    }\n\n    return this.decoder.write(buf);\n}\n\nUtf16Decoder.prototype.end = function() {\n    if (!this.decoder) {\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var res = this.decoder.write(buf),\n            trail = this.decoder.end();\n\n        return trail ? (res + trail) : res;\n    }\n    return this.decoder.end();\n}\n\nfunction detectEncoding(buf, defaultEncoding) {\n    var enc = defaultEncoding || 'utf-16le';\n\n    if (buf.length >= 2) {\n        // Check BOM.\n        if (buf[0] == 0xFE && buf[1] == 0xFF) // UTF-16BE BOM\n            enc = 'utf-16be';\n        else if (buf[0] == 0xFF && buf[1] == 0xFE) // UTF-16LE BOM\n            enc = 'utf-16le';\n        else {\n            // No BOM found. Try to deduce encoding from initial content.\n            // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\n            // So, we count ASCII as if it was LE or BE, and decide from that.\n            var asciiCharsLE = 0, asciiCharsBE = 0, // Counts of chars in both positions\n                _len = Math.min(buf.length - (buf.length % 2), 64); // Len is always even.\n\n            for (var i = 0; i < _len; i += 2) {\n                if (buf[i] === 0 && buf[i+1] !== 0) asciiCharsBE++;\n                if (buf[i] !== 0 && buf[i+1] === 0) asciiCharsLE++;\n            }\n\n            if (asciiCharsBE > asciiCharsLE)\n                enc = 'utf-16be';\n            else if (asciiCharsBE < asciiCharsLE)\n                enc = 'utf-16le';\n        }\n    }\n\n    return enc;\n}\n\n\n"]}