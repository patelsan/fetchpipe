{"version":3,"sources":["bom-handling.js"],"names":[],"mappings":"AAAA,YAAY,CAAA;;AAEZ,IAAI,OAAO,GAAG,GAAQ,CAAC;;AAEvB,OAAO,CAAC,UAAU,GAAG,iBAAiB,CAAA;AACtC,SAAS,iBAAiB,CAAC,OAAO,EAAE,OAAO,EAAE;AACzC,QAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,QAAI,CAAC,MAAM,GAAG,IAAI,CAAC;CACtB;;AAED,iBAAiB,CAAC,SAAS,CAAC,KAAK,GAAG,UAAS,GAAG,EAAE;AAC9C,QAAI,IAAI,CAAC,MAAM,EAAE;AACb,WAAG,GAAG,OAAO,GAAG,GAAG,CAAC;AACpB,YAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACvB;;AAED,WAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;CAClC,CAAA;;AAED,iBAAiB,CAAC,SAAS,CAAC,GAAG,GAAG,YAAW;AACzC,WAAO,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;CAC7B,CAAA;;;;AAKD,OAAO,CAAC,QAAQ,GAAG,eAAe,CAAC;AACnC,SAAS,eAAe,CAAC,OAAO,EAAE,OAAO,EAAE;AACvC,QAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,QAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AAClB,QAAI,CAAC,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;CAChC;;AAED,eAAe,CAAC,SAAS,CAAC,KAAK,GAAG,UAAS,GAAG,EAAE;AAC5C,QAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAClC,QAAI,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,EACjB,OAAO,GAAG,CAAC;;AAEf,QAAI,GAAG,CAAC,CAAC,CAAC,KAAK,OAAO,EAAE;AACpB,WAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACnB,YAAI,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,KAAK,UAAU,EAC3C,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;KAC/B;;AAED,QAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,WAAO,GAAG,CAAC;CACd,CAAA;;AAED,eAAe,CAAC,SAAS,CAAC,GAAG,GAAG,YAAW;AACvC,WAAO,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;CAC7B,CAAA","file":"bom-handling-compiled.js","sourcesContent":["\"use strict\"\n\nvar BOMChar = '\\uFEFF';\n\nexports.PrependBOM = PrependBOMWrapper\nfunction PrependBOMWrapper(encoder, options) {\n    this.encoder = encoder;\n    this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function(str) {\n    if (this.addBOM) {\n        str = BOMChar + str;\n        this.addBOM = false;\n    }\n\n    return this.encoder.write(str);\n}\n\nPrependBOMWrapper.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder, options) {\n    this.decoder = decoder;\n    this.pass = false;\n    this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function(buf) {\n    var res = this.decoder.write(buf);\n    if (this.pass || !res)\n        return res;\n\n    if (res[0] === BOMChar) {\n        res = res.slice(1);\n        if (typeof this.options.stripBOM === 'function')\n            this.options.stripBOM();\n    }\n\n    this.pass = true;\n    return res;\n}\n\nStripBOMWrapper.prototype.end = function() {\n    return this.decoder.end();\n}\n\n"]}