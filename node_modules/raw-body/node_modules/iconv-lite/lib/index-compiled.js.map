{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["\"use strict\"\n\nvar bomHandling = require('./bom-handling'),\n    iconv = module.exports;\n\n// All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\niconv.encodings = null;\n\n// Characters emitted in case of error.\niconv.defaultCharUnicode = 'ï¿½';\niconv.defaultCharSingleByte = '?';\n\n// Public API.\niconv.encode = function encode(str, encoding, options) {\n    str = \"\" + (str || \"\"); // Ensure string.\n\n    var encoder = iconv.getEncoder(encoding, options);\n\n    var res = encoder.write(str);\n    var trail = encoder.end();\n    \n    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;\n}\n\niconv.decode = function decode(buf, encoding, options) {\n    if (typeof buf === 'string') {\n        if (!iconv.skipDecodeWarning) {\n            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\n            iconv.skipDecodeWarning = true;\n        }\n\n        buf = new Buffer(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\n    }\n\n    var decoder = iconv.getDecoder(encoding, options);\n\n    var res = decoder.write(buf);\n    var trail = decoder.end();\n\n    return trail ? (res + trail) : res;\n}\n\niconv.encodingExists = function encodingExists(enc) {\n    try {\n        iconv.getCodec(enc);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Legacy aliases to convert functions\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode;\n\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\niconv._codecDataCache = {};\niconv.getCodec = function getCodec(encoding) {\n    if (!iconv.encodings)\n        iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.\n    \n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    var enc = (''+encoding).toLowerCase().replace(/[^0-9a-z]|:\\d{4}$/g, \"\");\n\n    // Traverse iconv.encodings to find actual codec.\n    var codecOptions = {};\n    while (true) {\n        var codec = iconv._codecDataCache[enc];\n        if (codec)\n            return codec;\n\n        var codecDef = iconv.encodings[enc];\n\n        switch (typeof codecDef) {\n            case \"string\": // Direct alias to other encoding.\n                enc = codecDef;\n                break;\n\n            case \"object\": // Alias with options. Can be layered.\n                for (var key in codecDef)\n                    codecOptions[key] = codecDef[key];\n\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n                \n                enc = codecDef.type;\n                break;\n\n            case \"function\": // Codec itself.\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\n                // It'll be called only once (for each different options object).\n                codec = new codecDef(codecOptions, iconv);\n\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n                return codec;\n\n            default:\n                throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\"+enc+\"')\");\n        }\n    }\n}\n\niconv.getEncoder = function getEncoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        encoder = new codec.encoder(options, codec);\n\n    if (codec.bomAware && options && options.addBOM)\n        encoder = new bomHandling.PrependBOM(encoder, options);\n\n    return encoder;\n}\n\niconv.getDecoder = function getDecoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        decoder = new codec.decoder(options, codec);\n\n    if (codec.bomAware && !(options && options.stripBOM === false))\n        decoder = new bomHandling.StripBOM(decoder, options);\n\n    return decoder;\n}\n\n\n// Load extensions in Node. All of them are omitted in Browserify build via 'browser' field in package.json.\nvar nodeVer = typeof process !== 'undefined' && process.versions && process.versions.node;\nif (nodeVer) {\n\n    // Load streaming support in Node v0.10+\n    var nodeVerArr = nodeVer.split(\".\").map(Number);\n    if (nodeVerArr[0] > 0 || nodeVerArr[1] >= 10) {\n        require(\"./streams\")(iconv);\n    }\n\n    // Load Node primitive extensions.\n    require(\"./extend-node\")(iconv);\n}\n\n"]}