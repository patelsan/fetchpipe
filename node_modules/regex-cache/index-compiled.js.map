{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAOA,YAAY,CAAC;;AAEb,IAAI,WAAW,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AAC1C,IAAI,KAAK,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;;;;;;AAMxC,MAAM,CAAC,OAAO,GAAG,UAAU,CAAC;;;;;;;;;;;;AAY5B,SAAS,UAAU,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE;AACjC,MAAI,GAAG,GAAG,WAAW;MAAE,KAAK;MAAE,MAAM,CAAC;;AAErC,MAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE;AACjB,QAAI,OAAO,EAAE,KAAK,UAAU,EAAE;AAC5B,aAAO,EAAE,CAAC;KACX;AACD,WAAO,KAAK,CAAC,GAAG,CAAC,KAAK,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,CAAA,AAAC,CAAC;GAC1C;;AAED,MAAI,QAAQ,GAAG,OAAO,GAAG,KAAK,QAAQ,CAAC;AACvC,MAAI,QAAQ,EAAE;AACZ,QAAI,CAAC,IAAI,EAAE;AACT,aAAO,KAAK,CAAC,GAAG,CAAC,KAAK,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAA,AAAC,CAAC;KAC7C;AACD,OAAG,GAAG,GAAG,CAAC;GACX,MAAM;AACL,QAAI,GAAG,GAAG,CAAC;GACZ;;AAED,QAAM,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;AACpB,MAAI,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE;AACtC,WAAO,MAAM,CAAC,KAAK,CAAC;GACrB;;AAED,MAAI,CAAC,GAAG,EAAE,IAAI,EAAG,KAAK,GAAG,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,CAAE,CAAC;AACzC,SAAO,KAAK,CAAC;CACd;;AAED,SAAS,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE;AAC9B,OAAK,CAAC,GAAG,CAAC,GAAG,EAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAC,CAAC;CACzC;;;;;;AAMD,IAAI,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,GAAG,EAAE,CAAC;AACtC,IAAI,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,GAAG,EAAE,CAAC","file":"index-compiled.js","sourcesContent":["/*!\n * regex-cache <https://github.com/jonschlinkert/regex-cache>\n *\n * Copyright (c) 2015 Jon Schlinkert.\n * Licensed under the MIT license.\n */\n\n'use strict';\n\nvar isPrimitive = require('is-primitive');\nvar equal = require('is-equal-shallow');\n\n/**\n * Expose `regexCache`\n */\n\nmodule.exports = regexCache;\n\n/**\n * Memoize the results of a call to the new RegExp constructor.\n *\n * @param  {Function} fn [description]\n * @param  {String} str [description]\n * @param  {Options} options [description]\n * @param  {Boolean} nocompare [description]\n * @return {RegExp}\n */\n\nfunction regexCache(fn, str, opts) {\n  var key = '_default_', regex, cached;\n\n  if (!str && !opts) {\n    if (typeof fn !== 'function') {\n      return fn;\n    }\n    return basic[key] || (basic[key] = fn());\n  }\n\n  var isString = typeof str === 'string';\n  if (isString) {\n    if (!opts) {\n      return basic[str] || (basic[str] = fn(str));\n    }\n    key = str;\n  } else {\n    opts = str;\n  }\n\n  cached = cache[key];\n  if (cached && equal(cached.opts, opts)) {\n    return cached.regex;\n  }\n\n  memo(key, opts, (regex = fn(str, opts)));\n  return regex;\n}\n\nfunction memo(key, opts, regex) {\n  cache[key] = {regex: regex, opts: opts};\n}\n\n/**\n * Expose `cache`\n */\n\nvar cache = module.exports.cache = {};\nvar basic = module.exports.basic = {};\n"]}