{"version":3,"sources":["pathfilter.js"],"names":[],"mappings":";;AAAA,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;;AAE7B,IAAI,CAAC,gDAAgD,EAAE,UAAS,CAAC,EAAC;AACjE,GAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;AAEV,MAAI,WAAW,GAAG,SAAS,GAAG,sBAAsB,CAAC;AACrD,MAAI,UAAU,GAAG,SAAb,UAAU,CAAY,GAAG,EAAE,CAAC,EAAE,SAAS,EAAC;AAC3C,KAAC,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AAC9B,KAAC,CAAC,KAAK,CAAC,CAAC,EAAE,WAAW,GAAG,wBAAwB,CAAC,CAAC;AACnD,KAAC,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AAC1B,WAAO,KAAK,CAAC;GACb,CAAC;;AAEF,SAAO,CAAC,UAAU,EAAE,EAAE,OAAO,EAAG,WAAW,EAAE,EAAE,UAAU,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACjE,QAAI,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;AAErB,KAAC,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AAC9B,KAAC,CAAC,KAAK,CAAC,GAAG,EAAE,WAAW,GAAG,2BAA2B,CAAC,CAAC;GAC3D,CAAC,CAAC;;AAEH,SAAO,CAAC,iBAAiB,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE,EACnD,UAAS,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,QAAG,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACpB,KAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;AAC3B,KAAC,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AAC9B,KAAC,CAAC,KAAK,CAAC,GAAG,EAAE,WAAW,GAAG,kCAAkC,CAAC,CAAC;GAChE,CAAC,CAAC;;AAEH,SAAO,CAAC,UAAU,EAAE,EAAE,OAAO,EAAG,WAAW,EAAE,UAAU,EAAG,UAAU,EAAE,EACtE,UAAU,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACrB,QAAI,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACrB,KAAC,CAAC,KAAK,CAAC,GAAG,EAAE,WAAW,GAAG,2BAA2B,CAAC,CAAC;GAC3D,CAAC,CAAC;CACN,CAAC,CAAC","file":"pathfilter-compiled.js","sourcesContent":["var test = require('tape');\nvar resolve = require('../');\n\ntest('#62: deep module references and the pathFilter', function(t){\n\tt.plan(9);\n    \n\tvar resolverDir = __dirname + '/pathfilter/deep_ref';\n\tvar pathFilter = function(pkg, x, remainder){\n\t\tt.equal(pkg.version, \"1.2.3\");\n\t\tt.equal(x, resolverDir + '/node_modules/deep/ref');\n\t\tt.equal(remainder, \"ref\");\n\t\treturn \"alt\";\n\t};\n\t\n\tresolve('deep/ref', { basedir : resolverDir }, function (err, res, pkg) {\n        if (err) t.fail(err);\n\n        t.equal(pkg.version, \"1.2.3\");\n        t.equal(res, resolverDir + '/node_modules/deep/ref.js');\n    });\n\n    resolve('deep/deeper/ref', { basedir: resolverDir },\n    function(err, res, pkg) {\n      if(err) t.fail(err);\n      t.notEqual(pkg, undefined);\n      t.equal(pkg.version, \"1.2.3\");\n      t.equal(res, resolverDir + '/node_modules/deep/deeper/ref.js');\n    });\n    \n    resolve('deep/ref', { basedir : resolverDir, pathFilter : pathFilter },\n    function (err, res, pkg) {\n        if (err) t.fail(err);\n        t.equal(res, resolverDir + '/node_modules/deep/alt.js');\n    });\n});\n"]}