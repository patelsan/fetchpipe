{"version":3,"sources":["semver.browser.js"],"names":[],"mappings":"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","file":"semver.browser-compiled.js","sourcesContent":[";(function(exports) {\n\n// export the class if we are in a Node-like system.\nif (typeof module === 'object' && module.exports === exports)\n  exports = module.exports = SemVer;\n\n// The debug function is excluded entirely from the minified version.\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0';\n\nvar MAX_LENGTH = 256;\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\n// The actual regexps go on exports.re\nvar re = exports.re = [];\nvar src = exports.src = [];\nvar R = 0;\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\nvar NUMERICIDENTIFIER = R++;\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*';\nvar NUMERICIDENTIFIERLOOSE = R++;\nsrc[NUMERICIDENTIFIERLOOSE] = '[0-9]+';\n\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\nvar NONNUMERICIDENTIFIER = R++;\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*';\n\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\nvar MAINVERSION = R++;\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')';\n\nvar MAINVERSIONLOOSE = R++;\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')';\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\nvar PRERELEASEIDENTIFIER = R++;\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +\n                            '|' + src[NONNUMERICIDENTIFIER] + ')';\n\nvar PRERELEASEIDENTIFIERLOOSE = R++;\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[NONNUMERICIDENTIFIER] + ')';\n\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\nvar PRERELEASE = R++;\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))';\n\nvar PRERELEASELOOSE = R++;\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))';\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\nvar BUILDIDENTIFIER = R++;\nsrc[BUILDIDENTIFIER] = '[0-9A-Za-z-]+';\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\nvar BUILD = R++;\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))';\n\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\nvar FULL = R++;\nvar FULLPLAIN = 'v?' + src[MAINVERSION] +\n                src[PRERELEASE] + '?' +\n                src[BUILD] + '?';\n\nsrc[FULL] = '^' + FULLPLAIN + '$';\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] +\n                 src[PRERELEASELOOSE] + '?' +\n                 src[BUILD] + '?';\n\nvar LOOSE = R++;\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$';\n\nvar GTLT = R++;\nsrc[GTLT] = '((?:<|>)?=?)';\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\nvar XRANGEIDENTIFIERLOOSE = R++;\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*';\nvar XRANGEIDENTIFIER = R++;\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*';\n\nvar XRANGEPLAIN = R++;\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[PRERELEASE] + ')?' +\n                   src[BUILD] + '?' +\n                   ')?)?';\n\nvar XRANGEPLAINLOOSE = R++;\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[PRERELEASELOOSE] + ')?' +\n                        src[BUILD] + '?' +\n                        ')?)?';\n\nvar XRANGE = R++;\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$';\nvar XRANGELOOSE = R++;\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$';\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\nvar LONETILDE = R++;\nsrc[LONETILDE] = '(?:~>?)';\n\nvar TILDETRIM = R++;\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+';\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');\nvar tildeTrimReplace = '$1~';\n\nvar TILDE = R++;\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';\nvar TILDELOOSE = R++;\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$';\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\nvar LONECARET = R++;\nsrc[LONECARET] = '(?:\\\\^)';\n\nvar CARETTRIM = R++;\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+';\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');\nvar caretTrimReplace = '$1^';\n\nvar CARET = R++;\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';\nvar CARETLOOSE = R++;\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$';\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\nvar COMPARATORLOOSE = R++;\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$';\nvar COMPARATOR = R++;\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$';\n\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\nvar COMPARATORTRIM = R++;\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] +\n                      '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')';\n\n// this one has to use the /g flag\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');\nvar comparatorTrimReplace = '$1$2$3';\n\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\nvar HYPHENRANGE = R++;\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s*$';\n\nvar HYPHENRANGELOOSE = R++;\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$';\n\n// Star ranges basically just allow anything at all.\nvar STAR = R++;\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*';\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  ;\n  if (!re[i])\n    re[i] = new RegExp(src[i]);\n}\n\nexports.parse = parse;\nfunction parse(version, loose) {\n  if (version instanceof SemVer)\n    return version;\n\n  if (typeof version !== 'string')\n    return null;\n\n  if (version.length > MAX_LENGTH)\n    return null;\n\n  var r = loose ? re[LOOSE] : re[FULL];\n  if (!r.test(version))\n    return null;\n\n  try {\n    return new SemVer(version, loose);\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.valid = valid;\nfunction valid(version, loose) {\n  var v = parse(version, loose);\n  return v ? v.version : null;\n}\n\n\nexports.clean = clean;\nfunction clean(version, loose) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), loose);\n  return s ? s.version : null;\n}\n\nexports.SemVer = SemVer;\n\nfunction SemVer(version, loose) {\n  if (version instanceof SemVer) {\n    if (version.loose === loose)\n      return version;\n    else\n      version = version.version;\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version);\n  }\n\n  if (version.length > MAX_LENGTH)\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n\n  if (!(this instanceof SemVer))\n    return new SemVer(version, loose);\n\n  ;\n  this.loose = loose;\n  var m = version.trim().match(loose ? re[LOOSE] : re[FULL]);\n\n  if (!m)\n    throw new TypeError('Invalid Version: ' + version);\n\n  this.raw = version;\n\n  // these are actually numbers\n  this.major = +m[1];\n  this.minor = +m[2];\n  this.patch = +m[3];\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0)\n    throw new TypeError('Invalid major version')\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0)\n    throw new TypeError('Invalid minor version')\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0)\n    throw new TypeError('Invalid patch version')\n\n  // numberify any prerelease numeric ids\n  if (!m[4])\n    this.prerelease = [];\n  else\n    this.prerelease = m[4].split('.').map(function(id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id\n        if (num >= 0 && num < MAX_SAFE_INTEGER)\n          return num\n      }\n      return id;\n    });\n\n  this.build = m[5] ? m[5].split('.') : [];\n  this.format();\n}\n\nSemVer.prototype.format = function() {\n  this.version = this.major + '.' + this.minor + '.' + this.patch;\n  if (this.prerelease.length)\n    this.version += '-' + this.prerelease.join('.');\n  return this.version;\n};\n\nSemVer.prototype.inspect = function() {\n  return '<SemVer \"' + this + '\">';\n};\n\nSemVer.prototype.toString = function() {\n  return this.version;\n};\n\nSemVer.prototype.compare = function(other) {\n  ;\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  return this.compareMain(other) || this.comparePre(other);\n};\n\nSemVer.prototype.compareMain = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch);\n};\n\nSemVer.prototype.comparePre = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length)\n    return -1;\n  else if (!this.prerelease.length && other.prerelease.length)\n    return 1;\n  else if (!this.prerelease.length && !other.prerelease.length)\n    return 0;\n\n  var i = 0;\n  do {\n    var a = this.prerelease[i];\n    var b = other.prerelease[i];\n    ;\n    if (a === undefined && b === undefined)\n      return 0;\n    else if (b === undefined)\n      return 1;\n    else if (a === undefined)\n      return -1;\n    else if (a === b)\n      continue;\n    else\n      return compareIdentifiers(a, b);\n  } while (++i);\n};\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function(release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor = 0;\n      this.major++;\n      this.inc('pre', identifier);\n      break;\n    case 'preminor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor++;\n      this.inc('pre', identifier);\n      break;\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0;\n      this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0)\n        this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0)\n        this.major++;\n      this.minor = 0;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0)\n        this.minor++;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0)\n        this.patch++;\n      this.prerelease = [];\n      break;\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0)\n        this.prerelease = [0];\n      else {\n        var i = this.prerelease.length;\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++;\n            i = -2;\n          }\n        }\n        if (i === -1) // didn't increment anything\n          this.prerelease.push(0);\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1]))\n            this.prerelease = [identifier, 0];\n        } else\n          this.prerelease = [identifier, 0];\n      }\n      break;\n\n    default:\n      throw new Error('invalid increment argument: ' + release);\n  }\n  this.format();\n  return this;\n};\n\nexports.inc = inc;\nfunction inc(version, release, loose, identifier) {\n  if (typeof(loose) === 'string') {\n    identifier = loose;\n    loose = undefined;\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version;\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.diff = diff;\nfunction diff(version1, version2) {\n  if (eq(version1, version2)) {\n    return null;\n  } else {\n    var v1 = parse(version1);\n    var v2 = parse(version2);\n    if (v1.prerelease.length || v2.prerelease.length) {\n      for (var key in v1) {\n        if (key === 'major' || key === 'minor' || key === 'patch') {\n          if (v1[key] !== v2[key]) {\n            return 'pre'+key;\n          }\n        }\n      }\n      return 'prerelease';\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return key;\n        }\n      }\n    }\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers;\n\nvar numeric = /^[0-9]+$/;\nfunction compareIdentifiers(a, b) {\n  var anum = numeric.test(a);\n  var bnum = numeric.test(b);\n\n  if (anum && bnum) {\n    a = +a;\n    b = +b;\n  }\n\n  return (anum && !bnum) ? -1 :\n         (bnum && !anum) ? 1 :\n         a < b ? -1 :\n         a > b ? 1 :\n         0;\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers;\nfunction rcompareIdentifiers(a, b) {\n  return compareIdentifiers(b, a);\n}\n\nexports.major = major;\nfunction major(a, loose) {\n  return new SemVer(a, loose).major;\n}\n\nexports.minor = minor;\nfunction minor(a, loose) {\n  return new SemVer(a, loose).minor;\n}\n\nexports.patch = patch;\nfunction patch(a, loose) {\n  return new SemVer(a, loose).patch;\n}\n\nexports.compare = compare;\nfunction compare(a, b, loose) {\n  return new SemVer(a, loose).compare(b);\n}\n\nexports.compareLoose = compareLoose;\nfunction compareLoose(a, b) {\n  return compare(a, b, true);\n}\n\nexports.rcompare = rcompare;\nfunction rcompare(a, b, loose) {\n  return compare(b, a, loose);\n}\n\nexports.sort = sort;\nfunction sort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.compare(a, b, loose);\n  });\n}\n\nexports.rsort = rsort;\nfunction rsort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.rcompare(a, b, loose);\n  });\n}\n\nexports.gt = gt;\nfunction gt(a, b, loose) {\n  return compare(a, b, loose) > 0;\n}\n\nexports.lt = lt;\nfunction lt(a, b, loose) {\n  return compare(a, b, loose) < 0;\n}\n\nexports.eq = eq;\nfunction eq(a, b, loose) {\n  return compare(a, b, loose) === 0;\n}\n\nexports.neq = neq;\nfunction neq(a, b, loose) {\n  return compare(a, b, loose) !== 0;\n}\n\nexports.gte = gte;\nfunction gte(a, b, loose) {\n  return compare(a, b, loose) >= 0;\n}\n\nexports.lte = lte;\nfunction lte(a, b, loose) {\n  return compare(a, b, loose) <= 0;\n}\n\nexports.cmp = cmp;\nfunction cmp(a, op, b, loose) {\n  var ret;\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a === b;\n      break;\n    case '!==':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a !== b;\n      break;\n    case '': case '=': case '==': ret = eq(a, b, loose); break;\n    case '!=': ret = neq(a, b, loose); break;\n    case '>': ret = gt(a, b, loose); break;\n    case '>=': ret = gte(a, b, loose); break;\n    case '<': ret = lt(a, b, loose); break;\n    case '<=': ret = lte(a, b, loose); break;\n    default: throw new TypeError('Invalid operator: ' + op);\n  }\n  return ret;\n}\n\nexports.Comparator = Comparator;\nfunction Comparator(comp, loose) {\n  if (comp instanceof Comparator) {\n    if (comp.loose === loose)\n      return comp;\n    else\n      comp = comp.value;\n  }\n\n  if (!(this instanceof Comparator))\n    return new Comparator(comp, loose);\n\n  ;\n  this.loose = loose;\n  this.parse(comp);\n\n  if (this.semver === ANY)\n    this.value = '';\n  else\n    this.value = this.operator + this.semver.version;\n\n  ;\n}\n\nvar ANY = {};\nComparator.prototype.parse = function(comp) {\n  var r = this.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var m = comp.match(r);\n\n  if (!m)\n    throw new TypeError('Invalid comparator: ' + comp);\n\n  this.operator = m[1];\n  if (this.operator === '=')\n    this.operator = '';\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2])\n    this.semver = ANY;\n  else\n    this.semver = new SemVer(m[2], this.loose);\n};\n\nComparator.prototype.inspect = function() {\n  return '<SemVer Comparator \"' + this + '\">';\n};\n\nComparator.prototype.toString = function() {\n  return this.value;\n};\n\nComparator.prototype.test = function(version) {\n  ;\n\n  if (this.semver === ANY)\n    return true;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.loose);\n\n  return cmp(version, this.operator, this.semver, this.loose);\n};\n\n\nexports.Range = Range;\nfunction Range(range, loose) {\n  if ((range instanceof Range) && range.loose === loose)\n    return range;\n\n  if (!(this instanceof Range))\n    return new Range(range, loose);\n\n  this.loose = loose;\n\n  // First, split based on boolean or ||\n  this.raw = range;\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function(range) {\n    return this.parseRange(range.trim());\n  }, this).filter(function(c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length;\n  });\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range);\n  }\n\n  this.format();\n}\n\nRange.prototype.inspect = function() {\n  return '<SemVer Range \"' + this.range + '\">';\n};\n\nRange.prototype.format = function() {\n  this.range = this.set.map(function(comps) {\n    return comps.join(' ').trim();\n  }).join('||').trim();\n  return this.range;\n};\n\nRange.prototype.toString = function() {\n  return this.range;\n};\n\nRange.prototype.parseRange = function(range) {\n  var loose = this.loose;\n  range = range.trim();\n  ;\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];\n  range = range.replace(hr, hyphenReplace);\n  ;\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);\n  ;\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[TILDETRIM], tildeTrimReplace);\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[CARETTRIM], caretTrimReplace);\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ');\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var set = range.split(' ').map(function(comp) {\n    return parseComparator(comp, loose);\n  }).join(' ').split(/\\s+/);\n  if (this.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function(comp) {\n      return !!comp.match(compRe);\n    });\n  }\n  set = set.map(function(comp) {\n    return new Comparator(comp, loose);\n  });\n\n  return set;\n};\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators;\nfunction toComparators(range, loose) {\n  return new Range(range, loose).set.map(function(comp) {\n    return comp.map(function(c) {\n      return c.value;\n    }).join(' ').trim().split(' ');\n  });\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator(comp, loose) {\n  ;\n  comp = replaceCarets(comp, loose);\n  ;\n  comp = replaceTildes(comp, loose);\n  ;\n  comp = replaceXRanges(comp, loose);\n  ;\n  comp = replaceStars(comp, loose);\n  ;\n  return comp;\n}\n\nfunction isX(id) {\n  return !id || id.toLowerCase() === 'x' || id === '*';\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceTilde(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceTilde(comp, loose) {\n  var r = loose ? re[TILDELOOSE] : re[TILDE];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    ;\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p))\n      // ~1.2 == >=1.2.0- <1.3.0-\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    else if (pr) {\n      ;\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      ret = '>=' + M + '.' + m + '.' + p + pr +\n            ' <' + M + '.' + (+m + 1) + '.0';\n    } else\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0';\n\n    ;\n    return ret;\n  });\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceCaret(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceCaret(comp, loose) {\n  ;\n  var r = loose ? re[CARETLOOSE] : re[CARET];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    ;\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p)) {\n      if (M === '0')\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n      else\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';\n    } else if (pr) {\n      ;\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p + pr +\n              ' <' + (+M + 1) + '.0.0';\n    } else {\n      ;\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0';\n    }\n\n    ;\n    return ret;\n  });\n}\n\nfunction replaceXRanges(comp, loose) {\n  ;\n  return comp.split(/\\s+/).map(function(comp) {\n    return replaceXRange(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceXRange(comp, loose) {\n  comp = comp.trim();\n  var r = loose ? re[XRANGELOOSE] : re[XRANGE];\n  return comp.replace(r, function(ret, gtlt, M, m, p, pr) {\n    ;\n    var xM = isX(M);\n    var xm = xM || isX(m);\n    var xp = xm || isX(p);\n    var anyX = xp;\n\n    if (gtlt === '=' && anyX)\n      gtlt = '';\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0';\n      } else {\n        // nothing is forbidden\n        ret = '*';\n      }\n    } else if (gtlt && anyX) {\n      // replace X with 0\n      if (xm)\n        m = 0;\n      if (xp)\n        p = 0;\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>=';\n        if (xm) {\n          M = +M + 1;\n          m = 0;\n          p = 0;\n        } else if (xp) {\n          m = +m + 1;\n          p = 0;\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm)\n          M = +M + 1\n        else\n          m = +m + 1\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p;\n    } else if (xm) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    }\n\n    ;\n\n    return ret;\n  });\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars(comp, loose) {\n  ;\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[STAR], '');\n}\n\n// This function is passed to string.replace(re[HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace($0,\n                       from, fM, fm, fp, fpr, fb,\n                       to, tM, tm, tp, tpr, tb) {\n\n  if (isX(fM))\n    from = '';\n  else if (isX(fm))\n    from = '>=' + fM + '.0.0';\n  else if (isX(fp))\n    from = '>=' + fM + '.' + fm + '.0';\n  else\n    from = '>=' + from;\n\n  if (isX(tM))\n    to = '';\n  else if (isX(tm))\n    to = '<' + (+tM + 1) + '.0.0';\n  else if (isX(tp))\n    to = '<' + tM + '.' + (+tm + 1) + '.0';\n  else if (tpr)\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;\n  else\n    to = '<=' + to;\n\n  return (from + ' ' + to).trim();\n}\n\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function(version) {\n  if (!version)\n    return false;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.loose);\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version))\n      return true;\n  }\n  return false;\n};\n\nfunction testSet(set, version) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version))\n      return false;\n  }\n\n  if (version.prerelease.length) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (var i = 0; i < set.length; i++) {\n      ;\n      if (set[i].semver === ANY)\n        continue;\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver;\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch)\n          return true;\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false;\n  }\n\n  return true;\n}\n\nexports.satisfies = satisfies;\nfunction satisfies(version, range, loose) {\n  try {\n    range = new Range(range, loose);\n  } catch (er) {\n    return false;\n  }\n  return range.test(version);\n}\n\nexports.maxSatisfying = maxSatisfying;\nfunction maxSatisfying(versions, range, loose) {\n  return versions.filter(function(version) {\n    return satisfies(version, range, loose);\n  }).sort(function(a, b) {\n    return rcompare(a, b, loose);\n  })[0] || null;\n}\n\nexports.validRange = validRange;\nfunction validRange(range, loose) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, loose).range || '*';\n  } catch (er) {\n    return null;\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr;\nfunction ltr(version, range, loose) {\n  return outside(version, range, '<', loose);\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr;\nfunction gtr(version, range, loose) {\n  return outside(version, range, '>', loose);\n}\n\nexports.outside = outside;\nfunction outside(version, range, hilo, loose) {\n  version = new SemVer(version, loose);\n  range = new Range(range, loose);\n\n  var gtfn, ltefn, ltfn, comp, ecomp;\n  switch (hilo) {\n    case '>':\n      gtfn = gt;\n      ltefn = lte;\n      ltfn = lt;\n      comp = '>';\n      ecomp = '>=';\n      break;\n    case '<':\n      gtfn = lt;\n      ltefn = gte;\n      ltfn = gt;\n      comp = '<';\n      ecomp = '<=';\n      break;\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, loose)) {\n    return false;\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i];\n\n    var high = null;\n    var low = null;\n\n    comparators.forEach(function(comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator;\n      low = low || comparator;\n      if (gtfn(comparator.semver, high.semver, loose)) {\n        high = comparator;\n      } else if (ltfn(comparator.semver, low.semver, loose)) {\n        low = comparator;\n      }\n    });\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false;\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false;\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Use the define() function if we're in AMD land\nif (typeof define === 'function' && define.amd)\n  define(exports);\n\n})(\n  typeof exports === 'object' ? exports :\n  typeof define === 'function' && define.amd ? {} :\n  semver = {}\n);\n"]}