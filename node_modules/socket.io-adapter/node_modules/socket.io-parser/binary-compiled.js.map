{"version":3,"sources":["binary.js"],"names":[],"mappings":"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","file":"binary-compiled.js","sourcesContent":["/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet){\n  var buffers = [];\n  var packetData = packet.data;\n\n  function _deconstructPacket(data) {\n    if (!data) return data;\n\n    if (isBuf(data)) {\n      var placeholder = { _placeholder: true, num: buffers.length };\n      buffers.push(data);\n      return placeholder;\n    } else if (isArray(data)) {\n      var newData = new Array(data.length);\n      for (var i = 0; i < data.length; i++) {\n        newData[i] = _deconstructPacket(data[i]);\n      }\n      return newData;\n    } else if ('object' == typeof data && !(data instanceof Date)) {\n      var newData = {};\n      for (var key in data) {\n        newData[key] = _deconstructPacket(data[key]);\n      }\n      return newData;\n    }\n    return data;\n  }\n\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  var curPlaceHolder = 0;\n\n  function _reconstructPacket(data) {\n    if (data && data._placeholder) {\n      var buf = buffers[data.num]; // appropriate buffer (should be natural order anyway)\n      return buf;\n    } else if (isArray(data)) {\n      for (var i = 0; i < data.length; i++) {\n        data[i] = _reconstructPacket(data[i]);\n      }\n      return data;\n    } else if (data && 'object' == typeof data) {\n      for (var key in data) {\n        data[key] = _reconstructPacket(data[key]);\n      }\n      return data;\n    }\n    return data;\n  }\n\n  packet.data = _reconstructPacket(packet.data);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((global.Blob && obj instanceof Blob) ||\n        (global.File && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (obj && 'object' == typeof obj && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n"]}