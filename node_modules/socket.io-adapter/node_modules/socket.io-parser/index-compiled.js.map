{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('socket.io-parser');\nvar json = require('json3');\nvar isArray = require('isarray');\nvar Emitter = require('component-emitter');\nvar binary = require('./binary');\nvar isBuf = require('./is-buffer');\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'BINARY_EVENT',\n  'ACK',\n  'BINARY_ACK',\n  'ERROR'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n    encodeAsBinary(obj, callback);\n  }\n  else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n  var str = '';\n  var nsp = false;\n\n  // first is type\n  str += obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n    str += obj.attachments;\n    str += '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' != obj.nsp) {\n    nsp = true;\n    str += obj.nsp;\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    if (nsp) {\n      str += ',';\n      nsp = false;\n    }\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    if (nsp) str += ',';\n    str += json.stringify(obj.data);\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an ecoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if ('string' == typeof obj) {\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT == packet.type || exports.BINARY_ACK == packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments == 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  }\n  else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  }\n  else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var p = {};\n  var i = 0;\n\n  // look up type\n  p.type = Number(str.charAt(0));\n  if (null == exports.types[p.type]) return error();\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT == p.type || exports.BINARY_ACK == p.type) {\n    p.attachments = '';\n    while (str.charAt(++i) != '-') {\n      p.attachments += str.charAt(i);\n    }\n    p.attachments = Number(p.attachments);\n  }\n\n  // look up namespace (if any)\n  if ('/' == str.charAt(i + 1)) {\n    p.nsp = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' == c) break;\n      p.nsp += c;\n      if (i + 1 == str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' != next && Number(next) == next) {\n    p.id = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      p.id += str.charAt(i);\n      if (i + 1 == str.length) break;\n    }\n    p.id = Number(p.id);\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    try {\n      p.data = json.parse(str.substr(i));\n    } catch(e){\n      return error();\n    }\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length == this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(data){\n  return {\n    type: exports.ERROR,\n    data: 'parser error'\n  };\n}\n"]}