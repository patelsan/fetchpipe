{"version":3,"sources":["debug.js"],"names":[],"mappings":"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","file":"debug-compiled.js","sourcesContent":["\n/**\n * Expose `debug()` as the module.\n */\n\nmodule.exports = debug;\n\n/**\n * Create a debugger with the given `name`.\n *\n * @param {String} name\n * @return {Type}\n * @api public\n */\n\nfunction debug(name) {\n  if (!debug.enabled(name)) return function(){};\n\n  return function(fmt){\n    fmt = coerce(fmt);\n\n    var curr = new Date;\n    var ms = curr - (debug[name] || curr);\n    debug[name] = curr;\n\n    fmt = name\n      + ' '\n      + fmt\n      + ' +' + debug.humanize(ms);\n\n    // This hackery is required for IE8\n    // where `console.log` doesn't have 'apply'\n    window.console\n      && console.log\n      && Function.prototype.apply.call(console.log, console, arguments);\n  }\n}\n\n/**\n * The currently active debug mode names.\n */\n\ndebug.names = [];\ndebug.skips = [];\n\n/**\n * Enables a debug mode by name. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} name\n * @api public\n */\n\ndebug.enable = function(name) {\n  try {\n    localStorage.debug = name;\n  } catch(e){}\n\n  var split = (name || '').split(/[\\s,]+/)\n    , len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    name = split[i].replace('*', '.*?');\n    if (name[0] === '-') {\n      debug.skips.push(new RegExp('^' + name.substr(1) + '$'));\n    }\n    else {\n      debug.names.push(new RegExp('^' + name + '$'));\n    }\n  }\n};\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\ndebug.disable = function(){\n  debug.enable('');\n};\n\n/**\n * Humanize the given `ms`.\n *\n * @param {Number} m\n * @return {String}\n * @api private\n */\n\ndebug.humanize = function(ms) {\n  var sec = 1000\n    , min = 60 * 1000\n    , hour = 60 * min;\n\n  if (ms >= hour) return (ms / hour).toFixed(1) + 'h';\n  if (ms >= min) return (ms / min).toFixed(1) + 'm';\n  if (ms >= sec) return (ms / sec | 0) + 's';\n  return ms + 'ms';\n};\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\ndebug.enabled = function(name) {\n  for (var i = 0, len = debug.skips.length; i < len; i++) {\n    if (debug.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (var i = 0, len = debug.names.length; i < len; i++) {\n    if (debug.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Coerce `val`.\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n// persist\n\ntry {\n  if (window.localStorage) debug.enable(localStorage.debug);\n} catch(e){}\n"]}