{"version":3,"sources":["manager.js"],"names":[],"mappings":"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","file":"manager-compiled.js","sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar eio = require('engine.io-client');\nvar Socket = require('./socket');\nvar Emitter = require('component-emitter');\nvar parser = require('socket.io-parser');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar object = require('object-component');\nvar debug = require('debug')('socket.io-client:manager');\nvar indexOf = require('indexof');\nvar Backoff = require('backo2');\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager(uri, opts){\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' == typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connected = [];\n  this.encoding = false;\n  this.packetBuffer = [];\n  this.encoder = new parser.Encoder();\n  this.decoder = new parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function() {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function(){\n  for (var nsp in this.nsps) {\n    this.nsps[nsp].id = this.engine.id;\n  }\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function(v){\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function(v){\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function(v){\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function(v){\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function(v){\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function(v){\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function() {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function(fn){\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function() {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function(data){\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    // set timer\n    var timer = setTimeout(function(){\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function(){\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function(){\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function(data){\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function(packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function(err){\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function(nsp){\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connect', function(){\n      socket.id = self.engine.id;\n      if (!~indexOf(self.connected, socket)) {\n        self.connected.push(socket);\n      }\n    });\n  }\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function(socket){\n  var index = indexOf(this.connected, socket);\n  if (~index) this.connected.splice(index, 1);\n  if (this.connected.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function(packet){\n  debug('writing packet %j', packet);\n  var self = this;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function(encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i]);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function() {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function(){\n  var sub;\n  while (sub = this.subs.shift()) sub.destroy();\n\n  this.packetBuffer = [];\n  this.encoding = false;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function(){\n  this.skipReconnect = true;\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.engine && this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function(reason){\n  debug('close');\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function(){\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n\n    this.reconnecting = true;\n    var timer = setTimeout(function(){\n      if (self.skipReconnect) return;\n\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function(err){\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function(){\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function(){\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n"]}