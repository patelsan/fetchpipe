{"version":3,"sources":["assert-shim.js"],"names":[],"mappings":";;;;;;;;AAMA,MAAM,CAAC,wBAAwB,EAAE,CAAC,SAAS,CAAC,EAAE,UAAU,OAAO,EAAE;;AAE/D,MAAI,QAAQ,GAAG,kBAAU,GAAG,EAAE;AAC5B,UAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;GACtB,CAAC;;AAEF,SAAO,CAAC,IAAI,GAAG,UAAU,QAAQ,EAAE;AACjC,YAAQ,GAAG,QAAQ,CAAC;GACrB,CAAC;;AAEF,SAAO,CAAC,YAAY,GAAG,UAAU,EAAE,EAAE;AACnC,QAAI;AACF,QAAE,EAAE,CAAC;KACN,CACD,OAAO,CAAC,EAAE;AACR,cAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;KACrB;GACF,CAAC;;AAEF,SAAO,CAAC,KAAK,GAAG,UAAU,MAAM,EAAE,QAAQ,EAAE,GAAG,EAAE;AAC/C,OAAG,GAAG,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;AACxD,QAAI,MAAM,IAAI,QAAQ,EAAE;AACtB,cAAQ,CAAC,GAAG,CAAC,CAAC;KACf;GACF,CAAC;;AAEF,SAAO,CAAC,EAAE,GAAG,UAAU,GAAG,EAAE,GAAG,EAAE;AAC/B,OAAG,GAAG,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC;AACxC,QAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;AACjB,cAAQ,CAAC,GAAG,CAAC,CAAC;KACf;GACF,CAAC;;AAEF,SAAO,CAAC,WAAW,GAAG,UAAU,MAAM,EAAE,QAAQ,EAAE,GAAG,EAAE;AACrD,OAAG,GAAG,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;AACzD,QAAI,MAAM,KAAK,QAAQ,EAAE;AACvB,cAAQ,CAAC,GAAG,CAAC,CAAC;KACf;GACF,CAAC;;AAEF,SAAO,CAAC,MAAM,GAAG,UAAU,EAAE,EAAE;AAC7B,QAAI;AACF,QAAE,EAAE,CAAC;AACL,cAAQ,CAAC,iDAAiD,CAAC,CAAC;KAC7D,CACD,OAAO,CAAC,EAAE,EACT;GACF,CAAC;CAEH,CAAC,CAAC","file":"assert-shim-compiled.js","sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\ndefine('test/source-map/assert', ['exports'], function (exports) {\n\n  let do_throw = function (msg) {\n    throw new Error(msg);\n  };\n\n  exports.init = function (throw_fn) {\n    do_throw = throw_fn;\n  };\n\n  exports.doesNotThrow = function (fn) {\n    try {\n      fn();\n    }\n    catch (e) {\n      do_throw(e.message);\n    }\n  };\n\n  exports.equal = function (actual, expected, msg) {\n    msg = msg || String(actual) + ' != ' + String(expected);\n    if (actual != expected) {\n      do_throw(msg);\n    }\n  };\n\n  exports.ok = function (val, msg) {\n    msg = msg || String(val) + ' is falsey';\n    if (!Boolean(val)) {\n      do_throw(msg);\n    }\n  };\n\n  exports.strictEqual = function (actual, expected, msg) {\n    msg = msg || String(actual) + ' !== ' + String(expected);\n    if (actual !== expected) {\n      do_throw(msg);\n    }\n  };\n\n  exports.throws = function (fn) {\n    try {\n      fn();\n      do_throw('Expected an error to be thrown, but it wasn\\'t.');\n    }\n    catch (e) {\n    }\n  };\n\n});\n"]}