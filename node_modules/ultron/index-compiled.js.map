{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * An auto incrementing id which we can use to create \"unique\" Ultron instances\n * so we can track the event emitters that are added through the Ultron\n * interface.\n *\n * @type {Number}\n * @private\n */\nvar id = 0;\n\n/**\n * Ultron is high-intelligence robot. It gathers intelligence so it can start improving\n * upon his rudimentary design. It will learn from your EventEmitting patterns\n * and exterminate them.\n *\n * @constructor\n * @param {EventEmitter} ee EventEmitter instance we need to wrap.\n * @api public\n */\nfunction Ultron(ee) {\n  if (!(this instanceof Ultron)) return new Ultron(ee);\n\n  this.id = id++;\n  this.ee = ee;\n}\n\n/**\n * Register a new EventListener for the given event.\n *\n * @param {String} event Name of the event.\n * @param {Functon} fn Callback function.\n * @param {Mixed} context The context of the function.\n * @returns {Ultron}\n * @api public\n */\nUltron.prototype.on = function on(event, fn, context) {\n  fn.__ultron = this.id;\n  this.ee.on(event, fn, context);\n\n  return this;\n};\n/**\n * Add an EventListener that's only called once.\n *\n * @param {String} event Name of the event.\n * @param {Function} fn Callback function.\n * @param {Mixed} context The context of the function.\n * @returns {Ultron}\n * @api public\n */\nUltron.prototype.once = function once(event, fn, context) {\n  fn.__ultron = this.id;\n  this.ee.once(event, fn, context);\n\n  return this;\n};\n\n/**\n * Remove the listeners we assigned for the given event.\n *\n * @returns {Ultron}\n * @api public\n */\nUltron.prototype.remove = function remove() {\n  var args = arguments\n    , event;\n\n  //\n  // When no event names are provided we assume that we need to clear all the\n  // events that were assigned through us.\n  //\n  if (args.length === 1 && 'string' === typeof args[0]) {\n    args = args[0].split(/[, ]+/);\n  } else if (!args.length) {\n    args = [];\n\n    for (event in this.ee._events) {\n      if (has.call(this.ee._events, event)) args.push(event);\n    }\n  }\n\n  for (var i = 0; i < args.length; i++) {\n    var listeners = this.ee.listeners(args[i]);\n\n    for (var j = 0; j < listeners.length; j++) {\n      event = listeners[j];\n\n      //\n      // Once listeners have a `listener` property that stores the real listener\n      // in the EventEmitter that ships with Node.js.\n      //\n      if (event.listener) {\n        if (event.listener.__ultron !== this.id) continue;\n        delete event.listener.__ultron;\n      } else {\n        if (event.__ultron !== this.id) continue;\n        delete event.__ultron;\n      }\n\n      this.ee.removeListener(args[i], event);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Destroy the Ultron instance, remove all listeners and release all references.\n *\n * @returns {Boolean}\n * @api public\n */\nUltron.prototype.destroy = function destroy() {\n  if (!this.ee) return false;\n\n  this.remove();\n  this.ee = null;\n\n  return true;\n};\n\n//\n// Expose the module.\n//\nmodule.exports = Ultron;\n"]}