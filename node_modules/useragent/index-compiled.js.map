{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["'use strict';\n\n/**\n * This is where all the magic comes from, specially crafted for `useragent`.\n */\nvar regexps = require('./lib/regexps');\n\n/**\n * Reduce references by storing the lookups.\n */\n// OperatingSystem parsers:\nvar osparsers = regexps.os\n  , osparserslength = osparsers.length;\n\n// UserAgent parsers:\nvar agentparsers = regexps.browser\n  , agentparserslength = agentparsers.length;\n\n// Device parsers:\nvar deviceparsers = regexps.device\n  , deviceparserslength = deviceparsers.length;\n\n/**\n * The representation of a parsed user agent.\n *\n * @constructor\n * @param {String} family The name of the browser\n * @param {String} major Major version of the browser\n * @param {String} minor Minor version of the browser\n * @param {String} patch Patch version of the browser\n * @param {String} source The actual user agent string\n * @api public\n */\nfunction Agent(family, major, minor, patch, source) {\n  this.family = family || 'Other';\n  this.major = major || '0';\n  this.minor = minor || '0';\n  this.patch = patch || '0';\n  this.source = source || '';\n}\n\n/**\n * OnDemand parsing of the Operating System.\n *\n * @type {OperatingSystem}\n * @api public\n */\nObject.defineProperty(Agent.prototype, 'os', {\n  get: function lazyparse() {\n    var userAgent = this.source\n      , length = osparserslength\n      , parsers = osparsers\n      , i = 0\n      , parser\n      , res;\n\n    for (; i < length; i++) {\n      if (res = parsers[i][0].exec(userAgent)) {\n        parser = parsers[i];\n\n        if (parser[1]) res[1] = parser[1].replace('$1', res[1]);\n        break;\n      }\n    }\n\n    return Object.defineProperty(this, 'os', {\n        value: !parser || !res\n          ? new OperatingSystem()\n          : new OperatingSystem(\n                res[1]\n              , parser[2] || res[2]\n              , parser[3] || res[3]\n              , parser[4] || res[4]\n            )\n    }).os;\n  },\n\n  /**\n   * Bypass the OnDemand parsing and set an OperatingSystem instance.\n   *\n   * @param {OperatingSystem} os\n   * @api public\n   */\n  set: function set(os) {\n    if (!(os instanceof OperatingSystem)) return false;\n\n    return Object.defineProperty(this, 'os', {\n      value: os\n    }).os;\n  }\n});\n\n/**\n * OnDemand parsing of the Device type.\n *\n * @type {Device}\n * @api public\n */\nObject.defineProperty(Agent.prototype, 'device', {\n  get: function lazyparse() {\n    var userAgent = this.source\n      , length = deviceparserslength\n      , parsers = deviceparsers\n      , i = 0\n      , parser\n      , res;\n\n    for (; i < length; i++) {\n      if (res = parsers[i][0].exec(userAgent)) {\n        parser = parsers[i];\n\n        if (parser[1]) res[1] = parser[1].replace('$1', res[1]);\n        break;\n      }\n    }\n\n    return Object.defineProperty(this, 'device', {\n        value: !parser || !res\n          ? new Device()\n          : new Device(\n                res[1]\n              , parser[2] || res[2]\n              , parser[3] || res[3]\n              , parser[4] || res[4]\n            )\n    }).device;\n  },\n\n  /**\n   * Bypass the OnDemand parsing and set an Device instance.\n   *\n   * @param {Device} device\n   * @api public\n   */\n  set: function set(device) {\n    if (!(device instanceof Device)) return false;\n\n    return Object.defineProperty(this, 'device', {\n      value: device\n    }).device;\n  }\n});\n/*** Generates a string output of the parsed user agent.\n *\n * @returns {String}\n * @api public\n */\nAgent.prototype.toAgent = function toAgent() {\n  var output = this.family\n    , version = this.toVersion();\n\n  if (version) output += ' '+ version;\n  return output;\n};\n\n/**\n * Generates a string output of the parser user agent and operating system.\n *\n * @returns {String}  \"UserAgent 0.0.0 / OS\"\n * @api public\n */\nAgent.prototype.toString = function toString() {\n  var agent = this.toAgent()\n    , os = this.os !== 'Other' ? this.os : false;\n\n  return agent + (os ? ' / ' + os : '');\n};\n\n/**\n * Outputs a compiled veersion number of the user agent.\n *\n * @returns {String}\n * @api public\n */\nAgent.prototype.toVersion = function toVersion() {\n  var version = '';\n\n  if (this.major) {\n    version += this.major;\n\n    if (this.minor) {\n     version += '.' + this.minor;\n\n     // Special case here, the patch can also be Alpha, Beta etc so we need\n     // to check if it's a string or not.\n     if (this.patch) {\n      version += (isNaN(+this.patch) ? ' ' : '.') + this.patch;\n     }\n    }\n  }\n\n  return version;\n};\n\n/**\n * Outputs a JSON string of the Agent.\n *\n * @returns {String}\n * @api public\n */\nAgent.prototype.toJSON = function toJSON() {\n  return {\n      family: this.family\n    , major: this.major\n    , minor: this.minor\n    , patch: this.patch\n    , device: this.device\n    , os: this.os\n  };\n};\n\n/**\n * The representation of a parsed Operating System.\n *\n * @constructor\n * @param {String} family The name of the os\n * @param {String} major Major version of the os\n * @param {String} minor Minor version of the os\n * @param {String} patch Patch version of the os\n * @api public\n */\nfunction OperatingSystem(family, major, minor, patch) {\n  this.family = family || 'Other';\n  this.major = major || '0';\n  this.minor = minor || '0';\n  this.patch = patch || '0';\n}\n\n/**\n * Generates a stringified version of the Operating System.\n *\n * @returns {String} \"Operating System 0.0.0\"\n * @api public\n */\nOperatingSystem.prototype.toString = function toString() {\n  var output = this.family\n    , version = this.toVersion();\n\n  if (version) output += ' '+ version;\n  return output;\n};\n\n/**\n * Generates the version of the Operating System.\n *\n * @returns {String}\n * @api public\n */\nOperatingSystem.prototype.toVersion = function toVersion() {\n  var version = '';\n\n  if (this.major) {\n    version += this.major;\n\n    if (this.minor) {\n     version += '.' + this.minor;\n\n     // Special case here, the patch can also be Alpha, Beta etc so we need\n     // to check if it's a string or not.\n     if (this.patch) {\n      version += (isNaN(+this.patch) ? ' ' : '.') + this.patch;\n     }\n    }\n  }\n\n  return version;\n};\n\n/**\n * Outputs a JSON string of the OS, values are defaulted to undefined so they\n * are not outputed in the stringify.\n *\n * @returns {String}\n * @api public\n */\nOperatingSystem.prototype.toJSON = function toJSON(){\n  return {\n      family: this.family\n    , major: this.major || undefined\n    , minor: this.minor || undefined\n    , patch: this.patch || undefined\n  };\n};\n\n/**\n * The representation of a parsed Device.\n *\n * @constructor\n * @param {String} family The name of the device\n * @param {String} major Major version of the device\n * @param {String} minor Minor version of the device\n * @param {String} patch Patch version of the device\n * @api public\n */\nfunction Device(family, major, minor, patch) {\n  this.family = family || 'Other';\n  this.major = major || '0';\n  this.minor = minor || '0';\n  this.patch = patch || '0';\n}\n\n/**\n * Generates a stringified version of the Device.\n *\n * @returns {String} \"Device 0.0.0\"\n * @api public\n */\nDevice.prototype.toString = function toString() {\n  var output = this.family\n    , version = this.toVersion();\n\n  if (version) output += ' '+ version;\n  return output;\n};\n\n/**\n * Generates the version of the Device.\n *\n * @returns {String}\n * @api public\n */\nDevice.prototype.toVersion = function toVersion() {\n  var version = '';\n\n  if (this.major) {\n    version += this.major;\n\n    if (this.minor) {\n     version += '.' + this.minor;\n\n     // Special case here, the patch can also be Alpha, Beta etc so we need\n     // to check if it's a string or not.\n     if (this.patch) {\n      version += (isNaN(+this.patch) ? ' ' : '.') + this.patch;\n     }\n    }\n  }\n\n  return version;\n};\n\n/**\n * Outputs a JSON string of the Device, values are defaulted to undefined so they\n * are not outputed in the stringify.\n *\n * @returns {String}\n * @api public\n */\nDevice.prototype.toJSON = function toJSON() {\n  return {\n      family: this.family\n    , major: this.major || undefined\n    , minor: this.minor || undefined\n    , patch: this.patch || undefined\n  };\n};\n\n/**\n * Small nifty thick that allows us to download a fresh set regexs from t3h\n * Int3rNetz when we want to. We will be using the compiled version by default\n * but users can opt-in for updates.\n *\n * @param {Boolean} refresh Refresh the dataset from the remote\n * @api public\n */\nmodule.exports = function updater() {\n  try {\n    require('./lib/update').update(function updating(err, results) {\n      if (err) {\n        console.log('[useragent] Failed to update the parsed due to an error:');\n        console.log('[useragent] '+ (err.message ? err.message : err));\n        return;\n      }\n\n      regexps = results;\n\n      // OperatingSystem parsers:\n      osparsers = regexps.os;\n      osparserslength = osparsers.length;\n\n      // UserAgent parsers:\n      agentparsers = regexps.browser;\n      agentparserslength = agentparsers.length;\n\n      // Device parsers:\n      deviceparsers = regexps.device;\n      deviceparserslength = deviceparsers.length;\n    });\n  } catch (e) {\n    console.error('[useragent] If you want to use automatic updating, please add:');\n    console.error('[useragent]   - request (npm install request --save)');\n    console.error('[useragent]   - yamlparser (npm install yamlparser --save)');\n    console.error('[useragent] To your own package.json');\n  }\n};\n\n// Override the exports with our newly set module.exports\nexports = module.exports;\n\n/**\n * Nao that we have setup all the different classes and configured it we can\n * actually start assembling and exposing everything.\n */\nexports.Device = Device;\nexports.OperatingSystem = OperatingSystem;\nexports.Agent = Agent;\n\n/**\n * Parses the user agent string with the generated parsers from the\n * ua-parser project on google code.\n *\n * @param {String} userAgent The user agent string\n * @param {String} jsAgent Optional UA from js to detect chrome frame\n * @returns {Agent}\n * @api public\n */\nexports.parse = function parse(userAgent, jsAgent) {\n  if (!userAgent) return new Agent();\n\n  var length = agentparserslength\n    , parsers = agentparsers\n    , i = 0\n    , parser\n    , res;\n\n  for (; i < length; i++) {\n    if (res = parsers[i][0].exec(userAgent)) {\n      parser = parsers[i];\n\n      if (parser[1]) res[1] = parser[1].replace('$1', res[1]);\n      if (!jsAgent) return new Agent(\n          res[1]\n        , parser[2] || res[2]\n        , parser[3] || res[3]\n        , parser[4] || res[4]\n        , userAgent\n      );\n\n      break;\n    }\n  }\n\n  // Return early if we didn't find an match, but might still be able to parse\n  // the os and device, so make sure we supply it with the source\n  if (!parser || !res) return new Agent('', '', '', '', userAgent);\n\n  // Detect Chrome Frame, but make sure it's enabled! So we need to check for\n  // the Chrome/ so we know that it's actually using Chrome under the hood.\n  if (jsAgent && ~jsAgent.indexOf('Chrome/') && ~userAgent.indexOf('chromeframe')) {\n    res[1] = 'Chrome Frame (IE '+ res[1] +'.'+ res[2] +')';\n\n    // Run the JavaScripted userAgent string through the parser again so we can\n    // update the version numbers;\n    parser = parse(jsAgent);\n    parser[2] = parser.major;\n    parser[3] = parser.minor;\n    parser[4] = parser.patch;\n  }\n\n  return new Agent(\n      res[1]\n    , parser[2] || res[2]\n    , parser[3] || res[3]\n    , parser[4] || res[4]\n    , userAgent\n  );\n};\n\n/**\n * If you are doing a lot of lookups you might want to cache the results of the\n * parsed user agent string instead, in memory.\n *\n * @TODO We probably want to create 2 dictionary's here 1 for the Agent\n * instances and one for the userAgent instance mapping so we can re-use simular\n * Agent instance and lower our memory consumption.\n *\n * @param {String} userAgent The user agent string\n * @param {String} jsAgent Optional UA from js to detect chrome frame\n * @api public\n */\nvar LRU = require('lru-cache')(5000);\nexports.lookup = function lookup(userAgent, jsAgent) {\n  var key = (userAgent || '')+(jsAgent || '')\n    , cached = LRU.get(key);\n\n  if (cached) return cached;\n  LRU.set(key, (cached = exports.parse(userAgent, jsAgent)));\n\n  return cached;\n};\n\n/**\n * Does a more inaccurate but more common check for useragents identification.\n * The version detection is from the jQuery.com library and is licensed under\n * MIT.\n *\n * @param {String} useragent The user agent\n * @returns {Object} matches\n * @api public\n */\nexports.is = function is(useragent) {\n  var ua = (useragent || '').toLowerCase()\n    , details = {\n        chrome: false\n      , firefox: false\n      , ie: false\n      , mobile_safari: false\n      , mozilla: false\n      , opera: false\n      , safari: false\n      , webkit: false\n      , android: false\n      , version: (ua.match(exports.is.versionRE) || [0, \"0\"])[1]\n    };\n\n  if (~ua.indexOf('webkit')) {\n    details.webkit = true;\n\n    if (~ua.indexOf('android')){\n      details.android = true;\n    }\n\n    if (~ua.indexOf('chrome')) {\n      details.chrome = true;\n    } else if (~ua.indexOf('safari')) {\n      details.safari = true;\n\n      if (~ua.indexOf('mobile') && ~ua.indexOf('apple')) {\n        details.mobile_safari = true;\n      }\n    }\n  } else if (~ua.indexOf('opera')) {\n    details.opera = true;\n  } else if (~ua.indexOf('trident') || ~ua.indexOf('msie')) {\n    details.ie = true;\n  } else if (~ua.indexOf('mozilla') && !~ua.indexOf('compatible')) {\n    details.mozilla = true;\n\n    if (~ua.indexOf('firefox')) details.firefox = true;\n  }\n\n\n  return details;\n};\n\n/**\n * Parses out the version numbers.\n *\n * @type {RegExp}\n * @api private\n */\nexports.is.versionRE = /.+(?:rv|it|ra|ie)[\\/: ]([\\d.]+)/;\n\n/**\n * Transform a JSON object back to a valid userAgent string\n *\n * @param {Object} details\n * @returns {Agent}\n */\nexports.fromJSON = function fromJSON(details) {\n  if (typeof details === 'string') details = JSON.parse(details);\n\n  var agent = new Agent(details.family, details.major, details.minor, details.patch)\n    , os = details.os;\n\n  // The device family was added in v2.0\n  if ('device' in details) {\n    agent.device = new Device(details.device.family);\n  } else {\n    agent.device = new Device();\n  }\n\n  if ('os' in details && os) {\n    // In v1.1.0 we only parsed out the Operating System name, not the full\n    // version which we added in v2.0. To provide backwards compatible we should\n    // we should set the details.os as family\n    if (typeof os === 'string') {\n      agent.os = new OperatingSystem(os);\n    } else {\n      agent.os = new OperatingSystem(os.family, os.major, os.minor, os.patch);\n    }\n  }\n\n  return agent;\n};\n\n/**\n * Library version.\n *\n * @type {String}\n * @api public\n */\nexports.version = require('./package.json').version;\n"]}