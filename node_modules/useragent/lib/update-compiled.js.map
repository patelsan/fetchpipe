{"version":3,"sources":["update.js"],"names":[],"mappings":"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","file":"update-compiled.js","sourcesContent":["'use strict';\n\n/**\n * Build in Native modules.\n */\nvar path = require('path')\n  , fs = require('fs')\n  , vm = require('vm');\n\n/**\n * Third party modules.\n */\nvar request = require('request')\n  , yaml = require('yamlparser');\n\n/**\n * Update the regexp.js file\n *\n * @param {Function} callback Completion callback.\n * @api public\n */\nexports.update = function update(callback) {\n  // Prepend local additions that are missing from the source\n  fs.readFile(exports.before, 'utf8', function reading(err, before) {\n    if (err) return callback(err);\n\n    // Fetch the remote resource as that is frequently updated\n    request(exports.remote, function downloading(err, res, remote) {\n      if (err) return callback(err);\n      if (res.statusCode !== 200) return callback(new Error('Invalid statusCode returned'));\n\n      // Append get some local additions that are missing from the source\n      fs.readFile(exports.after, 'utf8', function reading(err, after) {\n        if (err) return callback(err);\n\n        // Parse the contents\n        exports.parse([ before, remote, after ], function parsing(err, results, source) {\n          callback(err, results);\n\n          if (source && !err) {\n            fs.writeFile(exports.output, source, function idk(err) {\n              if (err) {\n                console.error('Failed to save the generated file due to reasons', err);\n              }\n            });\n          }\n        });\n      });\n    });\n  });\n};\n\n/**\n * Parse the given sources.\n *\n * @param {Array} sources String versions of the source\n * @param {Function} callback completion callback\n * @api public\n */\nexports.parse = function parse(sources, callback) {\n  var results = {};\n\n  var data = sources.reduce(function parser(memo, data) {\n    // Try to repair some of the odd structures that are in the yaml files\n    // before parsing it so we generate a uniform structure:\n\n    // Normalize the Operating system versions:\n    data = data.replace(/os_v([1-3])_replacement/gim, function replace(match, version) {\n      return 'v'+ version +'_replacement';\n    });\n\n    // Make sure that we are able to parse the yaml string\n    try { data = yaml.eval(data); }\n    catch (e) {\n      callback(e);\n      callback = null;\n      return memo;\n    }\n\n    // merge the data with the memo;\n    Object.keys(data).forEach(function (key) {\n      var results = data[key];\n      memo[key] = memo[key] || [];\n\n      for (var i = 0, l = results.length; i < l; i++) {\n        memo[key].push(results[i]);\n      }\n    });\n\n    return memo;\n  }, {});\n\n  [\n      {\n          resource: 'user_agent_parsers'\n        , replacement: 'family_replacement'\n        , name: 'browser'\n      }\n    , {\n          resource: 'device_parsers'\n        , replacement: 'device_replacement'\n        , name: 'device'\n      }\n    , {\n          resource: 'os_parsers'\n        , replacement: 'os_replacement'\n        , name: 'os'\n      }\n  ].forEach(function parsing(details) {\n    results[details.resource] = results[details.resource] || [];\n\n    var resources = data[details.resource]\n      , name = details.resource.replace('_parsers', '')\n      , resource\n      , parser;\n\n    for (var i = 0, l = resources.length; i < l; i++) {\n      resource = resources[i];\n\n      // We need to JSON stringify the data to properly add slashes escape other\n      // kinds of crap in the RegularExpression. If we don't do thing we get\n      // some illegal token warnings.\n      parser = 'parser = Object.create(null);\\n';\n      parser += 'parser[0] = new RegExp('+ JSON.stringify(resource.regex) + ');\\n';\n\n      // Check if we have replacement for the parsed family name\n      if (resource[details.replacement]) {\n        parser += 'parser[1] = \"'+ resource[details.replacement].replace('\"', '\\\\\"') +'\";';\n      } else {\n        parser += 'parser[1] = 0;';\n      }\n\n      parser += '\\n';\n\n      if (resource.v1_replacement) {\n        parser += 'parser[2] = \"'+ resource.v1_replacement.replace('\"', '\\\\\"') +'\";';\n      } else {\n        parser += 'parser[2] = 0;';\n      }\n\n      parser += '\\n';\n\n      if (resource.v2_replacement) {\n        parser += 'parser[3] = \"'+ resource.v2_replacement.replace('\"', '\\\\\"') +'\";';\n      } else {\n        parser += 'parser[3] = 0;';\n      }\n\n      parser += '\\n';\n\n      if (resource.v3_replacement) {\n        parser += 'parser[4] = \"'+ resource.v3_replacement.replace('\"', '\\\\\"') +'\";';\n      } else {\n        parser += 'parser[4] = 0;';\n      }\n\n      parser += '\\n';\n      parser += 'exports.'+ details.name +'['+ i +'] = parser;';\n      results[details.resource].push(parser);\n    }\n  });\n\n  // Generate a correct format\n  exports.generate(results, callback);\n};\n\n/**\n * Generate the regular expressions file source code.\n *\n * @param {Object} results The parsed result of the regexp.yaml.\n * @param {Function} callback Completion callback\n * @api public\n */\nexports.generate = function generate(results, callback) {\n  var regexps  = [\n      '\"use strict\";'\n    , exports.LEADER\n    , 'var parser;'\n    , 'exports.browser = Object.create(null);'\n    , results.user_agent_parsers.join('\\n')\n    , 'exports.browser.length = '+ results.user_agent_parsers.length +';'\n\n    , 'exports.device = Object.create(null);'\n    , results.device_parsers.join('\\n')\n    , 'exports.device.length = '+ results.device_parsers.length +';'\n\n    , 'exports.os = Object.create(null);'\n    , results.os_parsers.join('\\n')\n    , 'exports.os.length = '+ results.os_parsers.length +';'\n  ].join('\\n\\n');\n\n  // Now that we have generated the structure for the RegExps export file we\n  // need to validate that we created a JavaScript compatible file, if we would\n  // write the file without checking it's content we could be breaking the\n  // module.\n  var sandbox = {\n      exports: {} // Emulate a module context, so everything is attached here\n  };\n\n  // Crossing our fingers that it worked\n  try { vm.runInNewContext(regexps, sandbox, 'validating.vm'); }\n  catch (e) { return callback(e, null, regexps); }\n\n  callback(undefined, sandbox.exports, regexps);\n};\n\n/**\n * The location of the ua-parser regexes yaml file.\n *\n * @type {String}\n * @api private\n */\nexports.remote = 'https://raw.githubusercontent.com/ua-parser/uap-core/master/regexes.yaml';\n\n/**\n * The locations of our local regexes yaml files.\n *\n * @type {String}\n * @api private\n */\nexports.before = path.resolve(__dirname, '..', 'static', 'user_agent.before.yaml');\nexports.after = path.resolve(__dirname, '..', 'static', 'user_agent.after.yaml');\n\n/**\n * The the output location for the generated regexps file\n *\n * @type {String}\n * @api private\n */\nexports.output = path.resolve(__dirname, '..', 'lib', 'regexps.js');\n\n/**\n * The leader that needs to be added so people know they shouldn't touch all the\n * things.\n *\n * @type {String}\n * @api private\n */\nexports.LEADER = fs.readFileSync(path.join(__dirname, 'donotedit'), 'UTF-8');\n"]}