{"version":3,"sources":["utf8.js"],"names":[],"mappings":"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","file":"utf8-compiled.js","sourcesContent":["/*! https://mths.be/utf8js v2.0.0 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tcheckScalarValue(codePoint);\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string) {\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tvar byte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString) {\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar utf8 = {\n\t\t'version': '2.0.0',\n\t\t'encode': utf8encode,\n\t\t'decode': utf8decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn utf8;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = utf8;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tvar object = {};\n\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\tfor (var key in utf8) {\n\t\t\t\thasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.utf8 = utf8;\n\t}\n\n}(this));\n"]}