{"version":3,"sources":["which"],"names":[],"mappings":";;AACA,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,CAAA;AAC1B,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EACzB,KAAK,EAAE,CAAA;;AAET,SAAS,KAAK,GAAI;AAChB,SAAO,CAAC,KAAK,CAAC,gCAAgC,CAAC,CAAA;AAC/C,SAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;CAChB;;AAED,IAAI,GAAG,GAAG,KAAK,CAAA;AACf,IAAI,MAAM,GAAG,KAAK,CAAA;AAClB,IAAI,QAAQ,GAAG,KAAK,CAAA;AACpB,IAAI,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,GAAG,EAAE;AACrD,MAAI,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAC7B,OAAO,IAAI,CAAA;;AAEb,MAAI,GAAG,KAAK,IAAI,EAAE;AAChB,YAAQ,GAAG,IAAI,CAAA;AACf,WAAO,KAAK,CAAA;GACb;;AAED,MAAI,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAA;AACnC,OAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACrC,QAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAA;AACnB,YAAQ,IAAI;AACV,WAAK,GAAG;AACN,cAAM,GAAG,IAAI,CAAA;AACb,cAAK;AAAA,AACP,WAAK,GAAG;AACN,WAAG,GAAG,IAAI,CAAA;AACV,cAAK;AAAA,AACP;AACE,eAAO,CAAC,KAAK,CAAC,2BAA2B,GAAG,IAAI,CAAC,CAAA;AACjD,aAAK,EAAE,CAAA;AAAA,KACV;GACF;AACD,SAAO,KAAK,CAAA;CACb,CAAC,CAAA;;AAEF,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,OAAO,EAAE;AAC9C,MAAI;AACF,QAAI,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAA;AACzC,QAAI,GAAG,EACL,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;AAClB,QAAI,CAAC,MAAM,EACT,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;AAChB,WAAO,EAAE,CAAC;GACX,CAAC,OAAO,CAAC,EAAE;AACV,WAAO,CAAC,CAAC;GACV;CACF,EAAE,CAAC,CAAC,CAAC,CAAA","file":"which-compiled.js","sourcesContent":["#!/usr/bin/env node\nvar which = require(\"../\")\nif (process.argv.length < 3)\n  usage()\n\nfunction usage () {\n  console.error('usage: which [-as] program ...')\n  process.exit(1)\n}\n\nvar all = false\nvar silent = false\nvar dashdash = false\nvar args = process.argv.slice(2).filter(function (arg) {\n  if (dashdash || !/^-/.test(arg))\n    return true\n\n  if (arg === '--') {\n    dashdash = true\n    return false\n  }\n\n  var flags = arg.substr(1).split('')\n  for (var f = 0; f < flags.length; f++) {\n    var flag = flags[f]\n    switch (flag) {\n      case 's':\n        silent = true\n        break\n      case 'a':\n        all = true\n        break\n      default:\n        console.error('which: illegal option -- ' + flag)\n        usage()\n    }\n  }\n  return false\n})\n\nprocess.exit(args.reduce(function (pv, current) {\n  try {\n    var f = which.sync(current, { all: all })\n    if (all)\n      f = f.join('\\n')\n    if (!silent)\n      console.log(f)\n    return pv;\n  } catch (e) {\n    return 1;\n  }\n}, 0))\n"]}