{"version":3,"sources":["bin.js"],"names":[],"mappings":"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","file":"bin-compiled.js","sourcesContent":["var t = require('tap')\nvar spawn = require('child_process').spawn\nvar node = process.execPath\nvar bin = require.resolve('../bin/which')\n\nfunction which (args, extraPath, cb) {\n  if (typeof extraPath === 'function')\n    cb = extraPath, extraPath = null\n\n  var options = {}\n  if (extraPath) {\n    var sep = process.platform === 'win32' ? ';' : ':'\n    var p = process.env.PATH + sep + extraPath\n    options.env = Object.keys(process.env).reduce(function (env, k) {\n      if (!k.match(/^path$/i))\n        env[k] = process.env[k]\n      return env\n    }, { PATH: p })\n  }\n\n  var out = ''\n  var err = ''\n  var child = spawn(node, [bin].concat(args), options)\n  child.stdout.on('data', function (c) {\n    out += c\n  })\n  child.stderr.on('data', function (c) {\n    err += c\n  })\n  child.on('close', function (code, signal) {\n    cb(code, signal, out.trim(), err.trim())\n  })\n}\n\nt.test('finds node', function (t) {\n  which('node', function (code, signal, out, err) {\n    t.equal(signal, null)\n    t.equal(code, 0)\n    t.equal(err, '')\n    t.match(out, /[\\\\\\/]node(\\.exe)?$/)\n    t.end()\n  })\n})\n\nt.test('does not find flergyderp', function (t) {\n  which('flergyderp', function (code, signal, out, err) {\n    t.equal(signal, null)\n    t.equal(code, 1)\n    t.equal(err, '')\n    t.match(out, '')\n    t.end()\n  })\n})\n\nt.test('finds node and tap', function (t) {\n  which(['node', 'tap'], function (code, signal, out, err) {\n    t.equal(signal, null)\n    t.equal(code, 0)\n    t.equal(err, '')\n    t.match(out.split(/\\n/), [\n      /[\\\\\\/]node(\\.exe)?$/,\n      /[\\\\\\/]tap(\\.cmd)?$/\n    ])\n    t.end()\n  })\n})\n\nt.test('finds node and tap, but not flergyderp', function (t) {\n  which(['node', 'flergyderp', 'tap'], function (code, signal, out, err) {\n    t.equal(signal, null)\n    t.equal(code, 1)\n    t.equal(err, '')\n    t.match(out.split(/\\n/), [\n      /[\\\\\\/]node(\\.exe)?$/,\n      /[\\\\\\/]tap(\\.cmd)?$/\n    ])\n    t.end()\n  })\n})\n\nt.test('cli flags', function (t) {\n  var p = require('path').dirname(bin)\n  var cases = [ '-a', '-s', '-as', '-sa' ]\n  t.plan(cases.length)\n  cases.forEach(function (c) {\n    t.test(c, function (t) {\n      which(['which', c], p, function (code, signal, out, err) {\n        t.equal(signal, null)\n        t.equal(code, 0)\n        t.equal(err, '')\n        if (/s/.test(c))\n          t.equal(out, '', 'should be silent')\n        else if (/a/.test(c))\n          t.ok(out.split(/\\n/).length > 1, 'should have more than 1 result')\n        t.end()\n      })\n    })\n  })\n})\n\nt.test('shows usage', function (t) {\n  which([], function (code, signal, out, err) {\n    t.equal(signal, null)\n    t.equal(code, 1)\n    t.equal(err, 'usage: which [-as] program ...')\n    t.equal(out, '')\n    t.end()\n  })\n})\n\nt.test('complains about unknown flag', function (t) {\n  which(['node', '-sax'], function (code, signal, out, err) {\n    t.equal(signal, null)\n    t.equal(code, 1)\n    t.equal(out, '')\n    t.equal(err, 'which: illegal option -- x\\nusage: which [-as] program ...')\n    t.end()\n  })\n})\n"]}