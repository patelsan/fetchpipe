{"version":3,"sources":["which.js"],"names":[],"mappings":"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","file":"which-compiled.js","sourcesContent":["module.exports = which\nwhich.sync = whichSync\n\nvar isWindows = process.platform === 'win32' ||\n    process.env.OSTYPE === 'cygwin' ||\n    process.env.OSTYPE === 'msys'\n\nvar path = require('path')\nvar COLON = isWindows ? ';' : ':'\nvar isExe\nvar fs = require('fs')\nvar isAbsolute = require('is-absolute')\n\nvar G =  parseInt('0010', 8)\nvar U =  parseInt('0100', 8)\nvar UG = parseInt('0110', 8)\n\nif (isWindows) {\n  // On windows, there is no good way to check that a file is executable\n  isExe = function isExe () { return true }\n} else {\n  isExe = function isExe (mod, uid, gid) {\n    var ret = (mod & 1)\n        || (mod & U)  && process.getgid && gid === process.getgid()\n        || (mod & G)  && process.getuid && uid === process.getuid()\n        || (mod & UG) && process.getuid && 0   === process.getuid()\n\n    if (!ret && process.getgroups && (mod & G)) {\n      var groups = process.getgroups()\n      for (var g = 0; g < groups.length; g++) {\n        if (groups[g] === gid)\n          return true\n      }\n    }\n\n    return ret\n  }\n}\n\nfunction getPathInfo(cmd, opt) {\n  var colon = opt.colon || COLON\n  var pathEnv = opt.path || process.env.PATH || ''\n  var pathExt = ['']\n\n  pathEnv = pathEnv.split(colon)\n\n  if (isWindows) {\n    pathEnv.unshift(process.cwd())\n    pathExt = (opt.pathExt || process.env.PATHEXT || '.EXE').split(colon)\n    if (cmd.indexOf('.') !== -1 && pathExt[0] !== '')\n      pathExt.unshift('')\n  }\n\n  // If it's absolute, then we don't bother searching the pathenv.\n  // just check the file itself, and that's it.\n  if (isAbsolute(cmd))\n    pathEnv = ['']\n\n  return {env: pathEnv, ext: pathExt}\n}\n\nfunction which (cmd, opt, cb) {\n  if (typeof opt === 'function') {\n    cb = opt\n    opt = {}\n  }\n\n  var info = getPathInfo(cmd, opt)\n  var pathEnv = info.env\n  var pathExt = info.ext\n  var found = []\n\n  ;(function F (i, l) {\n    if (i === l) {\n      if (opt.all && found.length)\n        return cb(null, found)\n      else\n        return cb(new Error('not found: '+cmd))\n    }\n    var p = path.resolve(pathEnv[i], cmd)\n    ;(function E (ii, ll) {\n      if (ii === ll) return F(i + 1, l)\n      var ext = pathExt[ii]\n      fs.stat(p + ext, function (er, stat) {\n        if (!er &&\n            stat.isFile() &&\n            isExe(stat.mode, stat.uid, stat.gid)) {\n          if (opt.all)\n            found.push(p + ext)\n          else\n            return cb(null, p + ext)\n        }\n        return E(ii + 1, ll)\n      })\n    })(0, pathExt.length)\n  })(0, pathEnv.length)\n}\n\nfunction whichSync (cmd, opt) {\n  opt = opt || {}\n\n  var info = getPathInfo(cmd, opt)\n  var pathEnv = info.env\n  var pathExt = info.ext\n  var found = []\n\n  for (var i = 0, l = pathEnv.length; i < l; i ++) {\n    var p = path.join(pathEnv[i], cmd)\n    for (var j = 0, ll = pathExt.length; j < ll; j ++) {\n      var cur = p + pathExt[j]\n      var stat\n      try {\n        stat = fs.statSync(cur)\n        if (stat.isFile() && isExe(stat.mode, stat.uid, stat.gid)) {\n          if (opt.all)\n            found.push(cur)\n          else\n            return cur\n        }\n      } catch (ex) {}\n    }\n  }\n\n  if (opt.all && found.length)\n    return found\n\n  throw new Error('not found: '+cmd)\n}\n"]}