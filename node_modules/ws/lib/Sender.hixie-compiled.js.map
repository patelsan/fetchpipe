{"version":3,"sources":["Sender.hixie.js"],"names":[],"mappings":";;;;;;;;AAMA,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC;IAC1B,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC;IACtB,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;;;;;;AAMvC,SAAS,MAAM,CAAC,MAAM,EAAE;AACtB,MAAI,IAAI,YAAY,MAAM,KAAK,KAAK,EAAE;AACpC,UAAM,IAAI,SAAS,CAAC,kCAAkC,CAAC,CAAC;GACzD;;AAED,QAAM,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AAE/B,MAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,MAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;AAC/B,MAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;CACvB;;AAED,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC;;;;;;AAMxB,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC;;;;;;;;AAQ3C,MAAM,CAAC,SAAS,CAAC,IAAI,GAAG,UAAS,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE;AAClD,MAAI,IAAI,CAAC,QAAQ,EAAE,OAAO;;AAE1B,MAAI,QAAQ,GAAG,OAAO,IAAI,IAAI,QAAQ;MAClC,MAAM,GAAG,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM;MACzD,WAAW,GAAG,AAAC,MAAM,GAAG,GAAG,GAAI,CAAC,GAAG,CAAC;;AACpC,kBAAgB,GAAG,IAAI,CAAC,iBAAiB,IAAI,KAAK;MAClD,cAAc,GAAG,CAAC,OAAO,IAAI,EAAE,OAAO,OAAO,CAAC,GAAG,IAAI,WAAW,IAAI,CAAC,OAAO,CAAC,GAAG,CAAA,AAAC;MACjF,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,gBAAgB,GAAI,AAAC,OAAO,IAAI,OAAO,CAAC,MAAM,GAAK,CAAC,GAAG,WAAW,GAAI,CAAC,GAAI,CAAC,CAAA,GAAI,MAAM,IAAI,AAAC,cAAc,IAAI,EAAE,OAAO,IAAI,OAAO,CAAC,MAAM,CAAA,AAAC,GAAI,CAAC,GAAG,CAAC,CAAA,AAAC,CAAC;MACzK,MAAM,GAAG,gBAAgB,GAAG,CAAC,GAAG,CAAC,CAAC;;AAEtC,MAAI,gBAAgB,EAAE;AACpB,QAAI,OAAO,IAAI,OAAO,CAAC,MAAM,EAAE;AAC7B,YAAM,CAAC,KAAK,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;;AAE/B,UAAI,WAAW,GAAG,CAAC,EACjB,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,GAAC,MAAM,GAAC,GAAG,CAAC,EAAE,MAAM,EAAE,EAAE,QAAQ,CAAC,CAAC;AACxE,YAAM,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,GAAC,IAAI,CAAC,EAAE,MAAM,EAAE,EAAE,QAAQ,CAAC,CAAC;KACpE,MACC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;GAClC;;AAED,MAAI,QAAQ,EAAE,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,KAC5C,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;;AAElC,MAAI,cAAc,EAAE;AAClB,QAAI,OAAO,IAAI,OAAO,CAAC,MAAM,EAAE;;KAE9B,MACC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,QAAQ,CAAC,CAAC;AAClD,QAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;GAChC,MACI,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;;AAEnC,MAAI;AACF,QAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;GACzC,CAAC,OAAO,CAAC,EAAE;AACV,QAAI,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;GAC1B;CACF,CAAC;;;;;;;;AAQF,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG,UAAS,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE;AACtD,MAAI,IAAI,CAAC,QAAQ,EAAE,OAAO;AAC1B,MAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACrB,MAAI;AACF,QAAI,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;AAC5E,QAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;GAC3D,CAAC,OAAO,CAAC,EAAE;AACV,QAAI,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;GAC1B;CACF,CAAC;;;;;;;;AAQF,MAAM,CAAC,SAAS,CAAC,IAAI,GAAG,UAAS,IAAI,EAAE,OAAO,EAAE,EAAE,CAAC;;;;;;;;AAQnD,MAAM,CAAC,SAAS,CAAC,IAAI,GAAG,UAAS,IAAI,EAAE,OAAO,EAAE,EAAE,CAAC;;;;;;;;AAQnD,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,MAAM,EAAE;AACzC,MAAI,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;AAC3B,SAAO,IAAI,CAAC;CACb,CAAC","file":"Sender.hixie-compiled.js","sourcesContent":["/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nvar events = require('events')\n  , util = require('util')\n  , EventEmitter = events.EventEmitter;\n\n/**\n * Hixie Sender implementation\n */\n\nfunction Sender(socket) {\n  if (this instanceof Sender === false) {\n    throw new TypeError(\"Classes can't be function-called\");\n  }\n\n  events.EventEmitter.call(this);\n\n  this.socket = socket;\n  this.continuationFrame = false;\n  this.isClosed = false;\n}\n\nmodule.exports = Sender;\n\n/**\n * Inherits from EventEmitter.\n */\n\nutil.inherits(Sender, events.EventEmitter);\n\n/**\n * Frames and writes data.\n *\n * @api public\n */\n\nSender.prototype.send = function(data, options, cb) {\n  if (this.isClosed) return;\n\n  var isString = typeof data == 'string'\n    , length = isString ? Buffer.byteLength(data) : data.length\n    , lengthbytes = (length > 127) ? 2 : 1 // assume less than 2**14 bytes\n    , writeStartMarker = this.continuationFrame == false\n    , writeEndMarker = !options || !(typeof options.fin != 'undefined' && !options.fin)\n    , buffer = new Buffer((writeStartMarker ? ((options && options.binary) ? (1 + lengthbytes) : 1) : 0) + length + ((writeEndMarker && !(options && options.binary)) ? 1 : 0))\n    , offset = writeStartMarker ? 1 : 0;\n\n  if (writeStartMarker) {\n    if (options && options.binary) {\n      buffer.write('\\x80', 'binary');\n      // assume length less than 2**14 bytes\n      if (lengthbytes > 1)\n        buffer.write(String.fromCharCode(128+length/128), offset++, 'binary');\n      buffer.write(String.fromCharCode(length&0x7f), offset++, 'binary');\n    } else\n      buffer.write('\\x00', 'binary');\n  }\n\n  if (isString) buffer.write(data, offset, 'utf8');\n  else data.copy(buffer, offset, 0);\n\n  if (writeEndMarker) {\n    if (options && options.binary) {\n      // sending binary, not writing end marker\n    } else\n      buffer.write('\\xff', offset + length, 'binary');\n    this.continuationFrame = false;\n  }\n  else this.continuationFrame = true;\n\n  try {\n    this.socket.write(buffer, 'binary', cb);\n  } catch (e) {\n    this.error(e.toString());\n  }\n};\n\n/**\n * Sends a close instruction to the remote party.\n *\n * @api public\n */\n\nSender.prototype.close = function(code, data, mask, cb) {\n  if (this.isClosed) return;\n  this.isClosed = true;\n  try {\n    if (this.continuationFrame) this.socket.write(new Buffer([0xff], 'binary'));\n    this.socket.write(new Buffer([0xff, 0x00]), 'binary', cb);\n  } catch (e) {\n    this.error(e.toString());\n  }\n};\n\n/**\n * Sends a ping message to the remote party. Not available for hixie.\n *\n * @api public\n */\n\nSender.prototype.ping = function(data, options) {};\n\n/**\n * Sends a pong message to the remote party. Not available for hixie.\n *\n * @api public\n */\n\nSender.prototype.pong = function(data, options) {};\n\n/**\n * Handles an error\n *\n * @api private\n */\n\nSender.prototype.error = function (reason) {\n  this.emit('error', reason);\n  return this;\n};\n"]}