{"version":3,"sources":["XMLHttpRequest.js"],"names":[],"mappings":"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","file":"XMLHttpRequest-compiled.js","sourcesContent":["/**\n * Wrapper for built-in http.js to emulate the browser XMLHttpRequest object.\n *\n * This can be used with JS designed for browsers to improve reuse of code and\n * allow the use of existing libraries.\n *\n * Usage: include(\"XMLHttpRequest.js\") and use XMLHttpRequest per W3C specs.\n *\n * @author Dan DeFelippi <dan@driverdan.com>\n * @contributor David Ellis <d.f.ellis@ieee.org>\n * @license MIT\n */\n\nvar fs = require('fs');\nvar Url = require('url');\nvar spawn = require('child_process').spawn;\n\n/**\n * Module exports.\n */\n\nmodule.exports = XMLHttpRequest;\n\n// backwards-compat\nXMLHttpRequest.XMLHttpRequest = XMLHttpRequest;\n\n/**\n * `XMLHttpRequest` constructor.\n *\n * Supported options for the `opts` object are:\n *\n *  - `agent`: An http.Agent instance; http.globalAgent may be used; if 'undefined', agent usage is disabled\n *\n * @param {Object} opts optional \"options\" object\n */\n\nfunction XMLHttpRequest(opts) {\n  /**\n   * Private variables\n   */\n  var self = this;\n  var http = require('http');\n  var https = require('https');\n\n  // Holds http.js objects\n  var request;\n  var response;\n\n  // Request settings\n  var settings = {};\n\n  // Disable header blacklist.\n  // Not part of XHR specs.\n  var disableHeaderCheck = false;\n\n  // Set some default headers\n  var defaultHeaders = {\n    \"User-Agent\": \"node-XMLHttpRequest\",\n    \"Accept\": \"*/*\"\n  };\n\n  var headers = defaultHeaders;\n\n  // These headers are not user setable.\n  // The following are allowed but banned in the spec:\n  // * user-agent\n  var forbiddenRequestHeaders = [\n    \"accept-charset\",\n    \"accept-encoding\",\n    \"access-control-request-headers\",\n    \"access-control-request-method\",\n    \"connection\",\n    \"content-length\",\n    \"content-transfer-encoding\",\n    \"cookie\",\n    \"cookie2\",\n    \"date\",\n    \"expect\",\n    \"host\",\n    \"keep-alive\",\n    \"origin\",\n    \"referer\",\n    \"te\",\n    \"trailer\",\n    \"transfer-encoding\",\n    \"upgrade\",\n    \"via\"\n  ];\n\n  // These request methods are not allowed\n  var forbiddenRequestMethods = [\n    \"TRACE\",\n    \"TRACK\",\n    \"CONNECT\"\n  ];\n\n  // Send flag\n  var sendFlag = false;\n  // Error flag, used when errors occur or abort is called\n  var errorFlag = false;\n\n  // Event listeners\n  var listeners = {};\n\n  /**\n   * Constants\n   */\n\n  this.UNSENT = 0;\n  this.OPENED = 1;\n  this.HEADERS_RECEIVED = 2;\n  this.LOADING = 3;\n  this.DONE = 4;\n\n  /**\n   * Public vars\n   */\n\n  // Current state\n  this.readyState = this.UNSENT;\n\n  // default ready state change handler in case one is not set or is set late\n  this.onreadystatechange = null;\n\n  // Result & response\n  this.responseText = \"\";\n  this.responseXML = \"\";\n  this.status = null;\n  this.statusText = null;\n\n  /**\n   * Private methods\n   */\n\n  /**\n   * Check if the specified header is allowed.\n   *\n   * @param string header Header to validate\n   * @return boolean False if not allowed, otherwise true\n   */\n  var isAllowedHttpHeader = function(header) {\n    return disableHeaderCheck || (header && forbiddenRequestHeaders.indexOf(header.toLowerCase()) === -1);\n  };\n\n  /**\n   * Check if the specified method is allowed.\n   *\n   * @param string method Request method to validate\n   * @return boolean False if not allowed, otherwise true\n   */\n  var isAllowedHttpMethod = function(method) {\n    return (method && forbiddenRequestMethods.indexOf(method) === -1);\n  };\n\n  /**\n   * Public methods\n   */\n\n  /**\n   * Open the connection. Currently supports local server requests.\n   *\n   * @param string method Connection method (eg GET, POST)\n   * @param string url URL for the connection.\n   * @param boolean async Asynchronous connection. Default is true.\n   * @param string user Username for basic authentication (optional)\n   * @param string password Password for basic authentication (optional)\n   */\n  this.open = function(method, url, async, user, password) {\n    this.abort();\n    errorFlag = false;\n\n    // Check for valid request method\n    if (!isAllowedHttpMethod(method)) {\n      throw \"SecurityError: Request method not allowed\";\n    }\n\n    settings = {\n      \"method\": method,\n      \"url\": url.toString(),\n      \"async\": (typeof async !== \"boolean\" ? true : async),\n      \"user\": user || null,\n      \"password\": password || null\n    };\n\n    setState(this.OPENED);\n  };\n\n  /**\n   * Disables or enables isAllowedHttpHeader() check the request. Enabled by default.\n   * This does not conform to the W3C spec.\n   *\n   * @param boolean state Enable or disable header checking.\n   */\n  this.setDisableHeaderCheck = function(state) {\n    disableHeaderCheck = state;\n  };\n\n  /**\n   * Sets a header for the request.\n   *\n   * @param string header Header name\n   * @param string value Header value\n   */\n  this.setRequestHeader = function(header, value) {\n    if (this.readyState != this.OPENED) {\n      throw \"INVALID_STATE_ERR: setRequestHeader can only be called when state is OPEN\";\n    }\n    if (!isAllowedHttpHeader(header)) {\n      console.warn('Refused to set unsafe header \"' + header + '\"');\n      return;\n    }\n    if (sendFlag) {\n      throw \"INVALID_STATE_ERR: send flag is true\";\n    }\n    headers[header] = value;\n  };\n\n  /**\n   * Gets a header from the server response.\n   *\n   * @param string header Name of header to get.\n   * @return string Text of the header or null if it doesn't exist.\n   */\n  this.getResponseHeader = function(header) {\n    if (typeof header === \"string\"\n      && this.readyState > this.OPENED\n      && response.headers[header.toLowerCase()]\n      && !errorFlag\n    ) {\n      return response.headers[header.toLowerCase()];\n    }\n\n    return null;\n  };\n\n  /**\n   * Gets all the response headers.\n   *\n   * @return string A string with all response headers separated by CR+LF\n   */\n  this.getAllResponseHeaders = function() {\n    if (this.readyState < this.HEADERS_RECEIVED || errorFlag) {\n      return \"\";\n    }\n    var result = \"\";\n\n    for (var i in response.headers) {\n      // Cookie headers are excluded\n      if (i !== \"set-cookie\" && i !== \"set-cookie2\") {\n        result += i + \": \" + response.headers[i] + \"\\r\\n\";\n      }\n    }\n    return result.substr(0, result.length - 2);\n  };\n\n  /**\n   * Gets a request header\n   *\n   * @param string name Name of header to get\n   * @return string Returns the request header or empty string if not set\n   */\n  this.getRequestHeader = function(name) {\n    // @TODO Make this case insensitive\n    if (typeof name === \"string\" && headers[name]) {\n      return headers[name];\n    }\n\n    return \"\";\n  };\n\n  /**\n   * Sends the request to the server.\n   *\n   * @param string data Optional data to send as request body.\n   */\n  this.send = function(data) {\n    if (this.readyState != this.OPENED) {\n      throw \"INVALID_STATE_ERR: connection must be opened before send() is called\";\n    }\n\n    if (sendFlag) {\n      throw \"INVALID_STATE_ERR: send has already been called\";\n    }\n\n    var ssl = false, local = false;\n    var url = Url.parse(settings.url);\n    var host;\n    // Determine the server\n    switch (url.protocol) {\n      case 'https:':\n        ssl = true;\n        // SSL & non-SSL both need host, no break here.\n      case 'http:':\n        host = url.hostname;\n        break;\n\n      case 'file:':\n        local = true;\n        break;\n\n      case undefined:\n      case '':\n        host = \"localhost\";\n        break;\n\n      default:\n        throw \"Protocol not supported.\";\n    }\n\n    // Load files off the local filesystem (file://)\n    if (local) {\n      if (settings.method !== \"GET\") {\n        throw \"XMLHttpRequest: Only GET method is supported\";\n      }\n\n      if (settings.async) {\n        fs.readFile(url.pathname, 'utf8', function(error, data) {\n          if (error) {\n            self.handleError(error);\n          } else {\n            self.status = 200;\n            self.responseText = data;\n            setState(self.DONE);\n          }\n        });\n      } else {\n        try {\n          this.responseText = fs.readFileSync(url.pathname, 'utf8');\n          this.status = 200;\n          setState(self.DONE);\n        } catch(e) {\n          this.handleError(e);\n        }\n      }\n\n      return;\n    }\n\n    // Default to port 80. If accessing localhost on another port be sure\n    // to use http://localhost:port/path\n    var port = url.port || (ssl ? 443 : 80);\n    // Add query string if one is used\n    var uri = url.pathname + (url.search ? url.search : '');\n\n    // Set the Host header or the server may reject the request\n    headers[\"Host\"] = host;\n    if (!((ssl && port === 443) || port === 80)) {\n      headers[\"Host\"] += ':' + url.port;\n    }\n\n    // Set Basic Auth if necessary\n    if (settings.user) {\n      if (typeof settings.password == \"undefined\") {\n        settings.password = \"\";\n      }\n      var authBuf = new Buffer(settings.user + \":\" + settings.password);\n      headers[\"Authorization\"] = \"Basic \" + authBuf.toString(\"base64\");\n    }\n\n    // Set content length header\n    if (settings.method === \"GET\" || settings.method === \"HEAD\") {\n      data = null;\n    } else if (data) {\n      headers[\"Content-Length\"] = Buffer.isBuffer(data) ? data.length : Buffer.byteLength(data);\n\n      if (!headers[\"Content-Type\"]) {\n        headers[\"Content-Type\"] = \"text/plain;charset=UTF-8\";\n      }\n    } else if (settings.method === \"POST\") {\n      // For a post with no data set Content-Length: 0.\n      // This is required by buggy servers that don't meet the specs.\n      headers[\"Content-Length\"] = 0;\n    }\n\n    var agent = false;\n    if (opts && opts.agent) {\n      agent = opts.agent;\n    }\n    var options = {\n      host: host,\n      port: port,\n      path: uri,\n      method: settings.method,\n      headers: headers,\n      agent: agent\n    };\n\n    if (ssl) {\n      options.pfx = opts.pfx;\n      options.key = opts.key;\n      options.passphrase = opts.passphrase;\n      options.cert = opts.cert;\n      options.ca = opts.ca;\n      options.ciphers = opts.ciphers;\n      options.rejectUnauthorized = opts.rejectUnauthorized;\n    }\n\n    // Reset error flag\n    errorFlag = false;\n\n    // Handle async requests\n    if (settings.async) {\n      // Use the proper protocol\n      var doRequest = ssl ? https.request : http.request;\n\n      // Request is being sent, set send flag\n      sendFlag = true;\n\n      // As per spec, this is called here for historical reasons.\n      self.dispatchEvent(\"readystatechange\");\n\n      // Handler for the response\n      function responseHandler(resp) {\n        // Set response var to the response we got back\n        // This is so it remains accessable outside this scope\n        response = resp;\n        // Check for redirect\n        // @TODO Prevent looped redirects\n        if (response.statusCode === 302 || response.statusCode === 303 || response.statusCode === 307) {\n          // Change URL to the redirect location\n          settings.url = response.headers.location;\n          var url = Url.parse(settings.url);\n          // Set host var in case it's used later\n          host = url.hostname;\n          // Options for the new request\n          var newOptions = {\n            hostname: url.hostname,\n            port: url.port,\n            path: url.path,\n            method: response.statusCode === 303 ? 'GET' : settings.method,\n            headers: headers\n          };\n\n          if (ssl) {\n            options.pfx = opts.pfx;\n            options.key = opts.key;\n            options.passphrase = opts.passphrase;\n            options.cert = opts.cert;\n            options.ca = opts.ca;\n            options.ciphers = opts.ciphers;\n            options.rejectUnauthorized = opts.rejectUnauthorized;\n          }\n\n          // Issue the new request\n          request = doRequest(newOptions, responseHandler).on('error', errorHandler);\n          request.end();\n          // @TODO Check if an XHR event needs to be fired here\n          return;\n        }\n\n        response.setEncoding(\"utf8\");\n\n        setState(self.HEADERS_RECEIVED);\n        self.status = response.statusCode;\n\n        response.on('data', function(chunk) {\n          // Make sure there's some data\n          if (chunk) {\n            self.responseText += chunk;\n          }\n          // Don't emit state changes if the connection has been aborted.\n          if (sendFlag) {\n            setState(self.LOADING);\n          }\n        });\n\n        response.on('end', function() {\n          if (sendFlag) {\n            // Discard the 'end' event if the connection has been aborted\n            setState(self.DONE);\n            sendFlag = false;\n          }\n        });\n\n        response.on('error', function(error) {\n          self.handleError(error);\n        });\n      }\n\n      // Error handler for the request\n      function errorHandler(error) {\n        self.handleError(error);\n      }\n\n      // Create the request\n      request = doRequest(options, responseHandler).on('error', errorHandler);\n\n      // Node 0.4 and later won't accept empty data. Make sure it's needed.\n      if (data) {\n        request.write(data);\n      }\n\n      request.end();\n\n      self.dispatchEvent(\"loadstart\");\n    } else { // Synchronous\n      // Create a temporary file for communication with the other Node process\n      var contentFile = \".node-xmlhttprequest-content-\" + process.pid;\n      var syncFile = \".node-xmlhttprequest-sync-\" + process.pid;\n      fs.writeFileSync(syncFile, \"\", \"utf8\");\n      // The async request the other Node process executes\n      var execString = \"var http = require('http'), https = require('https'), fs = require('fs');\"\n        + \"var doRequest = http\" + (ssl ? \"s\" : \"\") + \".request;\"\n        + \"var options = \" + JSON.stringify(options) + \";\"\n        + \"var responseText = '';\"\n        + \"var req = doRequest(options, function(response) {\"\n        + \"response.setEncoding('utf8');\"\n        + \"response.on('data', function(chunk) {\"\n        + \"  responseText += chunk;\"\n        + \"});\"\n        + \"response.on('end', function() {\"\n        + \"fs.writeFileSync('\" + contentFile + \"', 'NODE-XMLHTTPREQUEST-STATUS:' + response.statusCode + ',' + responseText, 'utf8');\"\n        + \"fs.unlinkSync('\" + syncFile + \"');\"\n        + \"});\"\n        + \"response.on('error', function(error) {\"\n        + \"fs.writeFileSync('\" + contentFile + \"', 'NODE-XMLHTTPREQUEST-ERROR:' + JSON.stringify(error), 'utf8');\"\n        + \"fs.unlinkSync('\" + syncFile + \"');\"\n        + \"});\"\n        + \"}).on('error', function(error) {\"\n        + \"fs.writeFileSync('\" + contentFile + \"', 'NODE-XMLHTTPREQUEST-ERROR:' + JSON.stringify(error), 'utf8');\"\n        + \"fs.unlinkSync('\" + syncFile + \"');\"\n        + \"});\"\n        + (data ? \"req.write('\" + data.replace(/'/g, \"\\\\'\") + \"');\":\"\")\n        + \"req.end();\";\n      // Start the other Node Process, executing this string\n      var syncProc = spawn(process.argv[0], [\"-e\", execString]);\n      var statusText;\n      while(fs.existsSync(syncFile)) {\n        // Wait while the sync file is empty\n      }\n      self.responseText = fs.readFileSync(contentFile, 'utf8');\n      // Kill the child process once the file has data\n      syncProc.stdin.end();\n      // Remove the temporary file\n      fs.unlinkSync(contentFile);\n      if (self.responseText.match(/^NODE-XMLHTTPREQUEST-ERROR:/)) {\n        // If the file returned an error, handle it\n        var errorObj = self.responseText.replace(/^NODE-XMLHTTPREQUEST-ERROR:/, \"\");\n        self.handleError(errorObj);\n      } else {\n        // If the file returned okay, parse its data and move to the DONE state\n        self.status = self.responseText.replace(/^NODE-XMLHTTPREQUEST-STATUS:([0-9]*),.*/, \"$1\");\n        self.responseText = self.responseText.replace(/^NODE-XMLHTTPREQUEST-STATUS:[0-9]*,(.*)/, \"$1\");\n        setState(self.DONE);\n      }\n    }\n  };\n\n  /**\n   * Called when an error is encountered to deal with it.\n   */\n  this.handleError = function(error) {\n    this.status = 503;\n    this.statusText = error;\n    this.responseText = error.stack;\n    errorFlag = true;\n    setState(this.DONE);\n  };\n\n  /**\n   * Aborts a request.\n   */\n  this.abort = function() {\n    if (request) {\n      request.abort();\n      request = null;\n    }\n\n    headers = defaultHeaders;\n    this.responseText = \"\";\n    this.responseXML = \"\";\n\n    errorFlag = true;\n\n    if (this.readyState !== this.UNSENT\n        && (this.readyState !== this.OPENED || sendFlag)\n        && this.readyState !== this.DONE) {\n      sendFlag = false;\n      setState(this.DONE);\n    }\n    this.readyState = this.UNSENT;\n  };\n\n  /**\n   * Adds an event listener. Preferred method of binding to events.\n   */\n  this.addEventListener = function(event, callback) {\n    if (!(event in listeners)) {\n      listeners[event] = [];\n    }\n    // Currently allows duplicate callbacks. Should it?\n    listeners[event].push(callback);\n  };\n\n  /**\n   * Remove an event callback that has already been bound.\n   * Only works on the matching funciton, cannot be a copy.\n   */\n  this.removeEventListener = function(event, callback) {\n    if (event in listeners) {\n      // Filter will return a new array with the callback removed\n      listeners[event] = listeners[event].filter(function(ev) {\n        return ev !== callback;\n      });\n    }\n  };\n\n  /**\n   * Dispatch any events, including both \"on\" methods and events attached using addEventListener.\n   */\n  this.dispatchEvent = function(event) {\n    if (typeof self[\"on\" + event] === \"function\") {\n      self[\"on\" + event]();\n    }\n    if (event in listeners) {\n      for (var i = 0, len = listeners[event].length; i < len; i++) {\n        listeners[event][i].call(self);\n      }\n    }\n  };\n\n  /**\n   * Changes readyState and calls onreadystatechange.\n   *\n   * @param int state New state\n   */\n  var setState = function(state) {\n    if (self.readyState !== state) {\n      self.readyState = state;\n\n      if (settings.async || self.readyState < self.OPENED || self.readyState === self.DONE) {\n        self.dispatchEvent(\"readystatechange\");\n      }\n\n      if (self.readyState === self.DONE && !errorFlag) {\n        self.dispatchEvent(\"load\");\n        // @TODO figure out InspectorInstrumentation::didLoadXHR(cookie)\n        self.dispatchEvent(\"loadend\");\n      }\n    }\n  };\n};\n"]}