{"version":3,"sources":["test-events.js"],"names":[],"mappings":";;AAAA,IAAI,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC;IACrB,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC;IAC1B,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC;IACtB,cAAc,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC,cAAc;IAChE,GAAG,CAAC;;;AAGR,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,EAAE,GAAG,EAAE;AACjD,MAAI,IAAI,GAAI,GAAG,CAAC,MAAM,IAAI,MAAM,GAAG,aAAa,GAAG,EAAE,AAAC,CAAC;;AAEvD,KAAG,CAAC,SAAS,CAAC,GAAG,EAAE;AACjB,kBAAc,EAAE,YAAY;AAC5B,oBAAgB,EAAE,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC;GAC1C,CAAC,CAAC;;AAEH,MAAI,GAAG,CAAC,MAAM,IAAI,MAAM,EAAE;AACxB,OAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;GACjB;AACD,KAAG,CAAC,GAAG,EAAE,CAAC;AACV,QAAM,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;AACvC,QAAM,CAAC,KAAK,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;AACrC,QAAM,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AAC5B,KAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACjB,MAAI,CAAC,KAAK,EAAE,CAAC;CACd,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;;AAEhB,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;;;AAG3B,IAAI,kBAAkB,GAAG,KAAK,CAAC;AAC/B,IAAI,gBAAgB,GAAG,KAAK,CAAC;AAC7B,IAAI,OAAO,GAAG,IAAI,CAAC;AACnB,IAAI,YAAY,GAAG,SAAf,YAAY,GAAc;AAC5B,SAAO,GAAG,KAAK,CAAC;CACjB,CAAC;;AAEF,GAAG,CAAC,kBAAkB,GAAG,YAAW;AAClC,oBAAkB,GAAG,IAAI,CAAC;CAC3B,CAAC;;AAEF,GAAG,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,YAAW;AAClD,kBAAgB,GAAG,IAAI,CAAC;CACzB,CAAC,CAAC;;;AAGH,GAAG,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,YAAY,CAAC,CAAC;AACvD,GAAG,CAAC,mBAAmB,CAAC,kBAAkB,EAAE,YAAY,CAAC,CAAC;;AAE1D,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,uBAAuB,CAAC,CAAC;AACzC,GAAG,CAAC,IAAI,EAAE,CAAC","file":"test-events-compiled.js","sourcesContent":["var sys = require(\"util\")\n  , assert = require(\"assert\")\n  , http = require(\"http\")\n  , XMLHttpRequest = require(\"../lib/XMLHttpRequest\").XMLHttpRequest\n  , xhr;\n\n// Test server\nvar server = http.createServer(function (req, res) {\n  var body = (req.method != \"HEAD\" ? \"Hello World\" : \"\");\n\n  res.writeHead(200, {\n    \"Content-Type\": \"text/plain\",\n    \"Content-Length\": Buffer.byteLength(body)\n  });\n  // HEAD has no body\n  if (req.method != \"HEAD\") {\n    res.write(body);\n  }\n  res.end();\n  assert.equal(onreadystatechange, true);\n  assert.equal(readystatechange, true);\n  assert.equal(removed, true);\n  sys.puts(\"done\");\n  this.close();\n}).listen(8000);\n\nxhr = new XMLHttpRequest();\n\n// Track event calls\nvar onreadystatechange = false;\nvar readystatechange = false;\nvar removed = true;\nvar removedEvent = function() {\n  removed = false;\n};\n\nxhr.onreadystatechange = function() {\n  onreadystatechange = true;\n};\n\nxhr.addEventListener(\"readystatechange\", function() {\n  readystatechange = true;\n});\n\n// This isn't perfect, won't guarantee it was added in the first place\nxhr.addEventListener(\"readystatechange\", removedEvent);\nxhr.removeEventListener(\"readystatechange\", removedEvent);\n\nxhr.open(\"GET\", \"http://localhost:8000\");\nxhr.send();\n"]}