{"version":3,"sources":["test-exceptions.js"],"names":[],"mappings":";;AAAA,IAAI,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC;IACrB,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC;IAC1B,cAAc,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC,cAAc;IAChE,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;;;AAG/B,IAAI;AACF,KAAG,CAAC,IAAI,CAAC,OAAO,EAAE,wBAAwB,CAAC,CAAC;AAC5C,SAAO,CAAC,GAAG,CAAC,2CAA2C,CAAC,CAAC;CAC1D,CAAC,OAAM,CAAC,EAAE,EAAE;AACb,IAAI;AACF,KAAG,CAAC,IAAI,CAAC,OAAO,EAAE,wBAAwB,CAAC,CAAC;AAC5C,SAAO,CAAC,GAAG,CAAC,2CAA2C,CAAC,CAAC;CAC1D,CAAC,OAAM,CAAC,EAAE,EAAE;AACb,IAAI;AACF,KAAG,CAAC,IAAI,CAAC,SAAS,EAAE,wBAAwB,CAAC,CAAC;AAC9C,SAAO,CAAC,GAAG,CAAC,6CAA6C,CAAC,CAAC;CAC5D,CAAC,OAAM,CAAC,EAAE,EAAE;;AAEb,IAAI;AACF,KAAG,CAAC,IAAI,CAAC,KAAK,EAAE,wBAAwB,CAAC,CAAC;CAC3C,CAAC,OAAM,CAAC,EAAE;AACT,SAAO,CAAC,GAAG,CAAC,kCAAkC,EAAE,CAAC,CAAC,CAAC;CACpD;;;AAGD,IAAI,uBAAuB,GAAG,CAC5B,gBAAgB,EAChB,iBAAiB,EACjB,gCAAgC,EAChC,+BAA+B,EAC/B,YAAY,EACZ,gBAAgB,EAChB,2BAA2B,EAC3B,QAAQ,EACR,SAAS,EACT,MAAM,EACN,QAAQ,EACR,MAAM,EACN,YAAY,EACZ,QAAQ,EACR,SAAS,EACT,IAAI,EACJ,SAAS,EACT,mBAAmB,EACnB,SAAS,EACT,YAAY,EACZ,KAAK,CACN,CAAC;;AAEF,KAAK,IAAI,CAAC,IAAI,uBAAuB,EAAE;AACrC,MAAI;AACF,OAAG,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;AACzD,WAAO,CAAC,GAAG,CAAC,SAAS,GAAG,uBAAuB,CAAC,CAAC,CAAC,GAAG,+BAA+B,CAAC,CAAC;GACvF,CAAC,OAAM,CAAC,EAAE,EACV;CACF;;;AAGD,GAAG,CAAC,gBAAgB,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;;AAEzC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC","file":"test-exceptions-compiled.js","sourcesContent":["var sys = require(\"util\")\n  , assert = require(\"assert\")\n  , XMLHttpRequest = require(\"../lib/XMLHttpRequest\").XMLHttpRequest\n  , xhr = new XMLHttpRequest();\n\n// Test request methods that aren't allowed\ntry {\n  xhr.open(\"TRACK\", \"http://localhost:8000/\");\n  console.log(\"ERROR: TRACK should have thrown exception\");\n} catch(e) {}\ntry {\n  xhr.open(\"TRACE\", \"http://localhost:8000/\");\n  console.log(\"ERROR: TRACE should have thrown exception\");\n} catch(e) {}\ntry {\n  xhr.open(\"CONNECT\", \"http://localhost:8000/\");\n  console.log(\"ERROR: CONNECT should have thrown exception\");\n} catch(e) {}\n// Test valid request method\ntry {\n  xhr.open(\"GET\", \"http://localhost:8000/\");\n} catch(e) {\n  console.log(\"ERROR: Invalid exception for GET\", e);\n}\n\n// Test forbidden headers\nvar forbiddenRequestHeaders = [\n  \"accept-charset\",\n  \"accept-encoding\",\n  \"access-control-request-headers\",\n  \"access-control-request-method\",\n  \"connection\",\n  \"content-length\",\n  \"content-transfer-encoding\",\n  \"cookie\",\n  \"cookie2\",\n  \"date\",\n  \"expect\",\n  \"host\",\n  \"keep-alive\",\n  \"origin\",\n  \"referer\",\n  \"te\",\n  \"trailer\",\n  \"transfer-encoding\",\n  \"upgrade\",\n  \"user-agent\",\n  \"via\"\n];\n\nfor (var i in forbiddenRequestHeaders) {\n  try {\n    xhr.setRequestHeader(forbiddenRequestHeaders[i], \"Test\");\n    console.log(\"ERROR: \" + forbiddenRequestHeaders[i] + \" should have thrown exception\");\n  } catch(e) {\n  }\n}\n\n// Try valid header\nxhr.setRequestHeader(\"X-Foobar\", \"Test\");\n\nconsole.log(\"Done\");\n"]}